<?xml version="1.0" ?>
<ldi>
    <element name="org.jhotdraw.draw.DrawingView.getConstrainer()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setDrawing(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.TEXT_SHADOW_OFFSET_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getFontStyle(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getPerpendicularFillGrowth(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawHandles(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.editor_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawTool(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.editor_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getConstrainer()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invisibleConstrainer_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.visibleConstrainer_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getDrawing()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getHandleDetailLevel()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isEnabled()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.figureChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.figureRequestRemove(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.figureChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.figureRequestRemove(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.figureChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.figureRemoved(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.QuadTreeDrawing.quadTree_FE"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.canGroup()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setConstrainerVisible(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.acv_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureHandlesChanged()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureHandlesChanged()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.handleInvalidator_FE">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.figureHandlesChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.next(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.previous(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious(int)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replace(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceAll(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceAndFind(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.next(ActionEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT">
        <uses provider="org.jhotdraw.samples.teddy.regex.MatchType.CONTAINS_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.MatchType.FULL_WORD_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.MatchType.STARTS_WITH_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String,boolean,MatchType)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.replaceRange(String,int,int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.setLineWrap(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.TRANSFORM_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.fireStateChanged()_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainRectangle(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer()_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.getDialog()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridAction.getApplication()_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.EditGridPanel()_CN"/>
        <uses provider="org.jhotdraw.app.Application.addWindow(Window,View)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.setPropertiesPanelVisible(boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invisibleConstrainer_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.visibleConstrainer_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawConstrainer(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getConstrainer()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getInvisibleConstrainer()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invisibleConstrainer_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getVisibleConstrainer()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.visibleConstrainer_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getInvisibleConstrainer()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setConstrainerVisible(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setInvisibleConstrainer(Constrainer)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setVisibleConstrainer(Constrainer)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getInvisibleConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setConstrainerVisible(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setInvisibleConstrainer(Constrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setVisibleConstrainer(Constrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.EditGridAction(Application,DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.EditGridAction.app_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.app_FE">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.canUngroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.ACTIVE_VIEW_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.CONSTRAINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.CONSTRAINER_VISIBLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.CURSOR_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.DRAWING_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.ENABLED_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.HANDLE_DETAIL_LEVEL_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.INVISIBLE_CONSTRAINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.SCALE_FACTOR_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.VISIBLE_CONSTRAINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getHitStroke(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.createDisclosedComponent(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.repaintHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.repaintHandles()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.repaintHandles()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.acv_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritColorAttribute(IXMLElement,String,String)_CM">
    </element>
    <element name="org.jhotdraw.draw.event.HandleMulticaster.keyPressed(KeyEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$EastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthEastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthWestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.geometry_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthEastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthWestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$WestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addCornerResizeHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addEdgeResizeHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addResizeHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$EastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$NorthEastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$NorthHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$NorthWestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$SouthEastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$SouthHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$SouthWestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$WestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit.addCornerTransformHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit.addEdgeTransformHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit.addScaleMoveTransformHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit.addTransformHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.anchorFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.dragRect_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorFigure_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.dragRect_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.applySelectedColorToFigures()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.stateChanged(ChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.applySelectedColorToFigures()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JComponentPopup.menuSelectionChanged(boolean)_MT">
        <uses provider="org.jhotdraw.gui.JComponentPopup.setVisible(boolean)_MT"/>
        <uses provider="org.jhotdraw.gui.JComponentPopup.isAWTEventListenerPermitted_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JComponentPopup.setVisible(boolean)_MT">
        <uses provider="org.jhotdraw.gui.JComponentPopup.isAWTEventListenerPermitted_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.isTransformable()_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.isTransformable()_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit$TransformHandle.isTransformableCache_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.addNode(int,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawing_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.cachedPreferredSize_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.DrawView()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.NetView()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setScaleFactor(double)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.ODGView()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.PertView()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.SVGView()_CN">
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGDrawingPanel.getUndoRedoManager()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.setSize(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateColorWheel()_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.paintThumb(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.createDrawingComponent()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.loadDrawing(ProgressIndicator)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.validateViewTranslation()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingBufferNV_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingBufferV_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.createOpenRecentFileMenu(View)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.labels_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.doIt(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.updateWindowMenu()_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createFileMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createHelpMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createWindowMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.updateWindowMenu()_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createFileMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.init()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.init()_MT"/>
        <uses provider="org.jhotdraw.app.OSXApplication.initLookAndFeel()_MT"/>
        <uses provider="org.jhotdraw.app.OSXApplication.initScreenMenuBar()_MT"/>
        <uses provider="org.jhotdraw.app.OSXApplication.createModelActionMap(ApplicationModel)_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.show(View)_MT">
        <uses provider="org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createFileMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.FocusWindowAction(View)_CN">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.generateLookupTables()_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.alphas_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.angularQuantization_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.angulars_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.radialQuantization_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.radials_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateLookupTables()_MT"/>
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angularQuantization_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radialQuantization_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radials_FE"/>
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.getColorAt(int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.needsGeneration()_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.regenerateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateColorWheel()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.generateColorWheel()_MT">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.generateColorWheel()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI$TrackListener.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.BEZIER_PATH_LAYOUTER_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.START_DECORATION_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.TEXT_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.TEXT_SHADOW_COLOR_FE">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.selectAll()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.ID_FE">
    </element>
    <element name="org.jhotdraw.undo.UndoRedoManager$RedoAction.UndoRedoManager$RedoAction(UndoRedoManager)_CN">
    </element>
    <element name="org.jhotdraw.undo.UndoRedoManager$UndoAction.UndoRedoManager$UndoAction(UndoRedoManager)_CN">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installInternalFramePrefsHandler(Preferences,String,JInternalFrame,JDesktopPane)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window,int)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installToolBarPrefsHandler(Preferences,String,JToolBar)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Frame,boolean)_CN">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.initComponents()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectSameAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.initComponentDefaults(UIDefaults)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.CHILD_ALIGNMENT_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.BezierDemo.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.LayouterSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.format(String,Object[])_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.format(String,Object[])_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installTabbedPanePrefsHandler(Preferences,String,JTabbedPane)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPrefsHandler(Preferences,String,JTabbedPane)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installTabbedPanePrefsHandler(Preferences,String,JTabbedPane)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.AbstractToolBar.setEditor(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.create(Element)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.installDefaults()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.errorIndicatorForeground_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter$Format.RGB_HEX_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.createFormatterFactory(Format,boolean,boolean)_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.ColorFormatter(Format,boolean,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.getAllowsNullValue()_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.getLastUsedInputFormat()_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.lastUsedInputFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.getOutputFormat()_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.outputFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setAdaptive(boolean)_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.isAdaptive_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.lastUsedInputFormat_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.outputFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setAllowsNullValue(boolean)_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setOutputFormat(Format)_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.outputFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.ColorFormatter()_CN">
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.ColorFormatter(Format,boolean,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.allowsNullValue_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.isAdaptive_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.lastUsedInputFormat_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.outputFormat_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.prefs_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.rgbHexPattern_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.createFormatterFactory(Format,boolean,boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.getAllowsNullValue()_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.getLastUsedInputFormat()_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.getOutputFormat()_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setAdaptive(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setAllowsNullValue(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setLastUsedInputFormat(Format)_MT">
        <uses provider="org.jhotdraw.text.ColorFormatter.isAdaptive_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.lastUsedInputFormat_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.outputFormat_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.setOutputFormat(Format)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.putValue(String,Object)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getValue(String)_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.getTitle()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.Figure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addToSelection(Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addToSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getLayer()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getDecomposition()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getLayer()_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.RectangleFigure(double,double,double,double)_CN">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.dashes_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.readBounds(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.writeBounds(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTextColumns()_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.toGeneralPath()_MT">
    </element>
    <element name="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath.curveTo(double,double,double,double,double,double)_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath.getWindingRule()_CM"/>
        <uses provider="org.jhotdraw.geom.Geom.contains(Rectangle2D,Rectangle2D)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.hide()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.hide0()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.hide0()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.show0()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getWindingRule()_CM">
        <uses provider="org.jhotdraw.geom.BezierPath.windingRule_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setWindingRule(int)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath.windingRule_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.windingRule_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getWindingRule()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setWindingRule(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.elementObjects_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.identifiedElements_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.url_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.flattenStyles(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readDefsElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTSpanElement(IXMLElement,DefaultStyledDocument)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toTransform(IXMLElement,String)_MT">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextColumns()_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.toString()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.toString()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.document_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.styleManager_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.viewportStack_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toLength(IXMLElement,String,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readDrawingElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readGElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPageElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.performAction(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setAction(Action,Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readAElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setLiner(Liner)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.canConnect(Connector)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isConnectable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.canConnect(Connector,Connector)_MT">
        <uses provider="org.jhotdraw.draw.Figure.isConnectable()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.AbstractApplication()_CN">
        <uses provider="org.jhotdraw.app.AbstractApplication.isEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.isEnabled_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.labels_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.maxRecentFilesCount_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.model_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.prefs_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.createContainer()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getCopyright()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getModel()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getName()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getVersion()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.initLabels()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.labels_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.isEnabled()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.isEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setEnabled(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.isEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setModel(ApplicationModel)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.stop()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.configure(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getCopyright()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getModel()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getName()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getVersion()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.init()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.isEnabled()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.launch(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.setEnabled(boolean)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.stop()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getCopyright()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getModel()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getName()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.init()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.launch(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.setModel(ApplicationModel)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.stop()_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.getTransferDataFlavors()_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.isDataFlavorSupported(DataFlavor)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isTransformable_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isTransformable()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isTransformable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setTransformable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isTransformable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.get(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isTransformable()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isTransformable()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.origin_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.origin_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingBorderColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSource_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dragWindow_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingBorderColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingToolBar_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.handler_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.propertyListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.toolBarContListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.toolBarFocusListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createDragWindow(JToolBar)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingToolBar_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.isUpdating_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.addActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.JFontChooser()_CN">
        <uses provider="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.modelHandler_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.approveSelection()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.cancelSelection()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setModel(FontChooserModel)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setSelectedFont(Font)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setSelectionPath(TreePath)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,TreePath)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.DefaultFontChooserModel()_CN">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.DefaultFontChooserModel(Font[])_CN">
        <uses provider="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.setFonts(Font[])_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.doCollectionChanged()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.doFamilyChanged()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.installListeners(JFontChooser)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI.uninstallListeners(JFontChooser)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupAnchor()_CM">
        <uses provider="org.jhotdraw.gui.JPopupButton.popupAnchor_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_CM">
        <uses provider="org.jhotdraw.gui.JPopupButton.popupAnchor_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.popupAnchor_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupAnchor()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getBaseline()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getBaseline()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.setText(String)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getBaseline()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getAllFonts()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.future_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getModel()_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.future_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.future_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.modelHandler_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getAllFonts()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.loadAllFonts()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.setFonts(Font[])_CM">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.setFonts(Font[])_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeNodesChanged(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeNodesInserted(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeNodesRemoved(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeStructureChanged(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBaseline()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBaseline()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)_CM">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.FONT_UNDERLINE_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.getToolTipText(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.LINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.getTarget()_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.AWTClipboard(Clipboard)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()_CN"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.getTarget()_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()_CN">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ClipboardUtil.instance_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ClipboardUtil.setClipboard(Clipboard)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.ClipboardUtil.instance_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.getTarget()_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.JNLPClipboard(Object)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()_CN"/>
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.getTarget()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.DefaultODGFigureFactory.DefaultODGFigureFactory()_CN">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.changed()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.willChange()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.MovableChildFiguresSample$LabeledEllipseFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.samples.mini.MovableChildFiguresSample$LabeledEllipseFigure.MovableChildFiguresSample$LabeledEllipseFigure(MovableChildFiguresSample)_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.MovableChildFiguresSample$LabeledEllipseFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.MovableChildFiguresSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.clone()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.createDrawing()_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGZInputFormat.SVGZInputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.AbstractConnectionHandle.findConnectableFigure(Point2D,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.findConnectableConnector(Figure,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.findConnectableFigure(Point2D,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.repaintConnectors(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.hoverFigure_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.oldFocusOwner_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isConnectable()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isConnectable()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.isConnectable()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isConnectable()_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.target_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RemoveAction.RemoveAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.RemoveAction.RemoveAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RemoveAction.RemoveAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.RemoveAction.RemoveAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RemoveAction.RemoveAction(JComponent,String)_CN">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RemoveAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction$EventHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.dispose()_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractSelectedAction.setEditor(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeHrefAttribute(IXMLElement,SVGFigure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List_Figure_,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeHrefAttribute(IXMLElement,SVGFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePathElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectAttributes(IXMLElement,SVGFigure,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setActiveView(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActiveView()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.colorChooser_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT">
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.selectionChanged(FigureSelectionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.getInitialColor()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.buildChooser()_MT">
    </element>
    <element name="org.jhotdraw.gui.JComponentPopup.isAWTEventListenerPermitted_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readGElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readImageElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readUseElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getPaint(Figure,double)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getPaint(Figure,double)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSVGElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritColorAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.clone()_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.addDependency(DependencyFigure)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getDuration()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getPredecessors()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getStartTime()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getSuccessors()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.isDependentOf(TaskFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.removeDependency(DependencyFigure)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.setDuration(int)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.getDuration()_MT"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.getDuration()_MT"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.getStartTime()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.IncreaseHandleDetailLevelAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.increaseHandleDetaiLevel()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.increaseHandleDetaiLevel()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getHandleDetailLevel()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractCompositeFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertFactory.classTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.TaskFigure()_CN">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.ListFigure.ListFigure(Figure)_CN"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.setDuration(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.setDuration(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.toString()_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.getDuration()_MT"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.getStartTime()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.layouter.VerticalLayouter.layout(CompositeFigure,Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.toString()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.focusHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getActiveView()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.updateActiveView()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.setActiveView(DrawingView)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.remove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicRemove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.applyAttributes()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.excludedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.pickAttributes()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.excludedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getDefaultAttributes()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.defaultAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.excludedAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.excludedAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.clone()_MT">
        <uses provider="org.jhotdraw.draw.QuadTreeDrawing.quadTree_FE"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.QuadTreeDrawing.getChildren()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractDrawing.clone()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.defaultAttributes_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.focusHandler_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.handleAttributes_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.createActionMap()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.createInputMap()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.actionMap_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.inputMap_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.toolHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setTool(Tool)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.toolHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getTool()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.paintDragWindow(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.TOOL_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenDirectoryAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadDirectoryAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createOpenDirectoryChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.TextFigure()_CN">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor[],byte[])_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor[])_CN"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getExportChooser(View)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getImportChooser(View)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenChooser(View)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getSaveChooser(View)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.model_FE"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AppletApplication.AppletApplication(JApplet)_CN">
        <uses provider="org.jhotdraw.app.AbstractApplication.AbstractApplication()_CN"/>
        <uses provider="org.jhotdraw.app.AppletApplication.applet_FE"/>
    </element>
    <element name="org.jhotdraw.app.AppletApplication.applet_FE">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.view_FE">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.createEditMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.createFileMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.createHelpMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.createViewActionMap(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.createViewMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.createWindowMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.AppletApplication.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.AppletApplication.getComponent()_MT">
        <uses provider="org.jhotdraw.app.AppletApplication.applet_FE"/>
    </element>
    <element name="org.jhotdraw.app.AppletApplication.hide(View)_MT">
        <uses provider="org.jhotdraw.app.AppletApplication.applet_FE"/>
        <uses provider="org.jhotdraw.app.AppletApplication.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.AppletApplication.init()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.init()_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.initApplication(Application)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AppletApplication.isSharingToolsAmongViews()_MT">
    </element>
    <element name="org.jhotdraw.app.AppletApplication.show(View)_MT">
        <uses provider="org.jhotdraw.app.AppletApplication.applet_FE"/>
        <uses provider="org.jhotdraw.app.AppletApplication.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.initView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.createActionMap(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.propertyHandler_FE"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.target_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.propertyHandler_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.target_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.updateEnabled()_MT">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.target_FE"/>
        <uses provider="org.jhotdraw.gui.EditableComponent.isSelectionEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getExportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getImportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getSaveChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.draw.decoration.ArrowTip.getAngle()_MT">
    </element>
    <element name="org.jhotdraw.draw.decoration.ArrowTip.getInnerRadius()_MT">
    </element>
    <element name="org.jhotdraw.draw.decoration.ArrowTip.getOuterRadius()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.layout()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getLock()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.AbstractCompositeFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractCompositeFigure.validate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure$FigureHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing$QuadTreeEventHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createView()_CM">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isEnabled()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.viewListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateView(View,View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.oldFocusOwner_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.LoadRecentFileAction(Application,View,URI)_CN">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isMayCreateView()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.mayCreateView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setMayCreateView(boolean)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.mayCreateView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.mayCreateView_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isMayCreateView()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setMayCreateView(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateEnabled()_CM">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateEnabled()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.remove(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(int,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicRemove(Figure)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.fetchAvailableCharSets()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.workerThread_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileChooser()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileDialog()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.colorButtonPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.SVGDrawingPanelSample.open(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.SVGDrawingPanelSample.saveAs(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearFileAction.doIt(View)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.printQuartz(PrintableView)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.saveViewToURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.saveToFile(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.saveToFileAndReviewNext(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.exportView(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.loadViewFromURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.saveViewToURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.openView(View,URI)_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.start(List_URI_)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.addEdit(UndoableEdit)_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.newValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.source_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.getPresentationName()_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.presentationName_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.getSetter()_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.source_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.propertyNameToPresentationName(String)_CM">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.redo()_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.getSetter()_CM"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.newValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.source_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.setPresentationName(String)_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.presentationName_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.toString()_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.newValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.oldValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.undo()_CM">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.getSetter()_CM"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.oldValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.source_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,Object,Object)_CN">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyNameToPresentationName(String)_CM"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,String,Object,Object)_CN"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,String,Object,Object)_CN">
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.newValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.oldValue_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.presentationName_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.source_FE"/>
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.newValue_FE">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.oldValue_FE">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.presentationName_FE">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.propertyName_FE">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.source_FE">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.type_FE">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.addEdit(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.getPresentationName()_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.getSetter()_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.propertyNameToPresentationName(String)_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.redo()_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.setPresentationName(String)_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.toString()_MT">
    </element>
    <element name="org.jhotdraw.undo.PropertyChangeEdit.undo()_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.construct()_CM">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.done()_CM">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.failed(Throwable)_CM">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.finished()_CM">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.getError()_CM">
        <uses provider="org.jhotdraw.gui.BackgroundTask.error_FE"/>
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.run()_CM">
        <uses provider="org.jhotdraw.gui.BackgroundTask.construct()_CM"/>
        <uses provider="org.jhotdraw.gui.BackgroundTask.setError(Throwable)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.setError(Throwable)_CM">
        <uses provider="org.jhotdraw.gui.BackgroundTask.error_FE"/>
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.start()_CM">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.error_FE">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.construct()_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.done()_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.failed(Throwable)_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.finished()_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.getError()_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.run()_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.setError(Throwable)_MT">
    </element>
    <element name="org.jhotdraw.gui.BackgroundTask.start()_MT">
    </element>
    <element name="org.jhotdraw.gui.Dialogs$ColorTracker.Dialogs$ColorTracker(JColorChooser)_CN">
        <uses provider="org.jhotdraw.gui.Dialogs$ColorTracker.chooser_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Dialogs$ColorTracker.chooser_FE">
    </element>
    <element name="org.jhotdraw.gui.Dialogs$ColorTracker.color_FE">
    </element>
    <element name="org.jhotdraw.gui.Dialogs$ColorTracker.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.Dialogs$ColorTracker.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.Dialogs$ColorTracker.chooser_FE"/>
        <uses provider="org.jhotdraw.gui.Dialogs$ColorTracker.color_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Dialogs$ColorTracker.getColor()_MT">
        <uses provider="org.jhotdraw.gui.Dialogs$ColorTracker.color_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Dialogs.Dialogs()_CN">
    </element>
    <element name="org.jhotdraw.gui.Dialogs.showColorChooserDialog(JColorChooser,Component,String,Color)_MT">
        <uses provider="org.jhotdraw.gui.Dialogs$ColorTracker.Dialogs$ColorTracker(JColorChooser)_CN"/>
        <uses provider="org.jhotdraw.gui.Dialogs$ColorTracker.getColor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.addNotify()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getData()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.net.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.net.NetApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getData()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.initDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.initDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.app.View.clear()_CM">
    </element>
    <element name="org.jhotdraw.gui.JSheet.requestUserAttention(boolean)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.createUI(JComponent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderUI.ColorSliderUI(JSlider)_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Image,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintTicks(Graphics)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderUI.paintMajorTickForHorizSlider(Graphics,Rectangle,int)_MT"/>
        <uses provider="org.jhotdraw.color.ColorSliderUI.paintMajorTickForVertSlider(Graphics,Rectangle,int)_MT"/>
        <uses provider="org.jhotdraw.color.ColorSliderUI.paintMinorTickForHorizSlider(Graphics,Rectangle,int)_MT"/>
        <uses provider="org.jhotdraw.color.ColorSliderUI.paintMinorTickForVertSlider(Graphics,Rectangle,int)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.registerEventHandler()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.unregisterEventHandler()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingView)_CN">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.unregisterEventHandler()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Worker.finished()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addRecentURI(URI)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.clearRecentURIs()_CM">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createViewMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.View.read(URI,URIChooser)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.undo.UndoRedoManager.updateActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.TEXT_ANCHOR_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSwitchElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.updateEnabledState()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.canUngroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.FontFormatter(boolean)_CN">
        <uses provider="org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)_CM"/>
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.stringToValue(String)_MT">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toQuotedAndCommaSeparatedArray(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.fontFormatter_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toQuotedAndCommaSeparatedArray(String)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.clearGenericFontFamilies()_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.getAllowsUnknownFont()_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.setAllowsUnknownFont(boolean)_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.clearGenericFontFamilies()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.getAllowsUnknownFont()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.setAllowsUnknownFont(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextAreaElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.DefaultDrawingView()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.initComponents()_CM"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.handleInvalidator_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DefaultDrawingViewTransferHandler()_CN"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invisibleConstrainer_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.visibleConstrainer_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.clearSelection()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawing(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findFigure(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findHandle(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCompatibleHandles(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.cachedDrawingArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.cachedPreferredSize_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeFromSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.selectAll()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setScaleFactor(double)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.toggleSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLinearGradientElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readRadialGradientElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure(double,double,double,double)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double,double,double)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure(String)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawText(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.supportedFeatures_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedEditorKit.getViewFactory()_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setClone(Figure,T)_CM">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseExponents_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.isParseExponents_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys$TextAlign.CENTER_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys$TextAlign.END_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys$TextAlign.START_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys.TEXT_ALIGN_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.cachedDrawingArea_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.fireSelectionChanged(Set_Figure_,Set_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain$Handler.stateChanged(ChangeEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.basicGetBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.contains(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.trackEnd(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.trackStart(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.trackStep(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setBounds(int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBdescriptor()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEdescriptor()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getIcon(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMdescriptor()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPdescriptor()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawBackground(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawCanvas(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.Drawing.drawCanvas(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.DEFAULT_ARC_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformRestoreData()_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_CM">
        <uses provider="org.jhotdraw.color.ColorSliderUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)_CM">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$ModelHandler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.geometry_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.aspectRatio_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sb_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sx_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sy_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.TRANSFORM_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sx_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sy_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.setColorSpace(ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.COLOR_SPACE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.util.Images.hasAlpha(Image)_CM">
    </element>
    <element name="org.jhotdraw.util.Images.toBufferedImage(RenderedImage)_CM">
    </element>
    <element name="org.jhotdraw.util.Images.Images()_CN">
    </element>
    <element name="org.jhotdraw.util.Images.hasAlpha(Image)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.toBufferedImage(Image)_MT">
        <uses provider="org.jhotdraw.util.Images.hasAlpha(Image)_CM"/>
    </element>
    <element name="org.jhotdraw.util.Images.toBufferedImage(RenderedImage)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_CM">
    </element>
    <element name="org.jhotdraw.util.Images.split(Image,int,boolean)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.getScaledInstance(Image,int,int)_CM">
    </element>
    <element name="org.jhotdraw.util.Images.getScaledInstance(Image,int,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.bringToFront(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.contains(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.QuadTreeDrawing.quadTree_FE"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.draw(Graphics2D,Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.sendToBack(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.getChildren()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.getApplication()_MT">
        <uses provider="org.jhotdraw.draw.action.EditGridAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.ToggleGridAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.ToggleGridAction.updateViewState()_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.updateViewState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.updateViewState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplicationModel.initView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.initView(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.AbstractDrawingEditorAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.fireUndoableEditHappened(UndoableEdit)_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getEditor()_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.fireUndoableEditHappened(UndoableEdit)_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.getEditor()_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.getEditor()_CM">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.finishCreation(BezierFigure,DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.finishCreation(BezierFigure,DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar$ProxyPanel.paint(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.AbstractToolBar.clearDisclosedComponents()_MT"/>
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.dispose()_MT">
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.clearDisclosedComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.ToolsToolBar$SelectionToolButtonHandler(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.wasSelectedOnPressed_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.wasSelectedOnPressed_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.mouseClicked(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getHandleDetailLevel()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.wasSelectedOnPressed_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.wasSelectedOnPressed_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.popupButton_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.itemStateChanged(ItemEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.SVGDrawingPanel()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.SVGDrawingPanel.createDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.dispose()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getFileExtension()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getFileFilter()_MT">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.ExtensionFileFilter(String,String)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(InputStream,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(Transferable,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(OutputStream,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List_Figure_,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List_Figure_,double,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(File,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.removeAll()_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.getPopupMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getPopupActions()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setPopupActions(List_Action_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getPopupActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setPopupActions(List_Action_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.actions_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setPopupActions(List_Action_)_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.actions_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.actions_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.popupButton_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setPopupActions(List_Action_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()_MT">
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
        <uses provider="org.jhotdraw.gui.JPopupButton.removeAll()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.popupButton_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getComponents(float[])_MT">
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.CompositeColor(ColorSpace,float[],float)_CN">
        <uses provider="org.jhotdraw.color.CompositeColor.cs_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.cs_FE">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.fvalue_FE">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorComponents(ColorSpace,float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorComponents(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getComponents(ColorSpace,float[])_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Collection_Action_,Collection_Action_)_MT">
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Tool)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragDropEnd(DragSourceDropEvent)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportDone(JComponent,Transferable,int)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.scrolls_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragEnter(DragSourceDragEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragExit(DragSourceEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragGestureRecognized(DragGestureEvent)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportDone(JComponent,Transferable,int)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getVisualRepresentation(Transferable)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.imageOffset_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.scrolls_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.transferable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragOver(DragSourceDragEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.DefaultDrawingViewTransferHandler$DragHandler(Transferable,Point)_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.imageOffset_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.transferable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.imageOffset_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.scrolls_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.transferable_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragDropEnd(DragSourceDropEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragEnter(DragSourceDragEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragExit(DragSourceEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragGestureRecognized(DragGestureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragOver(DragSourceDragEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dropActionChanged(DragSourceDragEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.registerListeners()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.unregisterListeners()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer(DragGestureListener)_CN">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.gestured(JComponent,MouseEvent,int,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.registerListeners()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.unregisterListeners()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportedFigures_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Tool)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DnDMultiEditorSample.createDrawing()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DnDMultiEditorSample.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.DnDMultiEditorSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.keyPressed(KeyEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.BezierTool.mouseReleased(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.DefaultDragTracker()_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool.SelectionTool()_CN">
        <uses provider="org.jhotdraw.draw.tool.SelectionTool.trackerHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool.setTracker(Tool)_MT">
        <uses provider="org.jhotdraw.draw.tool.SelectionTool.trackerHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor$ToolHandler.areaInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor$ToolHandler.boundsInvalidated(ToolEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor$ToolHandler.toolStarted(ToolEvent)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.setActiveView(DrawingView)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.toolHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.event.ToolAdapter.areaInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolAdapter.boundsInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolAdapter.toolDone(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolAdapter.toolStarted(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.boundsInvalidated(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.boundsInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
        <uses provider="org.jhotdraw.draw.event.ToolListener.boundsInvalidated(ToolEvent)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.maybeFireBoundsInvalidated(Rectangle)_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.maybeFireBoundsInvalidated(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool$TrackerHandler.areaInvalidated(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool$TrackerHandler.boundsInvalidated(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool$TrackerHandler.areaInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool$TrackerHandler.boundsInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool$TrackerHandler.toolDone(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.SelectionTool.trackerHandler_FE">
    </element>
    <element name="org.jhotdraw.io.Base64.decodeFromFile(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.layoutContainer(Container)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.maximumLayoutSize(Container)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.minimumLayoutSize(Container)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.preferredLayoutSize(Container)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.addLayoutComponent(Component,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.addLayoutComponent(String,Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.getLayoutAlignmentX(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.getLayoutAlignmentY(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.invalidateLayout(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.layoutContainer(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.maximumLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.minimumLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.preferredLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.removeLayoutComponent(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.installUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.isEditable(MutableTreeNode)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.AbstractConnectionHandle.findConnectionTarget(Point2D,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.NewFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createViewMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.getRootPaneContainer()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getFrame()_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getRootPaneContainer()_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getTitle()_MT">
        <uses provider="org.jhotdraw.app.Application.getName()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createActionMap(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.draw.gui.JAttributeSlider.setAttributeValue(Double)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenURIsFromMainArgs(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.launch(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenURIsFromMainArgs(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.Application.start(List_URI_)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.start(List_URI_)_MT">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(String,PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractSelectedAction.registerEventHandler()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractSelectedAction.unregisterEventHandler()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.Figure.getDrawingArea()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createToggleGridButton(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.updateEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setConstrainerVisible(boolean)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setInvisibleConstrainer(Constrainer)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invisibleConstrainer_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setVisibleConstrainer(Constrainer)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.visibleConstrainer_FE"/>
    </element>
    <element name="org.jhotdraw.util.Images.createImage(URL)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.applySelectedFontToFigures()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.applySelectedFontToFigures()_MT"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.isUpdating_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.isUpdating_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getHandleAttribute(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.handleAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.activeView_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction$EventHandler.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.activeView_FE">
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction$EventHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.updateEnabledState()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.fireUndoableEditHappened(UndoableEdit)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.isUpdatEnabledState()_CM">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.registerEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.unregisterEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.isUpdatEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.registerEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.unregisterEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction$EventHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateViewState()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction$EventHandler.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.dispose()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.isUpdatEnabledState()_CM">
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.activeView_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.unregisterEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.activeView_FE"/>
        <uses provider="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateViewState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.isUpdatEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.unregisterEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateViewState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.isUpdatEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.registerEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AbstractSelectedAction.activeView_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.unregisterEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.action.AbstractSelectedAction.activeView_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.updateEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.isUpdatEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.registerEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.unregisterEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createActionMap()_CM">
        <uses provider="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.IncreaseHandleDetailLevelAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createInputMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.actionMap_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.inputMap_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getActionMap()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.actionMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getInputMap()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.inputMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setActionMap(ActionMap)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.actionMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setInputMap(InputMap)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.inputMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActionMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getInputMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActionMap(ActionMap)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setInputMap(InputMap)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.ACTION_MAP_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.INPUT_MAP_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActionMap(ActionMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setInputMap(InputMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditorProxy.getActionMap()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditorProxy.getInputMap()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getInputMap()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditorProxy.setActionMap(ActionMap)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setActionMap(ActionMap)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingEditorProxy.setInputMap(InputMap)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setInputMap(InputMap)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ClipboardUtil.setClipboard(Clipboard)_CM">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getSelectedURI()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM"/>
        <uses provider="org.jhotdraw.app.Application.getExportChooser(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.getThumbIcon()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.paint(Graphics,JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.buildChooser()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.buildChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.buildChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Icon,Icon,Icon,Icon,Icon)_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Icon[])_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Icon[])_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Icon[])_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Image,int,boolean)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(Image[])_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.PaletteSliderThumbIcon(String,int,boolean)_CN">
        <uses provider="org.jhotdraw.util.Images.createImage(URL)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.D_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.DI_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.E_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.EP_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.FOCUS_RING_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.I_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.generateMissingIcons()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.getIcon(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderThumbIcon.paintIcon(Component,Graphics,int,int)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.isProposeFileName()_CM">
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.setProposeFileName(boolean)_CM">
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View,boolean)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.isProposeFileName()_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.setProposeFileName(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureChanged()_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetFactory.classTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()_CN">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.DECORATOR_INSETS_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritFontSizeAttribute(IXMLElement,String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toColor(IXMLElement,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toColor(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getImageData()_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setImageData(byte[])_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.bufferedImage_FE">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.imageData_FE">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.drawFigure(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getBufferedImage()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getImageData()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getImageData()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImage(byte[],BufferedImage)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImageData(byte[])_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedHitShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedTransformedShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBufferedImage()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getImageData()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.dashes_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFillColor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFontSize()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextColor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setFontSize(float)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.C0_MASK_FE">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List_Figure_,AffineTransform,Dimension)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setStops(double[],Color[],double[])_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setStops(double[],Color[],double[])_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setCoordinates(Point2D[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setRotates(double[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.LinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_CN">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.RadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_CN">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.gridConstrainer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor[])_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.repaintDrawingArea(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Icon[])_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.FileIconsSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.TEXT_ALIGNMENT_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setDrawingDoubleBuffered(boolean)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawingBufferNV_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawingBufferV_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.DRAWING_DOUBLE_BUFFERED_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setDrawingDoubleBuffered(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setViewRenderingHints(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.setContents(Transferable,ClipboardOwner)_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.getContents(Object)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.setContents(Transferable,ClipboardOwner)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.getContents(Object)_CM">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.setContents(Transferable,ClipboardOwner)_CM">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.getContents(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.setContents(Transferable,ClipboardOwner)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.getContents(Object)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.setContents(Transferable,ClipboardOwner)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.AnimationSample.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.mini.AnimationSample.main(String[])_CM">
    </element>
    <element name="org.jhotdraw.samples.mini.AnimationSample.AnimationSample()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.DefaultDrawingView()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawingDoubleBuffered(boolean)_CM"/>
        <uses provider="org.jhotdraw.samples.mini.AnimationSample.initComponents()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.mini.AnimationSample.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.AnimationSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String[],String[])_CN">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.getFileExtensions()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.fireUndoableEditHappened(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getLock()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.read(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.write(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.ODGPropertiesPanel()_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.EditGridPanel()_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.thetaField_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.EditCanvasPanel()_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximum()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.max_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimum()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.min_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.max_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.min_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setAllowsNullValue(boolean)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximum(Comparable)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.max_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimum(Comparable)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.min_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.stringToValue(String)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.valueToString(Object)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter()_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double)_CN">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.max_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.min_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximum()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimum()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setAllowsNullValue(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximum(Comparable)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimum(Comparable)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.stringToValue(String)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.valueToString(Object)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getUnit()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setUnit(String)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.unit_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getUnit()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setUnit(String)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(int,Point2D,Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.get(int,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.indexOfOutermostNode()_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.set(int,int,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(int,Point2D,Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.curveTo(double,double,double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.get(int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPathIterator(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPathIterator(AffineTransform,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPointOnPath(double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.outlineContains(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.set(int,int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.chop(Shape,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getLengthOfPath(double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getRelativePositionOnPath(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getLengthOfPath(double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getRelativePositionOnPath(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.addCurveTo(Point2D[],BezierPath,double,boolean)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.findCorners(List_Point2D_,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(List_Point2D_,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.toPolygonArray()_CM">
    </element>
    <element name="org.jhotdraw.samples.mini.BezierDemo$Canvas.paintComponent(Graphics)_MT">
        <uses provider="org.jhotdraw.geom.Bezier.fitBezierPath(BezierPath,double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.mini.BezierDemo.BezierDemo()_CN">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.addPolyline(Collection_Point2D_)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.curveTo(double,double,double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.lineTo(double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.moveTo(double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.quadTo(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setTo(BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.addPolyline(Collection_Point2D_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.setAction(Action,Rectangle)_MT"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.createFormatterFactory()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_CM"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.createFormatterFactory(Format,boolean,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_SHORT_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.gui.JPopupButton.setAction(Action,Rectangle)_MT"/>
        <uses provider="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_CM"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.createFormatterFactory(Format,boolean,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double)_CN"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_SHORT_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.rgbIntegerPattern_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getDecomposition()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.validate()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.duplicate()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTextLayout()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.FONT_UNDERLINE_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.validate()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.write(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.getView()_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.TaskFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.TaskFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getFigureDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,double[],ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.createSelectionActions(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.mouseDragged(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.mouseReleased(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ToolsToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.setUseFileDialog(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar.createSelectionActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ToolsToolBar$SelectionToolButtonHandler.ToolsToolBar$SelectionToolButtonHandler(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.transformOwner_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.createSecondaryHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.dispose()_MT">
        <uses provider="org.jhotdraw.draw.handle.BezierNodeHandle.transformOwner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.isCombinableWith(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.trackDoubleClick(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.BezierNodeHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.Handle.dispose()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker$EventHandler.areaInvalidated(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker$EventHandler.handleRequestRemove(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker$EventHandler.handleRequestSecondaryHandles(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.sendToBack(Figure)_MT">
    </element>
    <element name="org.jhotdraw.app.View.execute(Runnable)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeAllChildren()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeNotify()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawingBufferNV_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawingBufferV_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingNonvolatileBuffered(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawDrawing(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setViewRenderingHints(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawingBufferNV_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingVolatileBuffered(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawDrawing(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setViewRenderingHints(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawingBufferV_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isWindows_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.invalidate()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.ungroupFigures(DrawingView,CompositeFigure)_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.canUngroup()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.canGroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getToolTipText(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getEditor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.combineActionPerformed(ActionEvent)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.splitActionPerformed(ActionEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.combineActionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.combinePaths(DrawingView,CompositeFigure,Collection_Figure_,int)_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.splitActionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canUngroup()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.splitPath(DrawingView,CompositeFigure,List_Figure_,int[],int[])_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canUngroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor,SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics,Font)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenNamed(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenNamed(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.MatchType.CONTAINS_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.MatchType.FULL_WORD_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.MatchType.STARTS_WITH_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findNext()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.MatchType.CONTAINS_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.MatchType.FULL_WORD_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.MatchType.STARTS_WITH_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious(int)_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String,boolean,MatchType)_CN">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.unread_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.read()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.unread(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.rolloverTable_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToRollover(Component)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addEdgeResizeHandles(Figure,Collection_Handle_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addResizeHandles(Figure,Collection_Handle_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.TransformHandleKit.addEdgeTransformHandles(Figure,Collection_Handle_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.showPopup(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.popupAnchor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.colorChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setPropertiesPanelVisible(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.getScaleFactor()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.isGridVisible()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.setGridVisible(boolean)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setConstrainerVisible(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.isGridVisible()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.setScaleFactor(double)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setScaleFactor(double)_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.getScaleFactor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.SVGApplet()_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(List_Point_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(List_Double_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(List_Double_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPolygon(List_Point_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)_CM">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)_CM">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(List_Point_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(List_Double_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(List_Double_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPolygon(List_Point_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,boolean,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,AttributeKey_Stroke_,AttributeKey_Color_,AttributeKey_Stroke_,AttributeKey_Color_,AttributeKey_Stroke_,AttributeKey_Color_,AttributeKey_Stroke_,AttributeKey_Color_)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,boolean,boolean)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.outline_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.TRANSFORM_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.contains(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.TRANSFORM_FE"/>
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.outline_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackEnd(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackStart(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackStep(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.updateBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.outline_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.contains(Rectangle2D,Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupAlpha()_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.getPopupMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupAlpha(float)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.getPopupMenu()_MT"/>
        <uses provider="org.jhotdraw.gui.JPopupButton.getPopupAlpha()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addNotify(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setEnabled(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.handleAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.activeHandle_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getActiveHandle()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.activeHandle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getEditor()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setActiveHandle(Handle)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.activeHandle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getActiveHandle()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getEditor()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setActiveHandle(Handle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.ACTIVE_HANDLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setActiveHandle(Handle)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.createDisclosedComponent(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.dragRect_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.cappedPath_FE">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.drawCaps(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.END_DECORATION_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.START_DECORATION_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath.get(int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.drawCaps(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findNode(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getCappedPath()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.readPoints(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.removeNode(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.writePoints(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setEndPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setPoint(int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setStartPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Shapes.outlineContains(Shape,Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.paintSafely(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.paintSafely(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.createFormatterFactory()_CM">
        <uses provider="org.jhotdraw.text.ColorFormatter.createFormatterFactory(Format,boolean,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_SHORT_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.ColorFormatter(Format,boolean,boolean)_CN">
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_HEX_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.isAdaptive_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.lastUsedInputFormat_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.outputFormat_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.createFormatterFactory()_MT">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.stringToValue(String)_MT">
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_HEX_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.rgbHexPattern_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.rgbIntegerPattern_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.setLastUsedInputFormat(Format)_MT"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_SHORT_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.rgbIntegerShortPattern_FE"/>
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.valueToString(Object)_MT">
        <uses provider="org.jhotdraw.text.ColorFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.isAdaptive_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter.outputFormat_FE"/>
        <uses provider="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_SHORT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_AS_RGB_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_AS_RGB_COLUMN_COUNT_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter$Format.RGB_INTEGER_SHORT_FE">
    </element>
    <element name="org.jhotdraw.text.ColorFormatter.rgbIntegerShortPattern_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.readAttributes(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.readAttributes(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.readAttributes(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getFigureDrawBounds()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getStrokeMiterLimitFactor()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.DECORATOR_INSETS_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.LAYOUT_INSETS_FE">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.LAYOUT_INSETS_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.add(DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.focusHandler_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.updateActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.findView(Container)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.remove(DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.focusHandler_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.updateActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.Figure.getBounds()_CM">
    </element>
    <element name="org.jhotdraw.draw.ListFigure.ListFigure(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.quadTree_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArc(double,double)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)_CM"/>
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getStrokeTotalMiterLimit(Figure)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKeys.IS_STROKE_MITER_LIMIT_FACTOR_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.IS_STROKE_DASH_FACTOR_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.IS_STROKE_MITER_LIMIT_FACTOR_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.STROKE_MITER_LIMIT_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.drawFill(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getArcWidth()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getBounds()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.read(DOMInput)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getArcHeight()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArc(double,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)_CM">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)_CM">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.ARC_HEIGHT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.ARC_WIDTH_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawFigure(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.TEXT_SHADOW_COLOR_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.TEXT_SHADOW_OFFSET_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStroke(Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.END_DECORATION_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getStroke(Figure)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalMiterLimit(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.IS_STROKE_DASH_FACTOR_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getStrokeTotalMiterLimit(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.TEXT_SHADOW_COLOR_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.TEXT_SHADOW_OFFSET_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStroke(Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,double[],ResourceBundleUtil)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.Main.COPYRIGHT_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.EditableComponent.clearSelection()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.ClipboardUtil.getClipboard()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.ClipboardUtil.getClipboard()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.target_FE"/>
        <uses provider="org.jhotdraw.gui.EditableComponent.delete()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.deleteNextChar(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.EditableComponent.duplicate()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.ClipboardUtil.getClipboard()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.EditableComponent.selectAll()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.CopyAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.CutAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.target_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.PasteAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.LinearGradient()_CN">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.x1_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.x2_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.y1_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.y2_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setGradientVector(double,double,double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setRelativeToFigureBounds(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.RadialGradient()_CN">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.cx_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.cy_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.r_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setGradientCircle(double,double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setRelativeToFigureBounds(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys$TextAnchor.END_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys$TextAnchor.MIDDLE_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys$TextAnchor.START_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGAttributeKeys.TEXT_ANCHOR_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.importData(JComponent,Transferable)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.elementObjects_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.identifiedElements_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.styleManager_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.viewportStack_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(Transferable,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.SVGCreateFromFileTool(ImageHolderFigure,CompositeFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileChooser_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.workerThread_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.createFigure()_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileChooser()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileChooser_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.url_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(Transferable,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZInputFormat.read(InputStream,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_CM"/>
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getType()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DefaultDrawingViewTransferHandler()_CN">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.canImport(JComponent,DataFlavor[])_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getSourceActions(JComponent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getVisualRepresentation(Transferable)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDefaultStyleElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readLayerSetElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readListStyleElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMarkerElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterPageElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readPageLayoutElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStyleElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.OSXClipboard.OSXClipboard(Clipboard)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.AWTClipboard(Clipboard)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.OSXClipboard.getContents(Object)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.getContents(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.createTransferable(JComponent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportAsDrag(JComponent,InputEvent,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.getSourceActions(JComponent)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.DefaultDrawingViewTransferHandler$DragHandler(Transferable,Point)_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer(DragGestureListener)_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$SwingDragGestureRecognizer.gestured(JComponent,MouseEvent,int,int)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportDone(JComponent,Transferable,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.createTransferable(DrawingView,Set_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler.exportedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.createSelectionActions(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.addDefaultCreationButtonsTo(JToolBar,DrawingEditor,Collection_Action_,Collection_Action_)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.END_DECORATION_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ButtonFactory.createSelectionActions(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.addDefaultCreationButtonsTo(JToolBar,DrawingEditor,Collection_Action_,Collection_Action_)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.END_DECORATION_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setEndConnector(Connector)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)_CM"/>
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setStartConnector(Connector)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)_CM"/>
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.addNotify(Drawing)_CM">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.bounds_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.editable_FE">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.editable_FE">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.textLayout_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.handleConnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.handleDisconnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.removeNotify(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector,Connector)_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createEditMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createFileMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createHelpMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createViewMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createWindowMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getActionMap(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getExportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getImportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getOpenChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getSaveChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawText(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.FONT_UNDERLINE_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.readBounds(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN">
        <uses provider="org.jhotdraw.draw.AttributeKeys.END_DECORATION_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.START_DECORATION_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.FONT_UNDERLINE_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKeys.TEXT_ALIGNMENT_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toPath(BezierPath[])_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextShape()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.TEXT_ANCHOR_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.FONT_UNDERLINE_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.isTextOverflow_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.isTextOverflow_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.isTextOverflow()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.isTextOverflow_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.isTextOverflow()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.isTextOverflow()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.isTextOverflow()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.isTextOverflow()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint()_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.setPrettyPrint(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE"/>
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.construct()_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.run()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.Main.main(String[])_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.ODGApplicationModel()_CN"/>
        <uses provider="org.jhotdraw.app.Application.launch(String[])_CM"/>
        <uses provider="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.Main.Main()_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.ODGApplicationModel()_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZInputFormat.SVGZInputFormat()_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZInputFormat.getFileFilter()_MT">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.ExtensionFileFilter(String,String[])_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addPalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.removePalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.removeWindow(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.addPalette(Window)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.removePalette(Window)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addPalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removePalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removeWindow(Window)_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.failed(Throwable)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Application)_CN">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Frame,boolean)_CN"/>
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.viewListener_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.view_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.view_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.hide(View)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.hide(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.hide(View)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.ConnectingFiguresSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.EditorSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.addWindow(Window,View)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.DrawingPanel()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.NetPanel()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.PertPanel()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.getFiguresFrontToBack()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.draw(Graphics2D,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigure(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureExcept(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigures(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFiguresWithin(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.getFiguresFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.odg.action.CombineAction.CombineAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.odg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.ODGDrawingPanel()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.bringToFront(Figure)_CM">
        <uses provider="org.jhotdraw.draw.AbstractCompositeFigure.basicRemove(Figure)_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.bringToFront(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.bringToFront(DrawingView,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.app.View.dispose()_MT">
    </element>
    <element name="org.jhotdraw.app.Disposable.dispose()_CM">
    </element>
    <element name="org.jhotdraw.app.Disposable.dispose()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.clearSelection()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.delete()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.duplicate()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.isSelectionEmpty()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.selectAll()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.SELECTION_EMPTY_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.clearSelection()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.delete()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.duplicate()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.isSelectionEmpty()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.selectAll()_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getPerpendicularDrawGrowth(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.clone()_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$DurationAdapter.attributeChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$NameAdapter.attributeChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.createDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGZInputFormat.SVGZInputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.initDrawing(Drawing)_CM">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.initDrawing(Drawing)_CM">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.initDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.initDrawing(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.delete()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawBackground(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getBackgroundPaint(int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setHandleDetailLevel(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.validateHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.get(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.set(Figure,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.getFont(Figure)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getFontStyle(Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getPreferredSize()_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.cachedPreferredSize_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getDrawingArea()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFigure(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findHandle(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.areaInvalidated(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.areaInvalidated(HandleEvent)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.attributeChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.equals(Object)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureAdded(CompositeFigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureAdded(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureHandlesChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureRemoved(CompositeFigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureRemoved(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureRequestRemove(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.focusGained(FocusEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.focusLost(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.handleRequestRemove(HandleEvent)_MT">
        <uses provider="org.jhotdraw.draw.handle.Handle.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.handleRequestSecondaryHandles(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setUndoable(Figure,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_,T)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_,T,boolean)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_,T,boolean,ResourceBundleUtil)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingNonvolatileBuffered(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingVolatileBuffered(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.drawCanvas(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.requestFocus()_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.paintComponent(Graphics)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawBackground(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawDrawing(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawHandles(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawTool(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawConstrainer(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawCanvas(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.setViewRenderingHints(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawDrawingNonvolatileBuffered(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.drawDrawingVolatileBuffered(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.isWindows_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.printComponent(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidateHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getClone(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setClone(Figure,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getActiveHandle()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintThumb(Graphics)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStopColors_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStops_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintTrack(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.updateRules()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.disabledStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.disabledStops_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_COLUMN_COUNT_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI$CSUIPropertyChangeHandler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.ColorSliderUI(JSlider)_CN">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.calculateThumbLocation()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.calculateTickRect()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.calculateTrackRect()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.createPropertyChangeListener(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.createTrackListener(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getTickLength()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.installDefaults(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintColorTrack(Graphics,int,int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintFocus(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMajorTickForHorizSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMajorTickForVertSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMinorTickForHorizSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMinorTickForVertSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintThumb(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintTrack(Graphics)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderUI.paintColorTrack(Graphics,int,int,int,int,int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.WheelsAndSlidersMain()_CN">
        <uses provider="org.jhotdraw.color.JColorWheel$Type.POLAR_FE"/>
        <uses provider="org.jhotdraw.color.JColorWheel$Type.SQUARE_FE"/>
    </element>
    <element name="org.jhotdraw.color.JColorWheel.createWheelProducer(int,int)_MT">
        <uses provider="org.jhotdraw.color.JColorWheel.type_FE"/>
    </element>
    <element name="org.jhotdraw.color.JColorWheel.paintWheel(Graphics2D)_MT">
        <uses provider="org.jhotdraw.color.JColorWheel.createWheelProducer(int,int)_MT"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.needsGeneration()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.getColorAt(int,int)_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.getColorLocation(float[])_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.needsGeneration()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE">
    </element>
    <element name="org.jhotdraw.color.JColorWheel$Type.POLAR_FE">
    </element>
    <element name="org.jhotdraw.color.JColorWheel$Type.SQUARE_FE">
    </element>
    <element name="org.jhotdraw.color.JColorWheel.type_FE">
    </element>
    <element name="org.jhotdraw.color.JColorWheel.setType(Type)_MT">
        <uses provider="org.jhotdraw.color.JColorWheel.createWheelProducer(int,int)_MT"/>
        <uses provider="org.jhotdraw.color.JColorWheel.type_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupMenu()_MT">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupMenu(JPopupMenu)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.handleMousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.togglePopup(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_MT">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.unconfigureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.putValue(String,Object)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.TogglePaletteAction(OSXApplication,Window,String)_CN">
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.putValue(String,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.popupBecameInvisible_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.togglePopup(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.showPopup(MouseEvent)_MT"/>
        <uses provider="org.jhotdraw.gui.JPopupButton.popupBecameInvisible_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.getApplication()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initApplication(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_CM">
        <uses provider="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)_CM">
        <uses provider="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.app_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.readObject(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.read(DOMInput)_CM">
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.read(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.setText(String)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKeys.TEXT_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityWindow.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.ActivityMonitorSample.startPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.ActivityModel.setNote(String)_CM"/>
        <uses provider="org.jhotdraw.samples.mini.ActivityMonitorSample.count_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.ActivityMonitorSample.count_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.putPropertyNameModifier(String,String[])_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.removePropertyNameModifier(String)_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.removePropertyNameModifier(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.createHandles(SVGPathFigure,int)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removeWindow(Window)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addWindow(Window,View)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getUIClassID()_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setUI(FontChooserUI)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.joinSegments(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.splitSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.joinSegments(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.splitSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.findSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.joinSegments(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.splitSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.findSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.joinSegments(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.splitSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.findSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.joinSegments(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.splitSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.findSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.joinSegments(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.splitSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.getImageData()_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.setImage(byte[],BufferedImage)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.getImageData()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.setImage(byte[],BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.findCorners(List_Point2D_,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(BezierPath,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(List_Point2D_,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(Point2D[],double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.splitAtCorners(List_Point2D_,double,double)_CM">
    </element>
    <element name="org.jhotdraw.gui.JActivityView.updateError()_MT">
        <uses provider="org.jhotdraw.gui.JActivityView.model_FE"/>
        <uses provider="org.jhotdraw.gui.JActivityView.updateLabelVisibility()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityView.updateWarning()_MT">
        <uses provider="org.jhotdraw.gui.JActivityView.model_FE"/>
        <uses provider="org.jhotdraw.gui.JActivityView.updateLabelVisibility()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityView.updateLabelVisibility()_MT">
        <uses provider="org.jhotdraw.gui.JActivityView.model_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator$Handler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.JActivityIndicator()_CN">
        <uses provider="org.jhotdraw.gui.JActivityIndicator.setActivityManager(ActivityManager)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.setActivityManager(ActivityManager)_MT">
        <uses provider="org.jhotdraw.gui.JActivityIndicator.updateActivityModels()_MT"/>
        <uses provider="org.jhotdraw.gui.JActivityIndicator.updateProgressBar()_MT"/>
        <uses provider="org.jhotdraw.gui.JActivityIndicator.updateToolTip()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateActivityModels()_MT">
        <uses provider="org.jhotdraw.gui.JActivityIndicator.updateIndeterminate()_MT"/>
        <uses provider="org.jhotdraw.gui.JActivityIndicator.updateProgressBar()_MT"/>
        <uses provider="org.jhotdraw.gui.JActivityIndicator.updateToolTip()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateIndeterminate()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateProgressBar()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateToolTip()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.installDefaults()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.paintBackground(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBoolean(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.createHandles(SVGPathFigure,int)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.executor_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.dispose()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.setTitle(String)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.setApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getEndPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getStartPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.cappedPath_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.validate()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.cappedPath_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.writePoints(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.addNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getBezierPath()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.readPoints(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.readPoints(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.setEndConnector(Connector)_MT"/>
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.setStartConnector(Connector)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.removeNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setEndPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setPoint(int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setStartPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.validate()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure.writePoints(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.writePoints(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.END_DECORATION_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKeys.START_DECORATION_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setNode(int,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.areaInvalidated(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPaint(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.invalidate()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKeys.getStrokeTotalWidth(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.appendParagraph(Path2D,AttributedCharacterIterator,float,float,float,float,float[],int)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.AbstractView()_CN">
        <uses provider="org.jhotdraw.app.AbstractView.preferences_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.preferences_FE">
    </element>
    <element name="org.jhotdraw.undo.UndoRedoManager.addEdit(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,Object,Object)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.getToolTipText(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.CombineAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.canGroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.groupFigures(DrawingView,CompositeFigure,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.ungroupFigures(DrawingView,CompositeFigure)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.SplitAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.canUngroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.groupFigures(DrawingView,CompositeFigure,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.ungroupFigures(DrawingView,CompositeFigure)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT"/>
        <uses provider="org.jhotdraw.undo.PropertyChangeEdit.PropertyChangeEdit(Object,String,Object,Object)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getUndoRedoManager()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setUndoRedoManager(UndoRedoManager)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.ARC_HEIGHT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.ARC_WIDTH_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)_MT">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.viewListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.viewListener_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int)_CN">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)_CN">
    </element>
    <element name="org.jhotdraw.gui.JActivityView.JActivityView(ActivityModel)_CN">
        <uses provider="org.jhotdraw.gui.JActivityView.setModel(ActivityModel)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityView.model_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityView.getModel()_MT">
        <uses provider="org.jhotdraw.gui.JActivityView.model_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityView.setModel(ActivityModel)_MT">
        <uses provider="org.jhotdraw.gui.JActivityView.model_FE"/>
        <uses provider="org.jhotdraw.gui.JActivityView.updateProperties(PropertyChangeEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityView.updateProperties(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.gui.JActivityView.updateError()_MT"/>
        <uses provider="org.jhotdraw.gui.JActivityView.updateWarning()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityWindow.getActivityManager()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityWindow.setActivityManager(ActivityManager)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPath(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGFigure.isEmpty()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.SVGRectRadiusHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.OFFSET_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.locate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.locate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.FILL_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGAttributeKeys.STROKE_GRADIENT_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.defaultAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.groupFigures(DrawingView,CompositeFigure,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.ungroupFigures(DrawingView,CompositeFigure)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.PaletteFontChooserSelectionPanel()_CN">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getBaseline()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getTextLayout()_MT"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.updateViewTitle(View,JInternalFrame)_CM">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)_CM">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.initLookAndFeel()_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawLiveConnectApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.getExtensions()_CM">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.extensions_FE"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.makeAcceptable(File)_CM">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.defaultExtension_FE"/>
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.accept(File)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.ExtensionFileFilter(String,String)_CN">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.defaultExtension_FE"/>
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.description_FE"/>
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.extensions_FE"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.ExtensionFileFilter(String,String[])_CN">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.defaultExtension_FE"/>
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.description_FE"/>
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.extensions_FE"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.defaultExtension_FE">
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.description_FE">
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.extensions_FE">
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.accept(File)_MT">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.extensions_FE"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.getDescription()_MT">
        <uses provider="org.jhotdraw.gui.filechooser.ExtensionFileFilter.description_FE"/>
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.getExtensions()_MT">
    </element>
    <element name="org.jhotdraw.gui.filechooser.ExtensionFileFilter.makeAcceptable(File)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_MT">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.createDialog(URIChooser,Component)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.showDialog(URIChooser,Component)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.saveViewToURI(View,URI,URIChooser)_MT"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication$DropFileTransferHandler.canImport(JComponent,DataFlavor[])_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$DropFileTransferHandler.importData(JComponent,Transferable)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createEditMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createMenuBar(View)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.show(View)_MT">
        <uses provider="org.jhotdraw.app.MDIApplication.updateViewTitle(View,JInternalFrame)_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createMenuBar(View)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.initPalettes(LinkedList_Action_)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createEditMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createHelpMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createMenuBar(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.show(View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.MDIApplication$WindowMenuHandler(JMenu,View)_CN">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createModelActionMap(ApplicationModel)_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createViewActionMap(View)_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String,String)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String,String,String,int)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String,String,int)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.addChild(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.equalsXMLElement(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.findAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeType(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFirstChildNamed(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.insertChild(IXMLElement,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setAttribute(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setName(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getDoubleAttribute(String,String,double)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getDoubleAttribute(String,String,double)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getDoubleAttribute(String,String,double)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getDoubleAttribute(String,String,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.geometry_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.activate(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.deactivate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setActiveHandle(Handle)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.eventHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.HandleMulticaster.keyPressed(KeyEvent)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.keyReleased(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.mouseExited(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$EastHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthEastHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthWestHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.aspectRatio_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sb_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sx_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sy_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthEastHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthWestHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$WestHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultHandleTracker.dragLocation_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getSelectedURI()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.openViewFromURI(View,URI,URIChooser)_MT"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenRecentFileAction.openView(View)_MT"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.openView(View)_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.openViewFromURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicAdd(int,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,boolean)_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.Constrainer.rotateAngle(double,RotationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.translatePoint(Point2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.translateRectangle(Rectangle2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getBackgroundPaint(int,int)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.setConstrainer(GridConstrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.getTheta()_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setTheta(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.thetaField_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.thetaLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing,List_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.systemNodeForPackage(Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.userNodeForPackage(Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.systemNodeForPackage(Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.userNodeForPackage(Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,Icon,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOpenSheet(JFileChooser,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSaveSheet(JFileChooser,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.uninstallSheet()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.installSheet()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.show()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.show0()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Application)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.TeddyView()_CN">
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedEditorKit.getViewFactory()_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.updateView()_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.updateView()_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.updateView()_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.read(URI,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.write(URI,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createActionMap(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.FindAction.FindAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.read(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView.read(URI,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.write(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView.write(URI,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.FindAction(Application,View)_CN">
    </element>
    <element name="org.jhotdraw.app.AbstractView.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.app.View.isEmpty()_CM">
    </element>
    <element name="org.jhotdraw.app.View.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.readPoints(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample.LabeledLineConnectionFigureSample()_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.MultiEditorSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.CreationToolSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.DefaultDOMStorableSample$MyObject(DefaultDOMStorableSample)_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.DefaultDOMStorableSample$MyObject(String)_CN">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.getName()_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.setName(String)_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample.main(String[])_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.DefaultDOMStorableSample$MyObject(String)_CN"/>
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.getName()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.mini.MultiEditorSample.createDrawing()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.mini.MultiEditorSample.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,int)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getInteger(String)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.fireColorChanged(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.constraintBeforeFloating_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.calculateConstraint()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.constraintBeforeFloating_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSource_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingConstraint(Component,Point)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.constraintBeforeFloating_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSource_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloating(boolean,Point)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSource_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dragWindow_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingToolBar_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.propertyListener_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingConstraint(Component,Point)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallUI(JComponent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSource_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dragWindow_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingToolBar_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloating(boolean,Point)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyHashCode(Object)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.createdFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.endConnector_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.presentationName_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.prototypeAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.startConnector_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.targetFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ConnectionTool.mouseReleased(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.reviewChanges()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.reviewChanges()_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.configureSlider(int,JSlider)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.addLayoutComponent(String,Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getColumns()_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getHgap()_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getRows()_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getVgap()_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.layoutContainer(Container)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.isVertical_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.minimumLayoutSize(Container)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.preferredLayoutSize(Container)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.removeLayoutComponent(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setColumns(int)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setHgap(int)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setRows(int)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setVgap(int)_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.toString()_CM">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout()_CN">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int)_CN">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,boolean)_CN">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int)_CN">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.VerticalGridLayout(int,int,int,int,boolean)_CN">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.cols_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.hgap_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.isVertical_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.rows_FE"/>
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.vgap_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.cols_FE">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.hgap_FE">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.isVertical_FE">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.rows_FE">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.vgap_FE">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.addLayoutComponent(String,Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getColumns()_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getHgap()_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getRows()_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.getVgap()_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.isVertical()_MT">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.isVertical_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.layoutContainer(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.minimumLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.preferredLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.removeLayoutComponent(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setColumns(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setHgap(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setRows(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setVertical(boolean)_MT">
        <uses provider="org.jhotdraw.gui.VerticalGridLayout.isVertical_FE"/>
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.setVgap(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.VerticalGridLayout.toString()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createOpenChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.SVGView()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createSaveChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.SVGView()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.INPUT_FORMAT_MAP_CLIENT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.OUTPUT_FORMAT_MAP_CLIENT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.SelectionToolSample.SelectionToolSample()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setDrawing(Drawing)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingView.DefaultDrawingView()_CN"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.tool.SelectionTool.SelectionTool()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.mini.SelectionToolSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nextChar()_CM">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushCharBack(int)_CM">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nextChar()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushCharBack(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.initScreenMenuBar()_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createModelActionMap(ApplicationModel)_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.BLOCK_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.CENTER_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.LEADING_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.TRAILING_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys.COMPOSITE_ALIGNMENT_FE">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getNewValue()_MT">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getOldValue()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getFontRenderContext()_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.byte_0_FE">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.char_0_FE">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.invoke(Object,Method,Object[])_MT">
        <uses provider="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyEquals(Object,Object)_MT"/>
        <uses provider="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyHashCode(Object)_MT"/>
        <uses provider="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyToString(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyEquals(Object,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyToString(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.create(Method,Object,Method)_CM">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.GenericListener()_CN">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.create(Method,Object,Method)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.raiseToPublicClass(Method)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ClipboardUtil.getClipboard()_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.AWTClipboard(Clipboard)_CN"/>
        <uses provider="org.jhotdraw.gui.datatransfer.ClipboardUtil.instance_FE"/>
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.JNLPClipboard(Object)_CN"/>
        <uses provider="org.jhotdraw.gui.datatransfer.OSXClipboard.OSXClipboard(Clipboard)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ClipboardUtil.getClipboard()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileDialog_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileDialog()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.isUseFileDialog()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.setUseFileDialog(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileChooser_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileDialog_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.buildChooser()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteSwatchesChooser.updateChooser()_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFileURIChooser.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFileURIChooser.getSelectedURI()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFileURIChooser.setSelectedURI(URI)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.addActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonMnemonic()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonText()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogTitle()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogType()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getSelectedURI()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.removeActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.rescanCurrentDirectory()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonMnemonic(int)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonText(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogTitle(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showDialog(Component,String)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showOpenDialog(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showSaveDialog(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.APPROVE_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.APPROVE_SELECTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.CANCEL_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.CANCEL_SELECTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.CUSTOM_DIALOG_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.DIALOG_TITLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.ERROR_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.OPEN_DIALOG_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.SAVE_DIALOG_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.SELECTED_URI_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.addActionListener(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonMnemonic()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonText()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogTitle()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogType()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getSelectedURI()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.removeActionListener(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.rescanCurrentDirectory()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonMnemonic(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonText(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogTitle(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogType(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showDialog(Component,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showOpenDialog(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showSaveDialog(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.ActivityModel.printf(String,Object[])_CM">
    </element>
    <element name="org.jhotdraw.gui.ActivityModel.setNote(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.ActivityModel.setWarning(String)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.init()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.prefs_FE"/>
        <uses provider="org.jhotdraw.app.AbstractApplication.getModel()_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.launch(String[])_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication.configure(String[])_MT"/>
        <uses provider="org.jhotdraw.app.AbstractApplication.getOpenURIsFromMainArgs(String[])_CM"/>
    </element>
</ldi>
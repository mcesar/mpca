<?xml version="1.0" ?>
<ldi>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.setExcludedAttributes(Set_AttributeKey_?__)_CM">
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.excludedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.ApplyAttributesAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.excludedAttributes_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.excludedAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.applyAttributes()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.applyAttributes()_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.excludedAttributes_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.selectionChanged(FigureSelectionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ApplyAttributesAction.setExcludedAttributes(Set_AttributeKey_?__)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.setExcludedAttributes(Set_AttributeKey_?__)_CM">
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.excludedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.PickAttributesAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.excludedAttributes_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.excludedAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.pickAttributes()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.pickAttributes()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.excludedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.selectionChanged(FigureSelectionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.PickAttributesAction.setExcludedAttributes(Set_AttributeKey_?__)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.ToggleGridAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ToggleGridAction.updateViewState()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setConstrainerVisible(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ToggleGridAction.updateViewState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.net.NetPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.jPanel1_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.toolButtonGroup_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.NetPanel()_CN">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingEditor,double,AbstractButton)_CN"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.view_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.attributesToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.creationToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.drawing_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.jPanel1_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.view_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.net.NetPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.net.NetPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.getView()_MT">
        <uses provider="org.jhotdraw.samples.net.NetPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetPanel.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.jPanel1_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.toolButtonGroup_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.PertPanel()_CN">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingEditor,double,AbstractButton)_CN"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.view_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.attributesToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.creationToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.drawing_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.jPanel1_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.view_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.getView()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertPanel.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window,Dimension)_CM"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window,Dimension)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installInternalFramePrefsHandler(Preferences,String,JInternalFrame,JDesktopPane)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window)_CM">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window,int)_MT"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installTabbedPanePrefsHandler(Preferences,String,JTabbedPane)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installToolBarPrefsHandler(Preferences,String,JToolBar)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.systemNodeForPackage(Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.userNodeForPackage(Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.PreferencesUtil()_CN">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.PreferencesUtil(boolean)_CN">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.isUserNode_FE"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.isUserNode_FE">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.map_FE">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.systemNodes_FE">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.userNodes_FE">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.absolutePath()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.addNodeChangeListener(NodeChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.addPreferenceChangeListener(PreferenceChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.childrenNames()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.clear()_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.exportNode(OutputStream)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.exportSubtree(OutputStream)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.flush()_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.clear()_MT"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.get(String,String)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.getBoolean(String,boolean)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.getByteArray(String,byte[])_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.getDouble(String,double)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.getFloat(String,float)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.getInt(String,int)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.getLong(String,long)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installInternalFramePrefsHandler(Preferences,String,JInternalFrame,JDesktopPane)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPalettePrefsHandler(Preferences,String,Window,int)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installPrefsHandler(Preferences,String,JTabbedPane)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installTabbedPanePrefsHandler(Preferences,String,JTabbedPane)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.installToolBarPrefsHandler(Preferences,String,JToolBar)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.isUserNode()_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.isUserNode_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.keys()_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.name()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.node(String)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.nodeExists(String)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.parent()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.put(String,String)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.putBoolean(String,boolean)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.putByteArray(String,byte[])_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.putDouble(String,double)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.putFloat(String,float)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.putInt(String,int)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.putLong(String,long)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.remove(String)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.map_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.removeNode()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.removeNodeChangeListener(NodeChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.removePreferenceChangeListener(PreferenceChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.sync()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.systemNodeForPackage(Class_?_)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.PreferencesUtil(boolean)_CN"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.systemNodes_FE"/>
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.toString()_MT">
    </element>
    <element name="org.jhotdraw.util.prefs.PreferencesUtil.userNodeForPackage(Class_?_)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.PreferencesUtil(boolean)_CN"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.userNodes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.SelectionToolSample.SelectionToolSample()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setDrawing(Drawing)_CM"/>
        <uses provider="org.jhotdraw.draw.LineFigure.LineFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.mini.SelectionToolSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.addAttributesButtonsTo(JToolBar,DrawingEditor)_CM">
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.ApplyAttributesAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.PickAttributesAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.addColorButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.addStrokeButtonsTo(JToolBar,DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createToolBars(Application,View)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.addAttributesButtonsTo(JToolBar,DrawingEditor)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.getSharedEditor()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.getEditor()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.ODGApplicationModel()_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.scaleFactors_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.sharedEditor_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.addAttributesButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.addColorButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.createDrawingActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.createSelectionActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.addStrokeButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createActionMap(Application,View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.scaleFactors_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)_MT"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.ToggleViewPropertyAction(Application,View,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createDrawingActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createExportChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.ODGView()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createOpenChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.ODGView()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.getFileFilter()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createSaveChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.ODGView()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.samples.odg.action.CombineAction.CombineAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.odg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGGroupFigure.ODGGroupFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.getSharedEditor()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.sharedEditor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGApplicationModel.initView(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGApplicationModel.getSharedEditor()_MT"/>
        <uses provider="org.jhotdraw.app.Application.isSharingToolsAmongViews()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.setEditor(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.Arrangement.CASCADE_FE">
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.Arrangement.HORIZONTAL_FE">
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.Arrangement.VERTICAL_FE">
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.getArrangement()_MT">
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.Arrangeable.setArrangement(Arrangement)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.SmartConnectionFigureSample$SmartConnectionFigure.SmartConnectionFigureSample$SmartConnectionFigure(SmartConnectionFigureSample)_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.SmartConnectionFigureSample$SmartConnectionFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.SmartConnectionFigureSample$SmartConnectionFigure.handleConnect(Connector,Connector)_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.mini.SmartConnectionFigureSample$SmartConnectionFigure.handleDisconnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.SmartConnectionFigureSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$East.MoveConstrainedAction$East(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$East.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$East.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$North.MoveConstrainedAction$North(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$North.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$North.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$South.MoveConstrainedAction$South(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$South.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$South.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$West.MoveConstrainedAction$West(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$West.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction$West.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction.MoveConstrainedAction(DrawingEditor,TranslationDirection)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction.dir_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveConstrainedAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.ViewSourceAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.DIALOG_CLIENT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.app.Application.addWindow(Window,View)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.ViewSourceAction.updateSource(Drawing,JTextArea)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.ViewSourceAction.updateSource(Drawing,JTextArea)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.setPrettyPrint(boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.EditGridAction(Application,DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditGridAction.app_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.app_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.dialog_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.propertyChangeHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.settingsPanel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.EditGridAction.getDialog()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.getApplication()_MT">
        <uses provider="org.jhotdraw.draw.action.EditGridAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.getDialog()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridAction.dialog_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridAction.settingsPanel_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridAction.getApplication()_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.setConstrainer(GridConstrainer)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.EditGridPanel()_CN"/>
        <uses provider="org.jhotdraw.app.Application.addWindow(Window,View)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridAction.updateViewState()_MT">
        <uses provider="org.jhotdraw.draw.action.EditGridAction.settingsPanel_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.setConstrainer(GridConstrainer)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.jPanel1_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.toolButtonGroup_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.ODGDrawingPanel()_CN">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingEditor,double,AbstractButton)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.view_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.attributesToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.creationToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.drawing_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.jPanel1_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.view_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure(boolean)_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.createSelectionActions(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.setRubberbandColor(Color)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.getView()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawingPanel.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.CombineAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.action.CombineAction.labels_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.canGroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.groupFigures(DrawingView,CompositeFigure,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributes()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.flattenTransform()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.CombineAction.ungroupFigures(DrawingView,CompositeFigure)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.SplitAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.action.SplitAction.labels_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.canUngroup()_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildCount()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.groupFigures(DrawingView,CompositeFigure,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributes()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.SplitAction.ungroupFigures(DrawingView,CompositeFigure)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.updateView()_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGView.isPropertiesPanelVisible()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.TogglePropertiesPanelAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.isPropertiesPanelVisible()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.setPropertiesPanelVisible(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.action.TogglePropertiesPanelAction.updateView()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.activate()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.addDisposable(Disposable)_CM">
        <uses provider="org.jhotdraw.app.AbstractView.disposables_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.deactivate()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.dispose()_CM">
        <uses provider="org.jhotdraw.app.AbstractView.executor_FE"/>
        <uses provider="org.jhotdraw.app.AbstractView.disposables_FE"/>
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.execute(Runnable)_CM">
        <uses provider="org.jhotdraw.app.AbstractView.executor_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.hasUnsavedChanges()_CM">
        <uses provider="org.jhotdraw.app.AbstractView.hasUnsavedChanges_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.init()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.removeDisposable(Disposable)_CM">
        <uses provider="org.jhotdraw.app.AbstractView.disposables_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.setApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.start()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.stop()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractView.AbstractView()_CN">
        <uses provider="org.jhotdraw.app.AbstractView.multipleOpenId_FE"/>
        <uses provider="org.jhotdraw.app.AbstractView.preferences_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.application_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.disposables_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.executor_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.hasUnsavedChanges_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.isShowing_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.multipleOpenId_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.preferences_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.title_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.uri_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractView.activate()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.addDisposable(Disposable)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.deactivate()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.dispose()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.execute(Runnable)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.getApplication()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.application_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.getMultipleOpenId()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.multipleOpenId_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.getTitle()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.title_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.getURI()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.uri_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.hasUnsavedChanges()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.init()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.isEmpty()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.AbstractView.getURI()_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.isShowing()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.isShowing_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.markChangesAsSaved()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.removeDisposable(Disposable)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.setApplication(Application)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.application_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.hasUnsavedChanges_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.setMultipleOpenId(int)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.multipleOpenId_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.setShowing(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.isShowing_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.setTitle(String)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.title_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.setURI(URI)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.preferences_FE"/>
        <uses provider="org.jhotdraw.app.AbstractView.uri_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractView.start()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractView.stop()_MT">
    </element>
    <element name="org.jhotdraw.color.AbstractColorSlidersModel.listeners_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorSlidersModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorSlidersModel.addChangeListener(ChangeListener)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorSlidersModel.listeners_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorSlidersModel.fireStateChanged()_MT">
        <uses provider="org.jhotdraw.color.AbstractColorSlidersModel.listeners_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorSlidersModel.removeChangeListener(ChangeListener)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorSlidersModel.listeners_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.configureSlider(int,JSlider)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getColor()_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getComponent(int)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getComponentCount()_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getComponents()_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getInterpolatedRGB(int,float)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setColorSpace(ColorSpace)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.unconfigureSlider(JSlider)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.addChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.configureSlider(int,JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getColor()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getColorSpace()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getComponent(int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getComponentCount()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getComponents()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.getInterpolatedRGB(int,float)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.removeChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setColor(Color)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setColorSpace(ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderModel.unconfigureSlider(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.ColorTrackImageProducer(int,int,int,boolean)_CN">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.colorizer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.h_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isHorizontal_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.pixels_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.trackBuffer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.w_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.colorizer_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.componentIndex_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.h_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.isHorizontal_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.pixels_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.trackBuffer_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.w_FE">
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.componentChanged(int)_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.generateColorTrack()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isHorizontal_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.generateHorizontalColorTrack()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.generateVerticalColorTrack()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.generateHorizontalColorTrack()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.colorizer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.h_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.pixels_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.trackBuffer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.w_FE"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getComponents()_CM"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.generateVerticalColorTrack()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.colorizer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.h_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.pixels_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.trackBuffer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.w_FE"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getComponents()_CM"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.getHeight()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.h_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.getWidth()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.w_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.markAsDirty()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.needsGeneration()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.regenerateColorTrack()_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.generateColorTrack()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.setColorComponentIndex(int)_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorTrackImageProducer.setColorSliderModel(ColorSliderModel)_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.colorizer_FE"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.isDirty_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.initComponents()_CM">
        <uses provider="org.jhotdraw.color.ColorWheelChooser.brightnessSlider_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.ColorWheelChooser()_CN">
        <uses provider="org.jhotdraw.color.ColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.addChangeListener(ChangeListener)_MT"/>
        <uses provider="org.jhotdraw.color.ColorWheelChooser.initComponents()_CM"/>
        <uses provider="org.jhotdraw.color.ColorWheelChooser.brightnessSlider_FE"/>
        <uses provider="org.jhotdraw.color.ColorWheelChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.color.ColorWheelChooser.colorWheel_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN"/>
        <uses provider="org.jhotdraw.color.HSBColorSpace.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.brightnessSlider_FE">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.ccModel_FE">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.colorWheel_FE">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.updatingChooser_FE">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.buildChooser()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.getDisplayName()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.getLargeDisplayIcon()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.getSmallDisplayIcon()_MT">
        <uses provider="org.jhotdraw.color.ColorWheelChooser.getLargeDisplayIcon()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.setColorToModel(Color)_MT">
        <uses provider="org.jhotdraw.color.ColorWheelChooser.updatingChooser_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorWheelChooser.updateChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM"/>
        <uses provider="org.jhotdraw.color.ColorWheelChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.color.ColorWheelChooser.updatingChooser_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorComponents(ColorSpace,float[])_CM">
        <uses provider="org.jhotdraw.color.CompositeColor.cs_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorComponents(float[])_CM">
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorSpace()_CM">
        <uses provider="org.jhotdraw.color.CompositeColor.cs_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getComponents(ColorSpace,float[])_CM">
        <uses provider="org.jhotdraw.color.CompositeColor.cs_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.falpha_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getComponents(float[])_CM">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.CompositeColor(ColorSpace,float[],float)_CN">
        <uses provider="org.jhotdraw.color.CompositeColor.cs_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.falpha_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.toRGB24(ColorSpace,float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.CompositeColor.cs_FE">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.falpha_FE">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.fvalue_FE">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorComponents(ColorSpace,float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorComponents(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getColorSpace()_MT">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getComponents(ColorSpace,float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CompositeColor.getComponents(float[])_MT">
        <uses provider="org.jhotdraw.color.CompositeColor.falpha_FE"/>
        <uses provider="org.jhotdraw.color.CompositeColor.fvalue_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_CM">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.addColorSlider(JSlider)_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getBoundedRangeModel(int)_CM">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getSliderValue(int)_CM">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.setSliderValue(int,int)_CM">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)_CM">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.removeColorSlider(JSlider)_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel()_CN">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.sliders_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.setColorSpace(ColorSpace)_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.sliders_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.setColorSpace(ColorSpace)_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.sliders_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.addColorSlider(JSlider)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.sliders_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.fireColorChanged(int)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.sliders_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getColor()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getBoundedRangeModel(int)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getColor()_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getComponentCount()_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.toColor(ColorSpace,float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getColorSpace()_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getComponent(int)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getComponentCount()_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getComponents()_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getComponentCount()_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getInterpolatedRGB(int,float)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getComponentCount()_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.getSliderValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.removeColorSlider(JSlider)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.sliders_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.setColor(Color)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.setColorSpace(ColorSpace)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.setComponent(int,float)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.componentModels_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.setSliderValue(int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.DefaultHarmonicColorModel()_CN">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.base_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.customHueConstraint_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.sliderModel_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.rules_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.add(Color)_MT"/>
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.adjusting_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.base_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.customHueConstraint_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.rules_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.sliderModel_FE">
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.add(Color)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.size()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.addPropertyChangeListener(PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.addPropertyChangeListener(String,PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.addRule(HarmonicRule)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.rules_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.applyRules()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.base_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.rules_FE"/>
        <uses provider="org.jhotdraw.color.HarmonicRule.apply(HarmonicColorModel)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicRule.getBaseIndex()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.clone()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.componentToRGB(float,float,float)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.sliderModel_FE"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
        <uses provider="org.jhotdraw.color.ColorUtil.toRGB24(ColorSpace,float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,boolean,boolean)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,int,int)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,Object,Object)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.get(int)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.getBase()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.base_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.getColorSpace()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.sliderModel_FE"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.getElementAt(int)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.get(int)_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.getSize()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.size()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.isAdjusting()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.adjusting_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.removeAllRules()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.rules_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.removePropertyChangeListener(PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.removePropertyChangeListener(String,PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.RGBtoComponent(int,float[])_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.sliderModel_FE"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.set(int,Color)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.adjusting_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.rules_FE"/>
        <uses provider="org.jhotdraw.color.HarmonicRule.apply(HarmonicColorModel)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicRule.getBaseIndex()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicRule.colorChanged(HarmonicColorModel,int,Color,Color)_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.setBase(int)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.base_FE"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.setColorSpace(ColorSpace)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.sliderModel_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.firePropertyChange(String,Object,Object)_MT"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.get(int)_MT"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.size()_MT"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColorSpace(ColorSpace)_CM"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.set(int,Color)_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.setSize(int)_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.size()_MT"/>
    </element>
    <element name="org.jhotdraw.color.DefaultHarmonicColorModel.size()_MT">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.colors_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.HSLHarmonicColorWheelImageProducer(ColorSpace,int,int)_CN">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.isDiscrete_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.PolarColorWheelImageProducer(ColorSpace,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.HSLHarmonicColorWheelImageProducer(int,int)_CN">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.isDiscrete_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.PolarColorWheelImageProducer(ColorSpace,int,int)_CN"/>
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.brights_FE">
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.isDiscrete_FE">
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.brights_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateContiguousLookupTables()_MT">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.brights_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateDiscreteLookupTables()_MT">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.brights_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.isDiscrete_FE"/>
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateContiguousLookupTables()_MT"/>
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.generateDiscreteLookupTables()_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorAt(int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorLocation(Color)_MT">
        <uses provider="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorLocation(float[])_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.HSLHarmonicColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.HSVHarmonicColorWheelImageProducer(int,int)_CN">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.isDiscrete_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.PolarColorWheelImageProducer(ColorSpace,int,int)_CN"/>
        <uses provider="org.jhotdraw.color.HSVPhysiologicColorSpace.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.brights_FE">
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.isDiscrete_FE">
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.wheelScaleFactor_FE">
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.brights_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateContiguousLookupTables()_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.brights_FE"/>
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.wheelScaleFactor_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateDiscreteLookupTables()_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.brights_FE"/>
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.wheelScaleFactor_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.isDiscrete_FE"/>
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.wheelScaleFactor_FE"/>
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateContiguousLookupTables()_MT"/>
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.generateDiscreteLookupTables()_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorAt(int,int)_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.wheelScaleFactor_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorLocation(Color)_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorLocation(float[])_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.getColorLocation(float[])_MT">
        <uses provider="org.jhotdraw.color.HSVHarmonicColorWheelImageProducer.wheelScaleFactor_FE"/>
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.COLOR_SPACE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.add(Color)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.addRule(HarmonicRule)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.applyRules()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.componentToRGB(float,float,float)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.get(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.getBase()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.getColorSpace()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.isAdjusting()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.removeAllRules()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.RGBtoComponent(int,float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.set(int,Color)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.setBase(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.setColorSpace(ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.setSize(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicColorModel.size()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicRule.apply(HarmonicColorModel)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicRule.colorChanged(HarmonicColorModel,int,Color,Color)_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicRule.getBaseIndex()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicRule.getDerivedIndices()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicRule.setBaseIndex()_MT">
    </element>
    <element name="org.jhotdraw.color.HarmonicRule.setDerivedIndices(int[])_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.enabledStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.enabledStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.selectedStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.selectedStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.getBorderInsets(Component)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.getSegmentPosition(Component)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.getSegmentPosition(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.isBorderOpaque()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.paintBorder(AbstractButton,Graphics,int,int,int,int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.enabledStopColors_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.enabledStops_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.selectedStopColors_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.selectedStops_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.getSegmentPosition(Component)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.paintBorder(Component,Graphics,int,int,int,int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonBorder.paintBorder(AbstractButton,Graphics,int,int,int,int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.enabledStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.enabledStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.getBorderInsets(Component)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.getSegmentPosition(Component)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.getSegmentPosition(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.isBorderOpaque()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.paintBorder(Component,Graphics,int,int,int,int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.enabledStopColors_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.enabledStops_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextComponentBorder.getSegmentPosition(Component)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain$Handler.adjusting_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain$Handler.stateChanged(ChangeEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColor()_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getComponentCount()_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM"/>
        <uses provider="org.jhotdraw.samples.color.WheelsAndSlidersMain$Handler.adjusting_FE"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getColorSpace()_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getComponent(int)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.WheelsAndSlidersMain()_CN">
        <uses provider="org.jhotdraw.color.CMYKNominalColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HSBColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HSLColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HSVColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HSVPhysiologicColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.CIELCHabColorSpace()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.chooserPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.color_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.colorLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.handler_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.models_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.previewLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace,int,int,int,JColorWheel)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.createColorWheelChooser(ColorSpace,int,int,int,JColorWheel,boolean,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.createSliderChooser(ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.createSliderChooser(ColorSpace,boolean)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getComponentCount()_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN"/>
        <uses provider="org.jhotdraw.color.ColorUtil.getName(ColorSpace)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.color.WheelsAndSlidersMain.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$ModelHandler.contentsChanged(ListDataEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$ModelHandler.intervalAdded(ListDataEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$ModelHandler.intervalRemoved(ListDataEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$ModelHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColorSpace(ColorSpace)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_CM"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getColorSpace()_MT"/>
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.SimpleHarmonicRule(int,float,int,int[])_CN">
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.difference_FE"/>
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.componentIndex_FE">
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.difference_FE">
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.apply(HarmonicColorModel)_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.get(int)_MT"/>
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.componentIndex_FE"/>
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.difference_FE"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getColorSpace()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.set(int,Color)_MT"/>
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.colorChanged(HarmonicColorModel,int,Color,Color)_MT">
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.getComponentIndex()_MT">
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.componentIndex_FE"/>
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.getConstraint(float)_MT">
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.setComponentIndex(int)_MT">
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.componentIndex_FE"/>
    </element>
    <element name="org.jhotdraw.color.SimpleHarmonicRule.setConstraint(float)_MT">
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.difference_FE"/>
    </element>
    <element name="org.jhotdraw.samples.color.JMixer$Preset.JMixer$Preset(String,int)_CN">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer$Preset.index_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer$Preset.name_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer$Preset.getColor()_MT">
        <uses provider="org.jhotdraw.samples.color.JMixer$Preset.index_FE"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.getColorSpace()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.color.JMixer$Preset.toString()_MT">
        <uses provider="org.jhotdraw.samples.color.JMixer$Preset.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.ruleChangePerformed(ActionEvent)_CM">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.JMixer()_CN">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.setSize(int)_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN"/>
        <uses provider="org.jhotdraw.color.HSLColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getColorSpace()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.set(int,Color)_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int,int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.achromaticCheck_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.achromaticField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.achromaticLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.achromaticLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.adjusting_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.analogousField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.analogousLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.analogousLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.analogousRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.clashField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.clashLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.clashLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.clashRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.complementaryField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.complementaryLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.complementaryLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.complementaryRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.customHueField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.customHueLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.customHueLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.customHueRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.disclosureButton_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.harmonicWheel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.hueGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.mixerPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.monochromaticCheck_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.monochromaticField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.monochromaticLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.monochromaticLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.presetCombo_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.primaryField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.primaryLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.primaryLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.primaryRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.saturationSlider_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.sliderModel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.splitComplementaryLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.splitComplementaryLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.splitComplementaryRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.splitField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.springPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.swatchesList_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.sysGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.sysRGBToggle_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.sysRYBToggle_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.triadField_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.triadLabel1_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.triadLabel2_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.triadRadio_FE">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.mixerDisclosurePerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.presetPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getBase()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.set(int,Color)_MT"/>
        <uses provider="org.jhotdraw.samples.color.JMixer$Preset.getColor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.ruleChangePerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.systemChangePerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.setColor(Color)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.get(int)_MT"/>
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.setColorSpace(ColorSpace)_MT"/>
        <uses provider="org.jhotdraw.color.HSLColorSpace.getInstance()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.setColorSpace(ColorSpace)_MT"/>
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.color.JMixer.updateRules()_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.addRule(HarmonicRule)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.applyRules()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.removeAllRules()_MT"/>
        <uses provider="org.jhotdraw.color.SimpleHarmonicRule.SimpleHarmonicRule(int,float,int,int[])_CN"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.set(int,Color)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.IncreaseHandleDetailLevelAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.increaseHandleDetaiLevel()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.increaseHandleDetaiLevel()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getHandleDetailLevel()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.addActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.approveSelection()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.dialog_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.returnValue_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.cancelSelection()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.dialog_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.returnValue_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getAllFonts()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.future_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getModel()_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getSelectedFont()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.selectedFont_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getSelectionPath()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.selectionPath_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getUI()_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getUIClassID()_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.future_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.removeActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setModel(FontChooserModel)_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.model_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.selectedFont_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.modelHandler_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setSelectedFont(Font)_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.selectedFont_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setSelectionPath(TreePath)_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.setSelectedFont(Font)_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.selectionPath_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.getFont()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setUI(FontChooserUI)_CM">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.setSelectionPath(TreePath)_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.selectionPath_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.getModel()_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.families()_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.getFont()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.updateUI()_CM">
        <uses provider="org.jhotdraw.gui.JFontChooser.getUIClassID()_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.setUI(FontChooserUI)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.JFontChooser()_CN">
        <uses provider="org.jhotdraw.gui.JFontChooser.updateUI()_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.dialog_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.model_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.returnValue_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.modelHandler_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.APPROVE_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.APPROVE_SELECTION_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.CANCEL_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.CANCEL_SELECTION_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.dialog_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.ERROR_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.future_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.model_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.modelHandler_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.MODEL_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.returnValue_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.selectedFont_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.SELECTED_FONT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.selectionPath_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.SELECTION_PATH_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.uiClassID_FE">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.addActionListener(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.approveSelection()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.cancelSelection()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.fireActionPerformed(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getAllFonts()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getModel()_MT">
        <uses provider="org.jhotdraw.gui.JFontChooser.model_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getSelectedFont()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getSelectionPath()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getUI()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.getUIClassID()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.loadAllFonts()_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.removeActionListener(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setModel(FontChooserModel)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setSelectedFont(Font)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setSelectionPath(TreePath)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.setUI(FontChooserUI)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.updateSelectionPath(Font)_MT">
    </element>
    <element name="org.jhotdraw.gui.JFontChooser.updateUI()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.BringToFrontAction.bringToFront(DrawingView,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.bringToFront(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.SendToBackAction.sendToBack(DrawingView,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.sendToBack(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.EditCanvasAction(Application,DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.app_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.app_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.frame_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.propertyChangeHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.settingsPanel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.getFrame()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.getApplication()_MT">
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.getFrame()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.app.Application.addWindow(Window,View)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.frame_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.settingsPanel_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.getApplication()_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.setDrawing(Drawing)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.EditCanvasPanel()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasAction.updateViewState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasAction.settingsPanel_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.setDrawing(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.getMaximum()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.getMinimum()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.messageLabel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.noteLabel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressBar_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setMaximum(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setMinimum(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setProgress(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator()_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String,int,int,boolean)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.messageLabel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressBar_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.setIndeterminate(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.setMessage(String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.setNote(String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.m_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.messageLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.noteLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.getMaximum()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.getMessage()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.messageLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.getMinimum()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.getNote()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.noteLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.isIndeterminate()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressBar_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setIndeterminate(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressBar_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setMaximum(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setMessage(String)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.messageLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setMinimum(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setNote(String)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.noteLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setProgress(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ProgressIndicator.setProgressModel(BoundedRangeModel)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressBar_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.progressModel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.SelectionOpacityIcon(DrawingEditor,AttributeKey_Double_,AttributeKey_Color_,AttributeKey_Color_,Image,Shape,Shape)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.opacityKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.SelectionOpacityIcon(DrawingEditor,AttributeKey_Double_,AttributeKey_Color_,AttributeKey_Color_,URL,Shape,Shape)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.opacityKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillColorKey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.opacityKey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeColorKey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.fillShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.opacityKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.SelectionOpacityIcon.strokeShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.ViewToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ViewToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.view_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.getHeight()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ViewToolBar.view_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ViewToolBar.setView(DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.setHeight(double)_MT"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.setWidth(double)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ViewToolBar.view_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBeanDescriptor()_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getDefaultEventIndex()_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.defaultEventIndex_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getDefaultPropertyIndex()_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.defaultPropertyIndex_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEventSetDescriptors()_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getIcon(int)_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconColor16_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconColor32_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconMono16_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconMono32_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameC16_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameC32_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameM16_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameM32_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMethodDescriptors()_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPropertyDescriptors()_CM">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.beanDescriptor_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.defaultEventIndex_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.defaultPropertyIndex_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.eventSets_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconColor16_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconColor32_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconMono16_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconMono32_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameC16_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameC32_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameM16_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.iconNameM32_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.methods_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.properties_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBdescriptor()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.beanDescriptor_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getBeanDescriptor()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getDefaultEventIndex()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getDefaultPropertyIndex()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEdescriptor()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.eventSets_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getEventSetDescriptors()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getIcon(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMdescriptor()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.methods_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getMethodDescriptors()_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPdescriptor()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.properties_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBarBeanInfo.getPropertyDescriptors()_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.createConnection()_CM">
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.findConnectableConnector(Figure,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.repaintConnectors()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getConnectors(ConnectionFigure)_CM"/>
        <uses provider="org.jhotdraw.draw.connector.Connector.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectableFigure_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectors_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.ConnectorHandle(Connector,ConnectionFigure)_CN">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connector_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectors_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.connectableConnector_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.connectableFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.connector_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.connectors_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.createdConnection_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.prototype_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getLocation()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.createConnection()_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.ConnectionFigure.getEndPoint()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM"/>
        <uses provider="org.jhotdraw.draw.connector.Connector.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectors_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.createdConnection_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.findConnectableConnector(Figure,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.findConnectableFigure(Point2D,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.getConnection()_MT">
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.createdConnection_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.ConnectionFigure.getEndPoint()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getConnection()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.getLocation()_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getAnchor()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connector_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.getLocationOnDrawing()_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getAnchor()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connector_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.getTargetFigure()_MT">
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectableFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.isCombinableWith(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.repaintConnectors()_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.setConnection(ConnectionFigure)_MT">
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.createdConnection_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.setTargetFigure(Figure)_MT">
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectableFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.ConnectionFigure.updateConnection()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.ConnectionFigure.setEndConnector(Connector)_CM"/>
        <uses provider="org.jhotdraw.draw.ConnectionFigure.setStartConnector(Connector)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectableConnector_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connector_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectors_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getConnection()_MT"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getDrawingArea()_MT"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.setConnection(ConnectionFigure)_MT"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.setTargetFigure(Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.createConnection()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getConnection()_MT"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getLocationOnDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.setConnection(ConnectionFigure)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ConnectorHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.connector.Connector.getAnchor()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.repaintConnectors()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectableConnector_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.connectableFigure_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getConnection()_MT"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.getDrawingArea()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.creationFinished(Figure)_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.beginEdit(TextHolderFigure)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.mousePressed(MouseEvent)_CM">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.mousePressed(MouseEvent)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.typingTarget_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.endEdit()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.setRubberbandColor(Color)_CM">
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.rubberbandColor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure)_CN">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.rubberbandColor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure,Map_AttributeKey_?_,Object_)_CN">
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.rubberbandColor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.rubberbandColor_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.textArea_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.typingTarget_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.endEdit()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.beginEdit(TextHolderFigure)_MT">
        <uses provider="org.jhotdraw.draw.TextHolderFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.textArea_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.typingTarget_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.endEdit()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.getFieldBounds(TextHolderFigure)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.creationFinished(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.deactivate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.deactivate(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.endEdit()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.rubberbandColor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.endEdit()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.TextHolderFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextHolderFigure.setText(String)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.textArea_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.typingTarget_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.getFieldBounds(TextHolderFigure)_MT">
        <uses provider="org.jhotdraw.draw.TextHolderFigure.getInsets()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextAreaCreationTool.setRubberbandColor(Color)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.mousePressed(MouseEvent)_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.mousePressed(MouseEvent)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.typingTarget_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.beginEdit(TextHolderFigure)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.endEdit()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.updateCursor(DrawingView,Point)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.TextCreationTool(TextHolderFigure)_CN">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.TextCreationTool(TextHolderFigure,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.textField_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.typingTarget_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.endEdit()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.beginEdit(TextHolderFigure)_MT">
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.textField_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.typingTarget_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.endEdit()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.creationFinished(Figure)_MT">
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.beginEdit(TextHolderFigure)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.updateCursor(DrawingView,Point)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.deactivate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.deactivate(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.endEdit()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.endEdit()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.TextHolderFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextHolderFigure.setText(String)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.textField_FE"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.typingTarget_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.isEditing()_MT">
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.typingTarget_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.keyReleased(KeyEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.mouseDragged(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.mouseReleased(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.TextCreationTool.updateCursor(DrawingView,Point)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.isEditing()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.event.AbstractAttributeEditorHandler$EventHandler.attributeChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getAttribute()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.event.AbstractAttributeEditorHandler$EventHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getKey()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.event.AbstractAttributeEditorHandler$EventHandler.selectionChanged(FigureSelectionEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.HSBColorSpace()_CN">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.instance_FE">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.getInstance()_MT">
        <uses provider="org.jhotdraw.color.HSBColorSpace.HSBColorSpace()_CN"/>
        <uses provider="org.jhotdraw.color.HSBColorSpace.instance_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.color.HSBColorSpace.toRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.HSLColorSpace()_CN">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.instance_FE">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.clamp(float,float,float)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.getInstance()_MT">
        <uses provider="org.jhotdraw.color.HSLColorSpace.HSLColorSpace()_CN"/>
        <uses provider="org.jhotdraw.color.HSLColorSpace.instance_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.color.HSLColorSpace.toRGB(float[],float[])_MT">
        <uses provider="org.jhotdraw.color.HSLColorSpace.clamp(float,float,float)_MT"/>
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.HSVColorSpace()_CN">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.instance_FE">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.getInstance()_MT">
        <uses provider="org.jhotdraw.color.HSVColorSpace.HSVColorSpace()_CN"/>
        <uses provider="org.jhotdraw.color.HSVColorSpace.instance_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.color.HSVColorSpace.toRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.fromCIEXYZ(float[],float[])_CM">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.fromRGB(float[],float[])_CM">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.toCIEXYZ(float[],float[])_CM">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.toRGB(float[],float[])_CM">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.fromCIEXYZ(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.toCIEXYZ(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.NamedColorSpace.toRGB(float[],float[])_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.addChild(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String,String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createPCDataElement()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.dispose()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.equals(Object)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.equalsXMLElement(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String,Map_String,T_,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeCount()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeNamespace(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributes()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributesInNamespace(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeType(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeType(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildAtIndex(int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenCount()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenNamed(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenNamed(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getContent()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getDoubleAttribute(String,String,double)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getFirstChildNamed(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getFirstChildNamed(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getFullName()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getLineNr()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getName()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getNamespace()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getParent()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getSystemID()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.hasAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.hasAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.hasChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.isLeaf()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.iterableAttributeNames()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.iterableChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeChild(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeChildAtIndex(int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setAttribute(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setContent(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setName(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setName(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.NO_LINE_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.addChild(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createElement(String,String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.createPCDataElement()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.dispose()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.equals(Object)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.equalsXMLElement(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String,Map_String,T_,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttribute(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeCount()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeNamespace(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributes()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributesInNamespace(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeType(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getAttributeType(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildAtIndex(int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildren()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenCount()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenNamed(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getChildrenNamed(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getContent()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getDoubleAttribute(String,String,double)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getFirstChildNamed(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getFirstChildNamed(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getFullName()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getLineNr()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getName()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getNamespace()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getParent()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.getSystemID()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.hasAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.hasAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.hasChildren()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.isLeaf()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.iterableAttributeNames()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.iterableChildren()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeChild(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.removeChildAtIndex(int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setAttribute(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setContent(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setName(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.IXMLElement.setName(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.attributeAdded(String,String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.elementAttributesProcessed(String,Properties,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.elementEnded(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.elementStarted(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.finalize()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.getParameterEntityResolver()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.parseDTD(String,IXMLReader,IXMLEntityResolver,boolean)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.PCDataAdded(String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processAttList(IXMLReader,IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processConditionalSection(IXMLReader,IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processElement(IXMLReader,IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processEntity(IXMLReader,IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processIgnoreSection(IXMLReader,IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.setParameterEntityResolver(IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.NonValidator()_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.attributeDefaultValues_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.currentElements_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.parameterEntityResolver_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.attributeAdded(String,String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.elementAttributesProcessed(String,Properties,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.elementEnded(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.elementStarted(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.finalize()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.getParameterEntityResolver()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.parseDTD(String,IXMLReader,IXMLEntityResolver,boolean)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.PCDataAdded(String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processAttList(IXMLReader,IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processConditionalSection(IXMLReader,IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processElement(IXMLReader,IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processEntity(IXMLReader,IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.processIgnoreSection(IXMLReader,IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.NonValidator.setParameterEntityResolver(IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.addAttribute(String,String,String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.addPCData(Reader,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.elementAttributesProcessed(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.endElement(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.finalize()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.getResult()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.newProcessingInstruction(String,Reader)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.startBuilding(String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.startElement(String,String,String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.StdXMLBuilder()_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.StdXMLBuilder(IXMLElement)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.prototype_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.root_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.stack_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.addAttribute(String,String,String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.addPCData(Reader,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.elementAttributesProcessed(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.endElement(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.finalize()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.getResult()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.newProcessingInstruction(String,Reader)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.startBuilding(String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLBuilder.startElement(String,String,String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.finalize()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getBuilder()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getReader()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getResolver()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getValidator()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.parse()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processAttribute(ArrayList_String_,ArrayList_String_,ArrayList_String_)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processCDATA()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processDocType()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processElement(String,Properties)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processPI()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processSpecialTag(boolean)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.scanData()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.scanSomeTag(boolean,String,Properties)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setBuilder(IXMLBuilder)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setReader(IXMLReader)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setResolver(IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setValidator(IXMLValidator)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.StdXMLParser()_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.builder_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.entityResolver_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.reader_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.validator_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.finalize()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getBuilder()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getReader()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getResolver()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.getValidator()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.parse()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processAttribute(ArrayList_String_,ArrayList_String_,ArrayList_String_)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processCDATA()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processDocType()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processElement(String,Properties)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processPI()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.processSpecialTag(boolean)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.scanData()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.scanSomeTag(boolean,String,Properties)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setBuilder(IXMLBuilder)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setReader(IXMLReader)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setResolver(IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.StdXMLParser.setValidator(IXMLValidator)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.attributeAdded(String,String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.elementAttributesProcessed(String,Properties,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.elementEnded(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.elementStarted(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.finalize()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.getDelegate()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.getParameterEntityResolver()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.invalidAttributeValue(String,int,String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.missingAttribute(String,int,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.missingElement(String,int,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.missingPCData(String,int,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.parseDTD(String,IXMLReader,IXMLEntityResolver,boolean)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.PCDataAdded(String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.setDelegate(IXMLValidator)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.setParameterEntityResolver(IXMLEntityResolver)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.unexpectedAttribute(String,int,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.unexpectedElement(String,int,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.unexpectedPCData(String,int,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.validationError(String,int,String,String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.ValidatorPlugin()_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.delegate_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.attributeAdded(String,String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.elementAttributesProcessed(String,Properties,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.elementEnded(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.elementStarted(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.finalize()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.getDelegate()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.getParameterEntityResolver()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.invalidAttributeValue(String,int,String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.missingAttribute(String,int,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.missingElement(String,int,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.missingPCData(String,int,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.parseDTD(String,IXMLReader,IXMLEntityResolver,boolean)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.PCDataAdded(String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.setDelegate(IXMLValidator)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.setParameterEntityResolver(IXMLEntityResolver)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.unexpectedAttribute(String,int,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.unexpectedElement(String,int,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.unexpectedPCData(String,int,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.ValidatorPlugin.validationError(String,int,String,String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.addExternalEntity(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.addInternalEntity(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.finalize()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.getEntity(IXMLReader,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.isExternalEntity(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.openExternalEntity(IXMLReader,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.XMLEntityResolver()_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.entities_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.addExternalEntity(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.addInternalEntity(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.finalize()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.getEntity(IXMLReader,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.isExternalEntity(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLEntityResolver.openExternalEntity(IXMLReader,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.finalize()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean,int,boolean)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.writeEncoded(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.XMLWriter(OutputStream)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.XMLWriter(Writer)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.writer_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.finalize()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.write(IXMLElement,boolean,int,boolean)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLWriter.writeEncoded(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainPoint(Point2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainRectangle(Rectangle2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.getMajorGridSpacing()_CM">
        <uses provider="org.jhotdraw.draw.GridConstrainer.majorGridSpacing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setMajorGridSpacing(int)_CM">
        <uses provider="org.jhotdraw.draw.GridConstrainer.majorGridSpacing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.translatePoint(Point2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer()_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,boolean)_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double,double,boolean)_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.height_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.width_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.AbstractConstrainer()_CN"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.isVisible_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.majorGridSpacing_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.theta_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.height_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.isVisible_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.majorColor_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.majorGridSpacing_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.minorColor_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.theta_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.width_FE">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainAngle(double)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.theta_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainPoint(Point2D,TranslationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainRectangle(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.constrainRectangle(Rectangle2D,TranslationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.draw(Graphics2D,DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Rectangle)_CM"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.height_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.majorColor_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.minorColor_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.width_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.isVisible_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.majorGridSpacing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.getHeight()_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.getMajorGridSpacing()_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.getTheta()_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.theta_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.getWidth()_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.width_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.isVisible()_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.isVisible_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.rotateAngle(double,RotationDirection)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.theta_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.constrainAngle(double)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setHeight(double)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setMajorGridSpacing(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setTheta(double)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.theta_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setVisible(boolean)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.isVisible_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.setWidth(double)_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.width_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.toString()_MT">
        <uses provider="org.jhotdraw.draw.GridConstrainer.height_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.width_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.translatePoint(Point2D,TranslationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.GridConstrainer.translateRectangle(Rectangle2D,TranslationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.chop(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.isTransformable()_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.GroupFigure()_CN">
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GroupFigure.isTransformable()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.LineFigure()_CN">
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.LineFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.add(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.add(int,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.addCompositeFigureListener(CompositeFigureListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicAdd(int,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicRemove(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicRemoveChild(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.contains(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getChild(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getChildCount()_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getChildren()_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getLayouter()_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.indexOf(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.layout()_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.remove(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.removeAllChildren()_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.removeChild(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.removeCompositeFigureListener(CompositeFigureListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.setLayouter(Layouter)_CM">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.LAYOUT_INSETS_FE">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.add(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.add(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.addCompositeFigureListener(CompositeFigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicAdd(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicRemove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.basicRemoveChild(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.contains(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getChild(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getChildCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.getLayouter()_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.layout()_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.remove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.removeAllChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.removeChild(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.removeCompositeFigureListener(CompositeFigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.CompositeFigure.setLayouter(Layouter)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.addChangeListener(ChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainAngle(double)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainRectangle(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.draw(Graphics2D,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.removeChangeListener(ChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.rotateAngle(double,RotationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.translatePoint(Point2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.translateRectangle(Rectangle2D,TranslationDirection)_CM">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.addChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainAngle(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.constrainRectangle(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.draw(Graphics2D,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.removeChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.rotateAngle(double,RotationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.translatePoint(Point2D,TranslationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.Constrainer.translateRectangle(Rectangle2D,TranslationDirection)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.GraphicalCompositeFigure$PresentationFigureHandler(GraphicalCompositeFigure)_CN">
        <uses provider="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.owner_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.areaInvalidated(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.owner_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.figureRequestRemove(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.owner_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.undoableEditHappened(UndoableEditEvent)_MT">
        <uses provider="org.jhotdraw.draw.GraphicalCompositeFigure$PresentationFigureHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.applyAttributesTo(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.chop(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.draw(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.get(AttributeKey_T_)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getBounds()_CM">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getDrawingArea()_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getPresentationFigure()_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.set(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.setBounds(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.setPresentationFigure(Figure)_CM">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.GraphicalCompositeFigure()_CN">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.GraphicalCompositeFigure(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.attributes_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.forbiddenAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.presentationFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.presentationFigureHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.addNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.applyAttributesTo(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.basicSetPresentationFigureBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.drawPresentationFigure(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.get(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getAttributeKey(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getAttributes()_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.getPresentationFigure()_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.read(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.readAttributes(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT"/>
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getTagName()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.remap(HashMap_Figure,Figure_,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.removeNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.setAttributeEnabled(AttributeKey_?_,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.setPresentationFigure(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.superBasicSetBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.write(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.draw.GraphicalCompositeFigure.writeAttributes(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getKey()_MT"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.getPrototype()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.LabeledLineConnectionFigure$ChildHandler(LabeledLineConnectionFigure)_CN">
        <uses provider="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.owner_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.areaInvalidated(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.owner_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.figureRequestRemove(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.owner_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.undoableEditHappened(UndoableEditEvent)_MT">
        <uses provider="org.jhotdraw.draw.LabeledLineConnectionFigure$ChildHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.clone()_CM">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isVisible()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.findFigureInside(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.fireFigureAdded(Figure,int)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.fireFigureRemoved(Figure,int)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getChildren()_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getChildrenFrontToBack()_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getLayouter()_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.layout()_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.set(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.updateConnection()_CM">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.LabeledLineConnectionFigure()_CN">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.childHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.children_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.layouter_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.add(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.add(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.addCompositeFigureListener(CompositeFigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.addNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.basicAdd(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.basicRemove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.basicRemoveAllChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.basicRemoveChild(int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.contains(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.fireFigureAdded(Figure,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.fireFigureRemoved(Figure,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getChild(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getChildCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getChildrenFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isVisible()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.getLayouter()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.invalidate()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.layout()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.remap(Map_Figure,Figure_,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.remove(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.removeAllChildren()_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.removeChild(int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.removeCompositeFigureListener(CompositeFigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.removeNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.setLayouter(Layouter)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.updateConnection()_MT">
    </element>
    <element name="org.jhotdraw.draw.LabeledLineConnectionFigure.validate()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_[])_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_[],String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.DefaultAttributeAction(DrawingEditor,AttributeKey_?_[],String,Icon,Map_AttributeKey_?_,Object_)_CN">
        <uses provider="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.action.DefaultAttributeAction.keys_FE"/>
        <uses provider="org.jhotdraw.draw.action.DefaultAttributeAction.fixedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.fixedAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.keys_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.action.DefaultAttributeAction.changeAttribute()_MT"/>
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.changeAttribute()_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.DefaultAttributeAction.keys_FE"/>
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.draw.action.DefaultAttributeAction.fixedAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DefaultAttributeAction.selectionChanged(FigureSelectionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingEditor,double,AbstractButton)_CN">
        <uses provider="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingView,double,AbstractButton)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingView,double,AbstractButton)_CN">
        <uses provider="org.jhotdraw.draw.action.ZoomAction.button_FE"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.label_FE"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.scaleFactor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.button_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.label_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.scaleFactor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ZoomAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setScaleFactor(double)_CM"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.button_FE"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.label_FE"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.scaleFactor_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.BezierPath$Node(BezierPath)_CN">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.BezierPath$Node(double,double)_CN">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.BezierPath$Node(int,double,double,double,double,double,double)_CN">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.BezierPath$Node(int,Point2D,Point2D,Point2D)_CN">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.BezierPath$Node(Node)_CN">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.setTo(Node)_MT"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.BezierPath$Node(Point2D)_CN">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.mask_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.x_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.y_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.clone()_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.equals(Object)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.getControlPoint(int)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.getMask()_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.hashCode()_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.moveBy(double,double)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.moveTo(double,double)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.moveBy(double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.moveTo(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.setControlPoint(int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.setMask(int)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.setTo(Node)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath$Node.toString()_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(int,Point2D,Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.addPolyline(Collection_Point2D_)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.arcTo(double,double,double,boolean,boolean,double,double)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.chop(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.clone()_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.curveTo(double,double,double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.findSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.get(int,int)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getCenter()_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getLengthOfPath(double)_CM">
        <uses provider="org.jhotdraw.geom.Geom.length(double,double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPointOnPath(double,double)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getControlPoint(int)_MT"/>
        <uses provider="org.jhotdraw.geom.Geom.length(double,double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getRelativePositionOnPath(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getWindingRule()_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.indexOfOutermostNode()_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.Geom.length2(double,double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.invalidatePath()_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.joinSegments(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.lineTo(double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.moveTo(double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.outlineContains(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.quadTo(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.set(int,int,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setTo(BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setWindingRule(int)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.splitSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.toGeneralPath()_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.toPolygonArray()_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.validatePath()_CM">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.BezierPath()_CN">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.bounds_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.C0_MASK_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.C1C2_MASK_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.C1_MASK_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.C2_MASK_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.generalPath_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.isClosed_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.outer_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.windingRule_FE">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(int,Point2D,Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.add(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.addPolyline(Collection_Point2D_)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.arcTo(double,double,double,boolean,boolean,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.clone()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.contains(double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.contains(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.contains(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.curveTo(double,double,double,double,double,double)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.Geom.angle(double,double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.findSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.get(int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getBounds2D()_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getCenter()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getLengthOfPath(double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPathIterator(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPathIterator(AffineTransform,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getPointOnPath(double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getRelativePositionOnPath(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.getWindingRule()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.indexOfOutermostNode()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.intersects(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.intersects(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.invalidatePath()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.isClosed()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.joinSegments(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.lineTo(double,double)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.moveTo(double,double)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.outlineContains(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.quadTo(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.set(int,int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setClosed(boolean)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setTo(BezierPath)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.clone()_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.setTo(Node)_MT"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.setWindingRule(int)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.splitSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.toGeneralPath()_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.toPolygonArray()_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.BezierPath.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.geom.BezierPath.validatePath()_MT">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double)_CN">
        <uses provider="org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double,int,int,double,float[],float)_CN"/>
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double,int,int,double,float[],float)_CN">
        <uses provider="org.jhotdraw.geom.DoubleStroke.innerWidth_FE"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.miterLimit_FE"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.outlineStroke_FE"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.outlineWidth_FE"/>
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.dashes_FE">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.dashPhase_FE">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.innerWidth_FE">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.miterLimit_FE">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.outlineStroke_FE">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.outlineWidth_FE">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.computeThickLine(double,double,double,double,double,double[])_MT">
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.computeThickLine(double[],int,double[])_MT">
        <uses provider="org.jhotdraw.geom.DoubleStroke.innerWidth_FE"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.computeThickLine(double,double,double,double,double,double[])_MT"/>
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.createStrokedShape(Shape)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.outlineStroke_FE"/>
    </element>
    <element name="org.jhotdraw.geom.DoubleStroke.traceStroke(BezierPath,Path2D,Path2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN">
        <uses provider="org.jhotdraw.geom.GrowStroke.grow_FE"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double,int,int,double,float[],float)_CN"/>
    </element>
    <element name="org.jhotdraw.geom.GrowStroke.grow_FE">
    </element>
    <element name="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.grow_FE"/>
        <uses provider="org.jhotdraw.geom.Geom.contains(Rectangle2D,Rectangle2D)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JFileChooser,int)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane,int,Object,Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane,int,Object,Object)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(URIChooser,int)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.getWindowForComponent(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.JSheet.installSheet()_CM">
        <uses provider="org.jhotdraw.gui.JSheet.isInstalled_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.oldLocation_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.ownerMovementHandler_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.shiftBackLocation_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.isShowAsSheet()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.isAnimated()_CM">
        <uses provider="org.jhotdraw.gui.JSheet.isAnimated_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.isDocumentModalitySupported()_CM">
        <uses provider="org.jhotdraw.gui.JSheet.isDocumentModalitySupported_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.isNativeSheetSupported()_CM">
        <uses provider="org.jhotdraw.gui.JSheet.isNativeSheetSupported_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.removeSheetListener(SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.requestUserAttention(boolean)_CM">
    </element>
    <element name="org.jhotdraw.gui.JSheet.setAnimated(boolean)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.isAnimated_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,Icon,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,Icon,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.styleFromMessageType(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,Icon,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,Icon,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,Icon,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOpenSheet(JFileChooser,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOpenSheet(URIChooser,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.styleFromMessageType(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSaveSheet(JFileChooser,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.JSheet(Frame)_CN"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(JOptionPane,Component,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.styleFromMessageType(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)_CM">
        <uses provider="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.JSheet(Frame)_CN"/>
        <uses provider="org.jhotdraw.gui.JSheet.show()_MT"/>
        <uses provider="org.jhotdraw.gui.URIChooser.addActionListener(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.rescanCurrentDirectory()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setApproveButtonText(String)_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.uninstallSheet()_CM">
        <uses provider="org.jhotdraw.gui.JSheet.isInstalled_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.ownerMovementHandler_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.shiftBackLocation_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.JSheet(Dialog)_CN">
        <uses provider="org.jhotdraw.gui.JSheet.isAnimated_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.init()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.JSheet(Frame)_CN">
        <uses provider="org.jhotdraw.gui.JSheet.isAnimated_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.listenerList_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.init()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.isAnimated_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isDocumentModalitySupported_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isInstalled_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isNativeSheetSupported_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.listenerList_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.oldFocusOwner_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.oldLocation_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.ownerMovementHandler_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.ownersGlassPane_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.shiftBackLocation_FE">
    </element>
    <element name="org.jhotdraw.gui.JSheet.addNotify()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.addSheetListener(SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.createSheet(JOptionPane,Component,int)_MT">
        <uses provider="org.jhotdraw.gui.JSheet.getWindowForComponent(Component)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.JSheet(Dialog)_CN"/>
        <uses provider="org.jhotdraw.gui.JSheet.JSheet(Frame)_CN"/>
        <uses provider="org.jhotdraw.gui.JSheet.isNativeSheetSupported()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.dispose()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.uninstallSheet()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JFileChooser,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(JOptionPane,int,Object,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.fireOptionSelected(URIChooser,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.getWindowForComponent(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.hide()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.isAnimated()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.uninstallSheet()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.hide0()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.isShowAsSheet()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.isNativeSheetSupported()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.hide0()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.isDocumentModalitySupported()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.ownersGlassPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.init()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.ownerMovementHandler_FE"/>
        <uses provider="org.jhotdraw.gui.JSheet.isShowAsSheet()_MT"/>
        <uses provider="org.jhotdraw.util.Methods.invokeIfExistsWithEnum(Object,String,String,String)_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.isDocumentModalitySupported()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.isNativeSheetSupported()_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.installSheet()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isAnimated()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isDocumentModalitySupported()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isNativeSheetSupported()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.isShowAsSheet()_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.removeSheetListener(SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.requestUserAttention(boolean)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.setAnimated(boolean)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.show()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.installSheet()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.isAnimated()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.isShowAsSheet()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.show0()_MT"/>
        <uses provider="org.jhotdraw.gui.JSheet.isDocumentModalitySupported()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.isNativeSheetSupported()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.requestUserAttention(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.show0()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.isDocumentModalitySupported()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.ownersGlassPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,Icon,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,int,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,int,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showConfirmSheet(Component,Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,Icon,Object[],Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,int,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showInputSheet(Component,Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,Icon,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,int,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOpenSheet(JFileChooser,Component,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOpenSheet(URIChooser,Component,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showOptionSheet(Component,Object,int,int,Icon,Object[],Object,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSaveSheet(JFileChooser,Component,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(JFileChooser,Component,String,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(JOptionPane,Component,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.styleFromMessageType(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JSheet.uninstallSheet()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.createToolBars(Application,View)_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.draw.DrawApplicationModel.getSharedEditor()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.getEditor()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.DrawApplicationModel()_CN">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.sharedEditor_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.addDefaultCreationButtonsTo(JToolBar,DrawingEditor,Collection_Action_,Collection_Action_)_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.DiamondFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.EllipseFigure.EllipseFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.LineFigure.LineFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.RectangleFigure.RectangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TriangleFigure.TriangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)_CN"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.ImageFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.ConnectionFigure.setLiner(Liner)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.getPrototype()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.ImageTool(ImageHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.TextCreationTool(TextHolderFigure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.createOpenChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.createSaveChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.getSharedEditor()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawApplicationModel.sharedEditor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplicationModel.initView(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawApplicationModel.getSharedEditor()_MT"/>
        <uses provider="org.jhotdraw.app.Application.isSharingToolsAmongViews()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawFigureFactory.DrawFigureFactory()_CN">
        <uses provider="org.jhotdraw.samples.draw.DrawFigureFactory.classTagArray_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawFigureFactory.enumTagArray_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.DefaultDOMFactory()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawFigureFactory.classTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawFigureFactory.enumTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.jPanel1_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.toolButtonGroup_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.DrawingPanel()_CN">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ZoomAction.ZoomAction(DrawingEditor,double,AbstractButton)_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.attributesToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.creationToolbar_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.view_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.attributesToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.creationToolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.drawing_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.jPanel1_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.view_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.addCreationButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.addDefaultCreationButtonsTo(JToolBar,DrawingEditor,Collection_Action_,Collection_Action_)_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.DiamondFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.EllipseFigure.EllipseFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.LineFigure.LineFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.RectangleFigure.RectangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TriangleFigure.TriangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)_CN"/>
        <uses provider="org.jhotdraw.draw.ConnectionFigure.setLiner(Liner)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.getPrototype()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.TextAreaCreationTool.TextAreaCreationTool(TextHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.tool.TextCreationTool.TextCreationTool(TextHolderFigure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.getView()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawingPanel.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.Main.main(String[])_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGApplicationModel.SVGApplicationModel()_CN"/>
        <uses provider="org.jhotdraw.app.Application.launch(String[])_CM"/>
        <uses provider="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.setVerbose(boolean)_MT"/>
        <uses provider="org.jhotdraw.app.SDIApplication.SDIApplication()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure,Map_AttributeKey_?_,Object_)_CN">
        <uses provider="org.jhotdraw.samples.svg.PathTool.pathPrototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.pathPrototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.createPath()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.applyDefaultAttributesTo(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.PathTool.pathPrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.PathTool.finishCreation(BezierFigure,DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.PathTool.createPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createMenuBuilder()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.SVGApplicationModel()_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGApplicationModel.gridConstrainer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.gridConstrainer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.INPUT_FORMAT_MAP_CLIENT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.OUTPUT_FORMAT_MAP_CLIENT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.scaleFactors_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.sharedEditor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createActionMap(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGApplicationModel.getSharedEditor()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()_CN"/>
        <uses provider="org.jhotdraw.app.Application.isSharingToolsAmongViews()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.getEditor()_MT"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN"/>
        <uses provider="org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)_MT"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.ViewSourceAction.ViewSourceAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.getUndoManager()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createExportChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.SVGView()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createMenuBuilder()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createOpenChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.SVGView()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.getFileFilter()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createSaveChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.SVGView()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.getSharedEditor()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplicationModel.sharedEditor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplicationModel.initView(Application,View)_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGApplicationModel.getSharedEditor()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()_CN"/>
        <uses provider="org.jhotdraw.app.Application.isSharingToolsAmongViews()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.addEdit(UndoableEdit)_CM">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.getPresentationName()_CM">
        <uses provider="org.jhotdraw.undo.CompositeEdit.presentationName_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.getRedoPresentationName()_CM">
        <uses provider="org.jhotdraw.undo.CompositeEdit.presentationName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.getUndoPresentationName()_CM">
        <uses provider="org.jhotdraw.undo.CompositeEdit.presentationName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.isSignificant()_CM">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isSignificant_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.CompositeEdit()_CN">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isSignificant_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.CompositeEdit(boolean)_CN">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isSignificant_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isSignificant_FE"/>
        <uses provider="org.jhotdraw.undo.CompositeEdit.presentationName_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String,boolean)_CN">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isSignificant_FE"/>
        <uses provider="org.jhotdraw.undo.CompositeEdit.presentationName_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.isSignificant_FE">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.isVerbose_FE">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.presentationName_FE">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.addEdit(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.getPresentationName()_MT">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.getRedoPresentationName()_MT">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.getUndoPresentationName()_MT">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.isSignificant()_MT">
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.setSignificant(boolean)_MT">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isSignificant_FE"/>
    </element>
    <element name="org.jhotdraw.undo.CompositeEdit.setVerbose(boolean)_MT">
        <uses provider="org.jhotdraw.undo.CompositeEdit.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,boolean)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,Class_?_,Object)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,Class_?_[],Object[])_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,float)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,int)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,String)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,boolean)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,int)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,long)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,Object)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String)_CM">
        <uses provider="org.jhotdraw.util.Methods.invoke(Object,String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String,boolean)_CM">
        <uses provider="org.jhotdraw.util.Methods.invoke(Object,String,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String,Class_?_,Object)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String,float)_CM">
        <uses provider="org.jhotdraw.util.Methods.invoke(Object,String,float)_CM"/>
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExistsWithEnum(Object,String,String,String)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(Class_?_,String)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(Class_?_,String,Class_?_,Object)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(Class_?_,String,Class_?_[],Object[])_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(String,String)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(String,String,Class_?_[],Object[])_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(String,String,Class_?_[],Object[],Object)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStaticGetter(Class_?_,String,boolean)_CM">
    </element>
    <element name="org.jhotdraw.util.Methods.Methods()_CN">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,Class_?_,Object)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,Class_?_[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,float)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,int)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invoke(Object,String,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,int)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,long)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeGetter(Object,String,Object)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String,Class_?_,Object)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExists(Object,String,float)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeIfExistsWithEnum(Object,String,String,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(Class_?_,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(Class_?_,String,Class_?_,Object)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(Class_?_,String,Class_?_[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(String,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(String,String,Class_?_[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStatic(String,String,Class_?_[],Object[],Object)_MT">
    </element>
    <element name="org.jhotdraw.util.Methods.invokeStaticGetter(Class_?_,String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.format(String,Object[])_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.resource_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.generateFallbackKeys(String,ArrayList_String_)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.propertyNameModifiers_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String,Locale)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getBundle(String,Locale)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.ResourceBundleUtil(String,Locale)_CN"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getInteger(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getKeyStroke(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getLargeIconProperty(String,Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getMnemonic(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getSmallIconProperty(String,Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.resource_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.acceleratorKeys_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getWrappedBundle()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.resource_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.putPropertyNameModifier(String,String[])_CM">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.readObject(ObjectInputStream)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.resource_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.locale_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.removePropertyNameModifier(String)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.propertyNameModifiers_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.ResourceBundleUtil(String,Locale)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseClass_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.resource_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.locale_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.acceleratorKeys_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.baseClass_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.baseName_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.locale_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.propertyNameModifiers_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.resource_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBaseClass()_MT"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String,Class_?_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureButton(AbstractButton,String)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBaseClass()_MT"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureButton(AbstractButton,String,Class_?_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseClass_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBaseClass()_MT"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String,Class_?_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.createMenuItem(Action,String)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.format(String,Object[])_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.generateFallbackKeys(String,ArrayList_String_)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getAcceleratorProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getBaseClass()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseClass_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getBundle(String,Locale)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getIconProperty(String,String,Class_?_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getInteger(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getKeyStroke(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getLargeIconProperty(String,Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getMnemonic(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getMnemonicProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getSmallIconProperty(String,Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getString(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getStringRecursive(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getTextProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.getWrappedBundle()_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.isVerbose()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.putPropertyNameModifier(String,String[])_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.propertyNameModifiers_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.readObject(ObjectInputStream)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.removePropertyNameModifier(String)_MT">
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.setBaseClass(Class_?_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseClass_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.setVerbose(boolean)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.isVerbose_FE"/>
    </element>
    <element name="org.jhotdraw.util.ResourceBundleUtil.toString()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.resource_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.baseName_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DOMInput.closeElement()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,boolean)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,int)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getElementCount()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getInheritedAttribute(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getTagName()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getText()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getText(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.openElement(int)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.openElement(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.openElement(String,int)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.readObject()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.readObject(int)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.closeElement()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getAttribute(String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getElementCount()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getElementCount(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getInheritedAttribute(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getTagName()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getText()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.getText(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.openElement(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.openElement(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.openElement(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.readObject()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMInput.readObject(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,boolean)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,boolean,boolean)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,double,double)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,float)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,float,float)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,int)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,int,int)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,String,String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addComment(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addText(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.closeElement()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.getPrototype()_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.openElement(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.setDoctype(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,boolean,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,double,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,float)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,float,float)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,int,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addAttribute(String,String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addComment(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.addText(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.closeElement()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.getPrototype()_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.openElement(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.setDoctype(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMOutput.writeObject(Object)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMStorable.read(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMStorable.write(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,boolean)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,double)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,float)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,int)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addComment(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addText(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.closeElement()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.openElement(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.save(OutputStream)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.doctype_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.document_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.reset()_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.save(Writer)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.doctype_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.document_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.reset()_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.JavaxDOMOutput(DOMFactory)_CN">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.factory_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.current_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.doctype_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.document_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.factory_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.objectids_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.prototypes_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,boolean,boolean)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,double,double)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,float)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,float,float)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,float)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,int,int)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,int)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String,String)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addComment(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.addText(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.closeElement()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.getPrototype()_MT">
        <uses provider="org.jhotdraw.xml.DOMFactory.create(String)_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.prototypes_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.openElement(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.reset()_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.document_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.objectids_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.save(OutputStream)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.save(Writer)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.setDoctype(String)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.doctype_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMOutput.writeObject(Object)_MT">
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.addAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMOutput.objectids_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.getName(Object)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.write(DOMOutput,Object)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.getTransferData(DataFlavor)_CM">
        <uses provider="org.jhotdraw.xml.XMLTransferable.data_FE"/>
        <uses provider="org.jhotdraw.xml.XMLTransferable.flavor_FE"/>
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.getTransferDataFlavors()_CM">
        <uses provider="org.jhotdraw.xml.XMLTransferable.flavor_FE"/>
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.isDataFlavorSupported(DataFlavor)_CM">
        <uses provider="org.jhotdraw.xml.XMLTransferable.flavor_FE"/>
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.lostOwnership(Clipboard,Transferable)_CM">
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.XMLTransferable(byte[],String,String)_CN">
        <uses provider="org.jhotdraw.xml.XMLTransferable.data_FE"/>
        <uses provider="org.jhotdraw.xml.XMLTransferable.flavor_FE"/>
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.data_FE">
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.flavor_FE">
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.getTransferData(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.getTransferDataFlavors()_MT">
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.xml.XMLTransferable.lostOwnership(Clipboard,Transferable)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.LinearGradient()_CN">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.LinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_CN">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.spreadMethod_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.transform_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.x1_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.x2_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.y1_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.y2_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.equals(LinearGradient)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.equals(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.equals(LinearGradient)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getPaint(Figure,double)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getStopColors()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getStopOffsets()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getStopOpacities()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getTransform()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getX1()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getX2()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getY1()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.getY2()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.hashCode()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.makeRelativeToFigureBounds(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setGradientVector(double,double,double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.x2_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y1_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.y2_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setRelativeToFigureBounds(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setStops(double[],Color[],double[])_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.setTransform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.toString()_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.hashCode()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.LinearGradient.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.RadialGradient()_CN">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.RadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_CN">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fy_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.cx_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.cy_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.fx_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.fy_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.r_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.transform_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.equals(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.equals(RadialGradient)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.equals(RadialGradient)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fy_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getCX()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getCY()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getFX()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fx_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getFY()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fy_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getPaint(Figure,double)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.fy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.hashCode()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getR()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getStopColors()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getStopOffsets()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getStopOpacities()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.getTransform()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.hashCode()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.makeRelativeToFigureBounds(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setGradientCircle(double,double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cx_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.cy_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.r_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setRelativeToFigureBounds(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setStops(double[],Color[],double[])_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopColors_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOffsets_FE"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.stopOpacities_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.setTransform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.RadialGradient.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.transform_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.Insets2D$Double(Insets2D)_CN">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.Insets2D$Double(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.bottom_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.left_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.right_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.top_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.getBottom()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.getLeft()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.getRight()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.getTop()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Double.set(double,double,double,double)_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.Insets2D$Float(Insets2D)_CN">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.Insets2D$Float(float,float,float,float)_CN">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.bottom_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.left_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.right_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.top_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.getBottom()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.bottom_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.getLeft()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.left_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.getRight()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.right_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.getTop()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.set(double,double,double,double)_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D$Float.set(float,float,float,float)_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Float.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Float.top_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Insets2D.add(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.add(Insets2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.addTo(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.clone()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.equals(Object)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getBottom()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getLeft()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getRight()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getTop()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.hashCode()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.set(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.set(Insets2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.subtract(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.subtract(Insets2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.subtractTo(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.toString()_CM">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.Insets2D()_CN">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.add(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.add(Insets2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.addTo(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.clone()_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getBottom()_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getLeft()_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getRight()_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.getTop()_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.set(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.set(Insets2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.subtract(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.subtract(Insets2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.subtractTo(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Insets2D.toString()_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.QuadTree$QuadNode(Rectangle2D)_CN">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.bounds_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.northEast_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.northWest_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.objects_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.southEast_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.southWest_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.add(T,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.findContains(Point2D,HashSet_T_)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.findInside(Rectangle2D,HashSet_T_)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.findIntersects(Rectangle2D,HashSet_T_)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.isLeaf()_MT">
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.northEast_FE"/>
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.join()_MT">
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.northEast_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.northWest_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.objects_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.southEast_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.southWest_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.isLeaf()_MT"/>
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.remove(T)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree$QuadNode.split()_MT">
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.bounds_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.northEast_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.northWest_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.objects_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.southEast_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.southWest_FE"/>
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.isLeaf()_MT"/>
    </element>
    <element name="org.jhotdraw.geom.QuadTree.QuadTree()_CN">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.QuadTree(Rectangle2D)_CN">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.maxCapacity_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.maxOutside_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.minSize_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.outside_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.root_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.add(T,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.findContains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.findInside(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.findIntersects(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.remove(T)_MT">
    </element>
    <element name="org.jhotdraw.geom.QuadTree.reorganize()_MT">
        <uses provider="org.jhotdraw.geom.QuadTree$QuadNode.join()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DecoratedFigure.getDecorator()_CM">
    </element>
    <element name="org.jhotdraw.draw.DecoratedFigure.setDecorator(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DecoratedFigure.getDecorator()_MT">
    </element>
    <element name="org.jhotdraw.draw.DecoratedFigure.setDecorator(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.getBufferedImage()_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.getImageData()_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.loadImage(File)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.loadImage(InputStream)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.setBufferedImage(BufferedImage)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.setImage(byte[],BufferedImage)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.getBufferedImage()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.getImageData()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.loadImage(File)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.loadImage(InputStream)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.setBufferedImage(BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageHolderFigure.setImage(byte[],BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getBaseline()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getFillColor()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getFont()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getFontSize()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getInsets()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getLabelFor()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getTabSize()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getText()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getTextColor()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getTextColumns()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.isEditable()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.isTextOverflow()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.setFontSize(float)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.setText(String)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getBaseline()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getFillColor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getFont()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getFontSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getLabelFor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getTabSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getText()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getTextColor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.getTextColumns()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.isEditable()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.isTextOverflow()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.setFontSize(float)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextHolderFigure.setText(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ImageTransferable.ImageTransferable(Image)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.ImageTransferable.image_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ImageTransferable.image_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ImageTransferable.IMAGE_PNG_FLAVOR_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ImageTransferable.getTransferData(DataFlavor)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.ImageTransferable.image_FE"/>
        <uses provider="org.jhotdraw.util.Images.toBufferedImage(Image)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ImageTransferable.getTransferDataFlavors()_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.ImageTransferable.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor,byte[])_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor[],byte[])_CN"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor[],byte[])_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.InputStreamTransferable.data_FE"/>
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor[])_CN"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.InputStreamTransferable.data_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.InputStreamTransferable.getTransferData(DataFlavor)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.InputStreamTransferable.data_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.attributes_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.height_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.heightPercentFactor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.isPreserveAspectRatio_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.numberFactor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.viewBox_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.width_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.widthPercentFactor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.toString()_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.heightPercentFactor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.numberFactor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.widthPercentFactor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.flattenStyles(IXMLElement)_CM">
        <uses provider="org.jhotdraw.xml.css.CSSParser.parse(String,StyleManager)_MT"/>
        <uses provider="org.jhotdraw.xml.css.StyleManager.applyStylesTo(IXMLElement)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.identifyElements(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_CM">
        <uses provider="org.jhotdraw.xml.css.StyleManager.clear()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readAElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChild(int)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildCount()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readAttribute(IXMLElement,String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readCircleElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readCoreAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readDefsElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readEllipseElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readGElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readImageElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.draw.CompositeFigure.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritAttribute(IXMLElement,String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritColorAttribute(IXMLElement,String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritFontSizeAttribute(IXMLElement,String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLinearGradientElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGFigureFactory.createLinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLineAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLineElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readOpacityAttribute(IXMLElement,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readPathElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readPolygonElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readPolylineElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readRadialGradientElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGFigureFactory.createRadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readRectElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readShapeAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSVGElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.height_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.heightPercentFactor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.isPreserveAspectRatio_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.numberFactor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.viewBox_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.width_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.widthPercentFactor_FE"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSwitchElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextAreaElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTSpanElement(IXMLElement,DefaultStyledDocument)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readUseElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toColor(IXMLElement,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toCommaSeparatedArray(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toDouble(IXMLElement,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toDouble(IXMLElement,String,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toHeight(IXMLElement,String)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.heightPercentFactor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toLength(IXMLElement,String,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toNumber(IXMLElement,String)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.numberFactor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPaint(IXMLElement,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPath(IXMLElement,String)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.getStartPosition()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)_CN"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parsePlusAsNumber()_MT"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.setReader(Reader)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPoints(IXMLElement,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toQuotedAndCommaSeparatedArray(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toText(IXMLElement,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toWidth(IXMLElement,String)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.widthPercentFactor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toWSOrCommaSeparatedArray(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.SVGInputFormat()_CN">
        <uses provider="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.DefaultSVGFigureFactory()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.SVGInputFormat(SVGFigureFactory)_CN">
        <uses provider="org.jhotdraw.text.FontFormatter.FontFormatter()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.document_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.elementObjects_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.factory_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.figures_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.fontFormatter_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.identifiedElements_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.styleManager_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.supportedFeatures_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPathTokenizer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.url_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.viewportStack_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.flattenStyles(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.identifyElements(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.initStorageContext(IXMLElement)_MT">
        <uses provider="org.jhotdraw.xml.css.StyleManager.StyleManager()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(File,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(InputStream,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(Transferable,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(URI,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(URI,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.read(URL,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readAElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readCircleElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readCoreAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readDefsElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readEllipseElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readFontAttributes(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.text.FontFormatter.stringToValue(String)_MT"/>
        <uses provider="org.jhotdraw.text.FontFormatter.setAllowsUnknownFont(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readGElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readGraphicsAttributes(IXMLElement,Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readImageElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritColorAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readInheritFontSizeAttribute(IXMLElement,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLinearGradientElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLineAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readLineElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readOpacityAttribute(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readPathElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readPolygonElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readPolylineElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readRadialGradientElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readRectElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readShapeAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSolidColorElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSVGElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readSwitchElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextAreaElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextAttributes(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTextFlowAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTransformAttribute(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readTSpanElement(IXMLElement,DefaultStyledDocument)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readUseElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readUseShapeAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.readViewportAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.heightPercentFactor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGInputFormat$Viewport.widthPercentFactor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toColor(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toCommaSeparatedArray(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toDouble(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toDouble(IXMLElement,String,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toHeight(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toLength(IXMLElement,String,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toNumber(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPaint(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPath(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toPoints(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toQuotedAndCommaSeparatedArray(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toText(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toTransform(IXMLElement,String)_MT">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.wordChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)_CN"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.sval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toWidth(IXMLElement,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGInputFormat.toWSOrCommaSeparatedArray(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,double)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,float)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,int)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addComment(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addText(String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.print(PrintWriter)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.save(OutputStream)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.doctype_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.document_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.objectids_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.doctype_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.document_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.factory_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.objectids_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.prototypes_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.stack_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean,boolean)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,double,double)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,float)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,float,float)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,float)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,int,int)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,int)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String,String)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addComment(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.addText(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.dispose()_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.getPrototype()_MT">
        <uses provider="org.jhotdraw.xml.DOMFactory.create(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.prototypes_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.print(PrintWriter)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.save(OutputStream)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.setDoctype(String)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.doctype_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.addAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.objectids_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.getName(Object)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.write(DOMOutput,Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.getFiguresFrontToBack()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.AbstractDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.needsSorting_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.draw(Graphics2D,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isVisible()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.ensureSorted()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigure(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureBehind(Point2D,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureBehind(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureExcept(Point2D,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureExcept(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFigures(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.findFiguresWithin(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.getFiguresFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.invalidateSortOrder()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.setAttributeOnChildren(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawing.sort(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getLineOfOffset(int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getLineStartOffset(int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getLineWrap()_CM">
        <uses provider="org.jhotdraw.samples.teddy.JEditorArea.wrap_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getScrollableTracksViewportWidth()_CM">
        <uses provider="org.jhotdraw.samples.teddy.JEditorArea.wrap_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.replaceRange(String,int,int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.setLineWrap(boolean)_CM">
        <uses provider="org.jhotdraw.samples.teddy.JEditorArea.wrap_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.JEditorArea.rebuildView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.JEditorArea()_CN">
        <uses provider="org.jhotdraw.samples.teddy.JEditorArea.initComponents()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.wrap_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getLineOfOffset(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getLineStartOffset(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getLineWrap()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getScrollableTracksViewportWidth()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.getStyledEditorKit()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.rebuildView()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.replaceRange(String,int,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.JEditorArea.setLineWrap(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext()_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.document_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findString_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchLowerCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchType_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchUpperCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.isWordChar(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findNext()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.document_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findString_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchLowerCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchType_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchUpperCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.isWordChar(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious(int)_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.reset()_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.setStartIndex(int)_CM">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String)_CN">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String,boolean,MatchType)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String,boolean,MatchType)_CN">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.document_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findString_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchLowerCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchType_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchUpperCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.document_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findString_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.matchLowerCase_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.matchType_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.matchUpperCase_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.startIndex_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.getFindString()_MT">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findString_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.getMatchType()_MT">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchType_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.isMatchCase()_MT">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchLowerCase_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.matchUpperCase_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.isWordChar(int)_MT">
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.reset()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.regex.Matcher.setStartIndex(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.ButtonFactory$ToolButtonListener(Tool,DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.tool_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.tool_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.itemStateChanged(ItemEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM"/>
        <uses provider="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.ButtonFactory$ToolButtonListener.tool_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor,List_Disposable_)_CM">
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAttributesButtonsTo(JToolBar,DrawingEditor)_CM">
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.ApplyAttributesAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.PickAttributesAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addToolTo(JToolBar,DrawingEditor,Tool,String,ResourceBundleUtil)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createApplyAttributesButton(DrawingEditor)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,List_Disposable_)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getColor()_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getName()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape)_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getIconHeight()_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getIconWidth()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String,int,int)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getColor()_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getName()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,List_Disposable_)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String)_CN"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getColor()_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.getName()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createToggleGridButton(DrawingView)_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.ButtonFactory()_CN">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.DEFAULT_COLORS_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.DEFAULT_COLORS_COLUMN_COUNT_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_AS_RGB_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_AS_RGB_COLUMN_COUNT_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.HSB_COLORS_COLUMN_COUNT_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.WEBSAVE_COLORS_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.WEBSAVE_COLORS_COLUMN_COUNT_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAlignmentButtonsTo(JToolBar,DrawingEditor,List_Disposable_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addAttributesButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addColorButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addColorButtonsTo(JToolBar,DrawingEditor,List_ColorIcon_,int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addFontButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Collection_Action_,Collection_Action_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addSelectionToolTo(JToolBar,DrawingEditor,Tool)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addStrokeButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addToolTo(JToolBar,DrawingEditor,Tool,String,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.addZoomButtonsTo(JToolBar,DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createApplyAttributesButton(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createApplyAttributesButton(DrawingEditor,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.draw.action.ApplyAttributesAction.ApplyAttributesAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingActions(DrawingEditor,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,List_Disposable_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorChooserButton(DrawingEditor,AttributeKey_Color_,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,Class_?_,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createDrawingColorChooserButton(DrawingEditor,AttributeKey_Color_,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,List_Disposable_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createEditorColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor,AttributeKey_Font_,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor,AttributeKey_Font_,ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.JFontChooser()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleBoldButton(DrawingEditor,ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleItalicButton(DrawingEditor,ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createFontStyleUnderlineButton(DrawingEditor,ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createPickAttributesButton(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createPickAttributesButton(DrawingEditor,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.draw.action.PickAttributesAction.PickAttributesAction(DrawingEditor)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionActions(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorButton(DrawingEditor,AttributeKey_Color_,List_ColorIcon_,int,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,List_Disposable_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorChooserButton(DrawingEditor,AttributeKey_Color_,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,Class_?_,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createSelectionColorChooserButton(DrawingEditor,AttributeKey_Color_,String,ResourceBundleUtil,Map_AttributeKey_?_,Object_,Shape,List_Disposable_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeCapButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeCapButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeCapButton(DrawingEditor,ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,double[][])_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,double[][],ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,double[][],ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeDashesButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeDecorationButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.action.LineDecorationIcon.LineDecorationIcon(LineDecoration,boolean)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeJoinButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeJoinButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeJoinButton(DrawingEditor,ResourceBundleUtil,List_Disposable_)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokePlacementButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeTypeButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.geom.DoubleStroke.DoubleStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,double[])_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,double[],ResourceBundleUtil)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createStrokeWidthButton(DrawingEditor,ResourceBundleUtil)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createToggleGridButton(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDrawingViews()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.ButtonFactory.createZoomButton(DrawingView,double[])_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.commentChar(int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.consumeGreedy(String)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.getStartPosition()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.setStartPosition(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.sval_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.eolIsSignificant(boolean)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.eolIsSignificantP_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.getEndPosition()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.endpos_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.getStartPosition()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.startpos_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.lineno()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.lineno_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.lowerCaseMode(boolean)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.forceLower_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nextChar()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.read()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.peekc_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushedBack_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.read()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.unread(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.buf_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.endpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.eolIsSignificantP_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.forceLower_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseHexNumbers_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.peekc_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushedBack_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.readpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashSlash_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashSlashCommentsP_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashStar_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashStarCommentsP_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.starSlash_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.startpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.sval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseExponents_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.lineno_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.ordinaryChar(int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.ordinaryChars(int,int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseExponents_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseHexNumbers()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseHexNumbers_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushedBack_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushCharBack(int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.unread(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.peekc_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushedBack_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.quoteChar(int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.read()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.reader_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.readpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.unread_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setReader(Reader)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.endpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.forceLower_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.peekc_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushedBack_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.reader_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.readpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.startpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.unread_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.lineno_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setSlashSlashToken(String)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.commentChar(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashSlash_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setSlashStarTokens(String,String)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.commentChar(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashStar_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.starSlash_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setStartPosition(int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.startpos_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashSlashComments(boolean)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashSlashCommentsP_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashStarComments(boolean)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashStarCommentsP_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.toString()_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.sval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.lineno_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.unread(int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.readpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.unread_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.wordChars(int,int)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer()_CN">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.commentChar(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.quoteChar(int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.wordChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.buf_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.endpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.eolIsSignificantP_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseHexNumbers_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.peekc_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.reader_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.readpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashSlash_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashSlashCommentsP_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashStar_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.slashStarCommentsP_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.starSlash_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.startpos_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.unread_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.isParseExponents_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.lineno_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)_CN">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer()_CN"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.reader_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.buf_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.ctype_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.CT_ALPHA_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.CT_COMMENT_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.CT_DIGIT_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.CT_QUOTE_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.CT_WHITESPACE_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.endpos_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.eolIsSignificantP_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.forceLower_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.isParseExponents_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.isParseHexNumbers_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.lineno_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.NEED_CHAR_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nval_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.peekc_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushedBack_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.reader_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.readpos_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.SKIP_LF_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashSlash_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashSlashCommentsP_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashStar_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashStarCommentsP_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.starSlash_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.startpos_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.sval_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.ttype_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.TT_EOF_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.TT_EOL_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.TT_NOTHING_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.TT_NUMBER_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.TT_WORD_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.unread_FE">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.commentChar(int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.consumeGreedy(String)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.eolIsSignificant(boolean)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.getEndPosition()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.getStartPosition()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.lineno()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.lowerCaseMode(boolean)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nextChar()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.nextToken()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.ordinaryChar(int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.ordinaryChars(int,int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseHexNumbers()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.parsePlusAsNumber()_MT">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ctype_FE"/>
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushBack()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.pushCharBack(int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.quoteChar(int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.read()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setReader(Reader)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setSlashSlashToken(String)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setSlashStarTokens(String,String)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.setStartPosition(int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashSlashComments(boolean)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.slashStarComments(boolean)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.toString()_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.unread(int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_MT">
    </element>
    <element name="org.jhotdraw.io.StreamPosTokenizer.wordChars(int,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.findSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.flattenTransform()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.joinSegments(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.splitSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure()_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure(boolean)_CN">
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.createHandles(SVGPathFigure,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.findSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.flattenTransform()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.cachedDrawingArea_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.cachedDrawingArea_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.joinSegments(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.splitSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGBezierFigure.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.addChangeListener(ChangeListener)_CM">
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.fireStateChanged()_CM">
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.changeEvent_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.removeChangeListener(ChangeListener)_CM">
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.AbstractConstrainer()_CN">
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.changeEvent_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.changeEvent_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.listenerList_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.addChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.clone()_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.clone()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractConstrainer.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.fireStateChanged()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractConstrainer.removeChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.getScaledInstance(Image,int,int)_CM">
    </element>
    <element name="org.jhotdraw.util.Images.hasAlpha(Image)_CM">
    </element>
    <element name="org.jhotdraw.util.Images.split(Image,int,boolean)_CM">
        <uses provider="org.jhotdraw.util.Images.toBufferedImage(Image)_MT"/>
    </element>
    <element name="org.jhotdraw.util.Images.toBufferedImage(RenderedImage)_CM">
    </element>
    <element name="org.jhotdraw.util.Images.Images()_CN">
    </element>
    <element name="org.jhotdraw.util.Images.createImage(Class_?_,String)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.createImage(URL)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.getScaledInstance(Image,int,int)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.hasAlpha(Image)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.split(Image,int,boolean)_MT">
    </element>
    <element name="org.jhotdraw.util.Images.toBufferedImage(Image)_MT">
        <uses provider="org.jhotdraw.util.Images.hasAlpha(Image)_CM"/>
    </element>
    <element name="org.jhotdraw.util.Images.toBufferedImage(RenderedImage)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.color_FE">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.getIconHeight()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.getIconWidth()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.color_FE"/>
        <uses provider="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.getIconHeight()_MT"/>
        <uses provider="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.getIconWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.setColor(Color)_MT">
        <uses provider="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.color_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer.ColorListCellRenderer()_CN">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer.icon_FE">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.ColorListCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)_MT">
        <uses provider="org.jhotdraw.color.ColorListCellRenderer$ColorIcon.setColor(Color)_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.toToolTipText(Color)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.DrawingColorIcon(DrawingEditor,AttributeKey_Color_,Image,Shape)_CN">
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.colorShape_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.DrawingColorIcon(DrawingEditor,AttributeKey_Color_,URL,Shape)_CN">
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.colorShape_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.colorShape_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.colorShape_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorIcon.key_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontChooserModel.isEditable(MutableTreeNode)_CM">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontChooserModel.isEditable(MutableTreeNode)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.isNodeChild(TreeNode)_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildCount()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.FontCollectionNode(String)_CN">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.FontCollectionNode(String,ArrayList_FontFamilyNode_)_CN">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.isEditable_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.name_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.parent_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.add(FontFamilyNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildCount()_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.insert(MutableTreeNode,int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.addAll(Collection_FontFamilyNode_)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.children()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.clone()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.parent_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildCount()_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.insert(MutableTreeNode,int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.compareTo(FontCollectionNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.families()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.getAllowsChildren()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildAt(int)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildCount()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.getIndex(TreeNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.getName()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.getParent()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.insert(MutableTreeNode,int)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.remove(MutableTreeNode)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.isEditable()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.isEditable_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.isLeaf()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.isNodeChild(TreeNode)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.remove(int)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.children_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.getChildAt(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.remove(MutableTreeNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.isNodeChild(TreeNode)_CM"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.getIndex(TreeNode)_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.remove(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.removeFromParent()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.setEditable(boolean)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.isEditable_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.setParent(MutableTreeNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.setUserObject(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontCollectionNode.toString()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.FontFaceNode(Font)_CN">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.name_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.typeface_FE"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.beautifyName(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.name_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.parent_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.typeface_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.beautifyName(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.children()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.clone()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.compareTo(FontFaceNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getAllowsChildren()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getChildAt(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getChildCount()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getFont()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.typeface_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getIndex(TreeNode)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getName()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.getParent()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.insert(MutableTreeNode,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.isEditable()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.isLeaf()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.remove(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.remove(MutableTreeNode)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.removeFromParent()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.setName(String)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.setParent(MutableTreeNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.parent_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.setUserObject(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.FontFaceNode.toString()_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.name_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.labelUI_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.layoutCL(JLabel,FontMetrics,String,Icon,Rectangle,Rectangle,Rectangle)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paintDisabledText(JLabel,Graphics,String,int,int)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.iconR_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.labelUI_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.textR_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.viewInsets_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.viewR_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.installDefaults(JLabel)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.layoutCL(JLabel,FontMetrics,String,Icon,Rectangle,Rectangle,Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paint(Graphics,JComponent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteUtilities.beginGraphics(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteUtilities.endGraphics(Graphics2D,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paintDisabledText(JLabel,Graphics,String,int,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.paintEnabledText(JLabel,Graphics,String,int,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar$ProxyPanel.AbstractToolBar$ProxyPanel(AbstractToolBar)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar$ProxyPanel.runner_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar$ProxyPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar$ProxyPanel.paint(Graphics)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.AbstractToolBar$ProxyPanel.runner_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.getID()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.init()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.AbstractToolBar()_CN">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.JDisclosureToolBar()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.disposables_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.panels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.prefs_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.clearDisclosedComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.createDisclosedComponent(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.dispose()_MT">
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.getDefaultDisclosureState()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.getDisclosedComponent(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.getEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AbstractToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.actions_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setPopupActions(List_Action_)_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.actions_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.ActionsToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.actions_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.popupButton_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.popupButton_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.getDefaultDisclosureState()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getID()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setPopupActions(List_Action_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.setUndoManager(UndoRedoManager)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.undoManager_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ActionsToolBar.updatePopupMenu()_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.popupButton_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.CanvasToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.CanvasToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean)_CN"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.CanvasToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.FillToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FillToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.getDefaultDisclosureState()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FillToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FillToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.initComponents()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.closeButton_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.iconLabel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.labels_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.messageLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.MessagePanel()_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.MessagePanel(Icon,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.MessagePanel(Icon,String)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.labels_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.setIcon(Icon)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.setMessage(String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.closeButton_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.iconLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.listeners_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.messageLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.addActionListener(ActionListener)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.listeners_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.closePerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.listeners_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.removeActionListener(ActionListener)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.listeners_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.setIcon(Icon)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.iconLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.MessagePanel.setMessage(String)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.MessagePanel.messageLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.StrokeToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double)_CN"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.getDefaultDisclosureState()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.StrokeToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.StrokeToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.addChangeListener(ChangeListener)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.fireStateChanged()_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.changeEvent_FE"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getExtent()_CM">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getMaximum()_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.size_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getMinimum()_CM">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getValue()_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.nread_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getValueIsAdjusting()_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.valueIsAdjusting_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.fireStateChanged()_CM"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.nread_FE"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.size_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.read()_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)_CM"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.read(byte[])_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)_CM"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.read(byte[],int,int)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)_CM"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.removeChangeListener(ChangeListener)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.reset()_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.fireStateChanged()_CM"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.nread_FE"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.size_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setExtent(int)_CM">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setMaximum(int)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.fireStateChanged()_CM"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.size_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setMinimum(int)_CM">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setRangeProperties(int,int,int,int,boolean)_CM">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setValue(int)_CM">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setValueIsAdjusting(boolean)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.valueIsAdjusting_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.skip(long)_CM">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)_CM"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.BoundedRangeInputStream(InputStream)_CN">
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.changeEvent_FE"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.listenerList_FE"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.nread_FE"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.size_FE"/>
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.changeEvent_FE">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.listenerList_FE">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.nread_FE">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.size_FE">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.valueIsAdjusting_FE">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.addChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.fireStateChanged()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getExtent()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getMaximum()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getMinimum()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getValue()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.getValueIsAdjusting()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.incrementValue(int)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.read()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.read(byte[])_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.read(byte[],int,int)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.removeChangeListener(ChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.reset()_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setExtent(int)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setMaximum(int)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setMinimum(int)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setRangeProperties(int,int,int,int,boolean)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setValue(int)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.setValueIsAdjusting(boolean)_MT">
    </element>
    <element name="org.jhotdraw.io.BoundedRangeInputStream.skip(long)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.SVGDrawingPanel$ItemChangeHandler(JToolBar,String)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.prefkey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.toolbar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.itemStateChanged(ItemEvent)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.prefkey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGDrawingPanel$ItemChangeHandler.toolbar_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.createDrawing()_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGZOutputFormat.SVGZOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.ImageMapOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat(String,String,String,int)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getPopupActions()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.getPopupActions()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.ActionsToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.AlignToolBar.AlignToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ArrangeToolBar.ArrangeToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.CanvasToolBar.CanvasToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBar.FigureToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FillToolBar.FillToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FontToolBar.FontToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.StrokeToolBar.StrokeToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.LinkToolBar.LinkToolBar()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ViewToolBar.ViewToolBar()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.read(URI)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.read(URI,InputFormat)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setPopupActions(List_Action_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.write(URI)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_CM"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.write(URI,OutputFormat)_CM">
        <uses provider="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.SVGDrawingPanel()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ViewToolBar.setView(DrawingView)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.actionToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.alignToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.arrangeToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.canvasToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.containerHandler_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.creationToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.figureToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.fillToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.fontToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.linkToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.prefs_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.strokeToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.toolsPane_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.toolsPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.toolsScrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.view_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.viewToolBar_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.dispose()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getPopupActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getUndoRedoManager()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.getView()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.read(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.read(URI,InputFormat)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ActionsToolBar.setUndoManager(UndoRedoManager)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.AlignToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ArrangeToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FillToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FontToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.StrokeToolBar.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.LinkToolBar.setEditor(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setPopupActions(List_Action_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.setUndoRedoManager(UndoRedoManager)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.write(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGDrawingPanel.write(URI,OutputFormat)_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.getAttributeValue()_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.getValueIsAdjusting()_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.isMultipleValues()_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.setAttributeValue(T)_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.setMultipleValues(boolean)_CM">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.ATTRIBUTE_VALUE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.MULTIPLE_VALUES_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.getAttributeValue()_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.getValueIsAdjusting()_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.isMultipleValues()_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.setAttributeValue(T)_MT">
    </element>
    <element name="org.jhotdraw.gui.AttributeEditor.setMultipleValues(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.basicGetBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.contains(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.getToolTipText(Point)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.trackEnd(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.trackStart(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.LinkHandle.trackStep(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.clearGenericFontFamilies()_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.createFormatterFactory()_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.createFormatterFactory(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.createFormatterFactory(boolean)_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.FontFormatter(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.getAllowsNullValue()_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.getAllowsUnknownFont()_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.setAllowsNullValue(boolean)_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.setAllowsUnknownFont(boolean)_CM">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.FontFormatter()_CN">
        <uses provider="org.jhotdraw.text.FontFormatter.FontFormatter(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.FontFormatter(boolean)_CN">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)_CM"/>
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.allowsNullValue_FE">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.clearGenericFontFamilies()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.createFormatterFactory()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.createFormatterFactory(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.getAllowsNullValue()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.getAllowsUnknownFont()_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.putGenericFontFamily(String,Font)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.setAllowsNullValue(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.setAllowsUnknownFont(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.FontFormatter.stringToValue(String)_MT">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.FontFormatter.allowsUnknownFont_FE"/>
        <uses provider="org.jhotdraw.text.FontFormatter.genericFontFamilies_FE"/>
    </element>
    <element name="org.jhotdraw.text.FontFormatter.valueToString(Object)_MT">
        <uses provider="org.jhotdraw.text.FontFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean,String)_CM"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean,String)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getAllowsNullValue()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximum()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.max_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximumFractionDigits()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.maxFractionDigits_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximumIntegerDigits()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.maxIntDigits_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimum()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.min_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumFractionDigits()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minFractionDigits_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumIntegerDigits()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minIntDigits_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumNegativeExponent()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minNegativeExponent_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumPositiveExponent()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minPositiveExponent_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMultiplier()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getUnit()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.isUsesScientificNotation()_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.usesScientificNotation_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.max_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.min_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setAllowsNullValue(boolean)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximum(Comparable)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.max_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.maxFractionDigits_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.scientificFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximumIntegerDigits(int)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.maxIntDigits_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.scientificFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimum(Comparable)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.min_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumFractionDigits(int)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minFractionDigits_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumIntegerDigits(int)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minIntDigits_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.scientificFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumNegativeExponent(int)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minNegativeExponent_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumPositiveExponent(int)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minPositiveExponent_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMultiplier(double)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setUnit(String)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.usesScientificNotation_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.stringToValue(String)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.getAllowsNullValue()_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.valueToString(Object)_CM">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.unit_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minNegativeExponent_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minPositiveExponent_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.scientificFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.usesScientificNotation_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter()_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minNegativeExponent_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minPositiveExponent_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.usesScientificNotation_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.initFormats()_MT"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double)_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean)_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setAllowsNullValue(boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMaximum(Comparable)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMinimum(Comparable)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setUnit(String)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMultiplier(double)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minNegativeExponent_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.minPositiveExponent_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.usesScientificNotation_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.initFormats()_MT"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.allowsNullValue_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.max_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.maxFractionDigits_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.maxIntDigits_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.min_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.minFractionDigits_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.minIntDigits_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.minNegativeExponent_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.minPositiveExponent_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.multiplier_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.scientificFormat_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.unit_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.usesScientificNotation_FE">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double,boolean,String)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getAllowsNullValue()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximum()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximumFractionDigits()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMaximumIntegerDigits()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimum()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumFractionDigits()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumIntegerDigits()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumNegativeExponent()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMinimumPositiveExponent()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getMultiplier()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.getUnit()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.initFormats()_MT">
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.decimalFormat_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.scientificFormat_FE"/>
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.isUsesScientificNotation()_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.isValidValue(Object,boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setAllowsNullValue(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximum(Comparable)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMaximumIntegerDigits(int)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimum(Comparable)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumFractionDigits(int)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumIntegerDigits(int)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumNegativeExponent(int)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMinimumPositiveExponent(int)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setMultiplier(double)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setUnit(String)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.stringToValue(String)_MT">
    </element>
    <element name="org.jhotdraw.text.JavaNumberFormatter.valueToString(Object)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.DnDMultiEditorSample.createDrawing()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DnDMultiEditorSample.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.DnDMultiEditorSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.DrawingOpacityIcon(DrawingEditor,AttributeKey_Double_,AttributeKey_Color_,AttributeKey_Color_,Image,Shape,Shape)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.opacityKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.DrawingOpacityIcon(DrawingEditor,AttributeKey_Double_,AttributeKey_Color_,AttributeKey_Color_,URL,Shape,Shape)_CN">
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.opacityKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillColorKey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.opacityKey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeColorKey_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.editor_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.fillShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.opacityKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeColorKey_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.DrawingOpacityIcon.strokeShape_FE"/>
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.invalidatedArea_FE"/>
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.FigureEvent(Figure,AttributeKey_?_,Object,Object)_CN">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.attribute_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.newValue_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.oldValue_FE"/>
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.FigureEvent(Figure,Rectangle2D)_CN">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.attribute_FE">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.invalidatedArea_FE">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.newValue_FE">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.oldValue_FE">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getAttribute()_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.attribute_FE"/>
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getFigure()_MT">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getNewValue()_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.newValue_FE"/>
    </element>
    <element name="org.jhotdraw.draw.event.FigureEvent.getOldValue()_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.oldValue_FE"/>
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.areaInvalidated(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.boundsInvalidated(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.toolDone(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.toolStarted(ToolEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.areaInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.boundsInvalidated(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.toolDone(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.event.ToolListener.toolStarted(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthEastHandle.ResizeHandleKit$NorthEastHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthEastHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthEastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthEastHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthWestHandle.ResizeHandleKit$NorthWestHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthWestHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthWestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthWestHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.ResizeHandleKit$ResizeHandle(Figure,Locator)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.aspectRatio_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.geometry_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sb_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sx_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sy_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.getToolTipText(Point)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getTransformRestoreData()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.geometry_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getTransformRestoreData()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.geometry_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.aspectRatio_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sb_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sx_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sy_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sx_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.sy_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.isTransformableCache_FE"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$ResizeHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthEastHandle.ResizeHandleKit$SouthEastHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthEastHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthEastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthEastHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthHandle.ResizeHandleKit$SouthHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthWestHandle.ResizeHandleKit$SouthWestHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthWestHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthWestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$SouthWestHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)_CN">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String[],String[])_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String,String)_CN">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String[],String[])_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure,String,String,String[],String[])_CN">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.formatName_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.fileExtensions_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.mimeTypes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.description_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.fileExtensions_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.formatName_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.mimeTypes_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.prototype_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.createImageHolder(InputStream)_MT">
        <uses provider="org.jhotdraw.draw.ImageHolderFigure.getBufferedImage()_CM"/>
        <uses provider="org.jhotdraw.draw.ImageHolderFigure.loadImage(InputStream)_CM"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.getFileExtensions()_MT">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.fileExtensions_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.getFileFilter()_MT">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.fileExtensions_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.isDataFlavorSupported(DataFlavor)_MT">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.mimeTypes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.ImageHolderFigure.getBufferedImage()_CM"/>
        <uses provider="org.jhotdraw.draw.ImageHolderFigure.loadImage(File)_CM"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.read(InputStream,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.createImageHolder(InputStream)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.read(Transferable,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.ImageHolderFigure.getBufferedImage()_CM"/>
        <uses provider="org.jhotdraw.draw.ImageHolderFigure.setBufferedImage(BufferedImage)_CM"/>
        <uses provider="org.jhotdraw.util.Images.toBufferedImage(Image)_MT"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.mimeTypes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.read(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageInputFormat.read(URI,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.DefaultDragTracker()_CN">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.AbstractTool()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.DefaultDragTracker(Figure)_CN">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.AbstractTool()_CN"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.anchorFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.anchorOrigin_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.anchorPoint_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.dragRect_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.isDragging_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.previousOrigin_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.previousPoint_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getConstrainer()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.findView(Container)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.dragRect_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.isDragging_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.previousOrigin_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.previousPoint_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mouseMoved(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.findView(Container)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.isFigureSelected(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.toggleSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.mousePressed(MouseEvent)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorFigure_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorOrigin_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorPoint_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.dragRect_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.previousOrigin_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.previousPoint_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.findView(Container)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.mouseReleased(MouseEvent)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorOrigin_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.isDragging_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.previousOrigin_FE"/>
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.transformedFigures_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.DefaultDragTracker.setDraggedFigure(Figure)_MT">
        <uses provider="org.jhotdraw.draw.tool.DefaultDragTracker.anchorFigure_FE"/>
    </element>
    <element name="org.jhotdraw.net.URIUtil.getName(URI)_CM">
    </element>
    <element name="org.jhotdraw.net.URIUtil.URIUtil()_CM">
    </element>
    <element name="org.jhotdraw.net.URIUtil.getName(URI)_MT">
    </element>
    <element name="org.jhotdraw.net.URIUtil.URIUtil()_MT">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.actionPerformed(ActionEvent)_CM">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.show(View)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.app.action.app.OpenApplicationFileAction.openView(View,URI)_MT"/>
        <uses provider="org.jhotdraw.app.Application.getViews()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.isAllowMultipleViewsPerURI()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.OpenApplicationFileAction(Application)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.entries_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.fileChooser_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.app.OpenApplicationFileAction.openView(View,URI)_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.setMultipleOpenId(int)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.deleteNextChar(ActionEvent)_CM">
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent)_CN">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction(JComponent,String)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.target_FE"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.propertyHandler_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.propertyHandler_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.target_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.deleteNextChar(ActionEvent)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.target_FE"/>
        <uses provider="org.jhotdraw.gui.EditableComponent.delete()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DeleteAction.deleteNextChar(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.installApplicationListeners(Application)_CM">
        <uses provider="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.applicationListener_FE"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.createApplicationListener()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.uninstallApplicationListeners(Application)_CM">
        <uses provider="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.applicationListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.ClearRecentFilesMenuAction(Application)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.updateEnabled()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.applicationListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.clearRecentURIs()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.createApplicationListener()_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.installApplicationListeners(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.uninstallApplicationListeners(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.updateEnabled()_MT">
        <uses provider="org.jhotdraw.app.Application.getRecentURIs()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.createDialog(URIChooser,Component)_CM">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getDialogTitle()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.showDialog(URIChooser,Component)_CM">
        <uses provider="org.jhotdraw.gui.URIChooser.addActionListener(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.rescanCurrentDirectory()_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.createDialog(URIChooser,Component)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.OpenFileAction(Application)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.dispose(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.show(View)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getSelectedURI()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.showDialog(URIChooser,Component)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.getChooser(View)_MT"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.openViewFromURI(View,URI,URIChooser)_MT"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getViews()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.isAllowMultipleViewsPerURI()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.createDialog(URIChooser,Component)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getOpenChooser(View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.openViewFromURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.setMultipleOpenId(int)_CM"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenFileAction.showDialog(URIChooser,Component)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.OpenRecentFileAction(Application,URI)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenRecentFileAction.uri_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.uri_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.show(View)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenRecentFileAction.uri_FE"/>
        <uses provider="org.jhotdraw.app.action.file.OpenRecentFileAction.openView(View)_MT"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getViews()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.isAllowMultipleViewsPerURI()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenRecentFileAction.openView(View)_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.setMultipleOpenId(int)_CM"/>
        <uses provider="org.jhotdraw.app.View.isEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View,boolean)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.saveAs_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.oldFocusOwner_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.saveAs_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.canSaveTo(URI)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.saveAs_FE"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.getChooser(View)_MT"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.saveViewToURI(View,URI,URIChooser)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createSaveChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAction.saveViewToURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.ToggleToolBarAction(JToolBar,String)_CN">
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.propertyHandler_FE"/>
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.putValue(String,Object)_MT"/>
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.setToolBar(JToolBar)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.propertyHandler_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.toolBar_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.toolBar_FE"/>
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.putValue(String,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.putValue(String,Object)_MT">
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.toolBar_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.ToggleToolBarAction.setToolBar(JToolBar)_MT">
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.propertyHandler_FE"/>
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.toolBar_FE"/>
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.putValue(String,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN">
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.propertyHandler_FE"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.target_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.propertyHandler_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.target_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractSelectionAction.updateEnabled()_MT">
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.target_FE"/>
        <uses provider="org.jhotdraw.gui.EditableComponent.isSelectionEmpty()_CM"/>
    </element>
    <element name="org.jhotdraw.app.Disposable.dispose()_CM">
    </element>
    <element name="org.jhotdraw.app.Disposable.dispose()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.clearSelection()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.delete()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.duplicate()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.isSelectionEmpty()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.selectAll()_CM">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.SELECTION_EMPTY_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.clearSelection()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.delete()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.duplicate()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.isSelectionEmpty()_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.EditableComponent.selectAll()_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.QuantizingColorWheelImageProducer(ColorSpace,int,int)_CN">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angularQuantization_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radialQuantization_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.AbstractColorWheelImageProducer(ColorSpace,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.alphas_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.angularQuantization_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.angulars_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.radialQuantization_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.radials_FE">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateLookupTables()_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angularQuantization_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radialQuantization_FE"/>
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.radials_FE"/>
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.getColorAt(int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.needsGeneration()_MT">
    </element>
    <element name="org.jhotdraw.color.QuantizingColorWheelImageProducer.regenerateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.QuantizingColorWheelImageProducer.generateColorWheel()_MT"/>
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.CMYKNominalColorSpace()_CN">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.instance_FE">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.getInstance()_MT">
        <uses provider="org.jhotdraw.color.CMYKNominalColorSpace.CMYKNominalColorSpace()_CN"/>
        <uses provider="org.jhotdraw.color.CMYKNominalColorSpace.instance_FE"/>
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.color.CMYKNominalColorSpace.toRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.ComplexColorWheelImageProducer(ColorSpace,int,int)_CN">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.ComplexColorWheelImageProducer(ColorSpace,int,int,boolean,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.ComplexColorWheelImageProducer(ColorSpace,int,int,boolean,boolean)_CN">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.AbstractColorWheelImageProducer(ColorSpace,int,int)_CN"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.alphas_FE">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.angulars_FE">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.flipX_FE">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.flipY_FE">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.radials_FE">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.generateLookupTables()_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipY_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.radials_FE"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.getColorAt(int,int)_MT">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.getColorAtOld(int,int)_MT">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipY_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.getColorLocation(float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.getColorLocation(float[])_MT">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.needsGeneration()_MT">
    </element>
    <element name="org.jhotdraw.color.ComplexColorWheelImageProducer.regenerateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.ComplexColorWheelImageProducer.generateColorWheel()_MT"/>
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.PolarColorWheelImageProducer(ColorSpace,int,int)_CN">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.AbstractColorWheelImageProducer(ColorSpace,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.alphas_FE">
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.angulars_FE">
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.radials_FE">
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.generateLookupTables()_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.radials_FE"/>
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.getColorAt(int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.getColorLocation(Color)_MT">
        <uses provider="org.jhotdraw.color.PolarColorWheelImageProducer.getColorLocation(float[])_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.PolarColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CIEXYZtoRGB(float[],float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.sRGB_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(ColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(NamedColorSpace,float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(NamedColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.NamedColorSpace.fromCIEXYZ(float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromRGB(ColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.CSfromRGB(NamedColorSpace,float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromRGB(NamedColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.NamedColorSpace.fromRGB(float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoCIEXYZ(ColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.CStoCIEXYZ(NamedColorSpace,float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoCIEXYZ(NamedColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.NamedColorSpace.toCIEXYZ(float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoRGB(ColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB(NamedColorSpace,float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoRGB(NamedColorSpace,float[],float[])_CM">
        <uses provider="org.jhotdraw.color.NamedColorSpace.toRGB(float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.isEqual(ColorSpace,ColorSpace)_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int)_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int,int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.getName(ColorSpace)_CM">
        <uses provider="org.jhotdraw.color.NamedColorSpace.getName()_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.isEqual(ColorSpace,ColorSpace)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.RGBtoCIEXYZ(float[],float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.sRGB_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.shadow(Color,int)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.toColor(ColorSpace,float[])_CM">
        <uses provider="org.jhotdraw.color.CompositeColor.CompositeColor(ColorSpace,float[],float)_CN"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.toRGB24(ColorSpace,float[])_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.toToolTipText(Color)_CM">
        <uses provider="org.jhotdraw.color.ColorUtil.formatter_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.ColorUtil()_CN">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.formatter_FE">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.sRGB_FE">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CIEXYZtoRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(ColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromCIEXYZ(NamedColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromRGB(ColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CSfromRGB(NamedColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoCIEXYZ(ColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoCIEXYZ(NamedColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoRGB(ColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoRGB(NamedColorSpace,float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT">
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB(ColorSpace,float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.fromRGB(ColorSpace,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.getName(ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.isEqual(ColorSpace,ColorSpace)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.RGBtoCIEXYZ(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.shadow(Color,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.toColor(ColorSpace,float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.toRGB24(ColorSpace,float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorUtil.toToolTipText(Color)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.HSLPhysiologicColorSpace()_CN">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.instance_FE">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()_MT">
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.HSLPhysiologicColorSpace()_CN"/>
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.instance_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.color.HSLPhysiologicColorSpace.toRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.HSVPhysiologicColorSpace()_CN">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.instance_FE">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.equals(Object)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.fromRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.getInstance()_MT">
        <uses provider="org.jhotdraw.color.HSVPhysiologicColorSpace.HSVPhysiologicColorSpace()_CN"/>
        <uses provider="org.jhotdraw.color.HSVPhysiologicColorSpace.instance_FE"/>
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.hashCode()_MT">
    </element>
    <element name="org.jhotdraw.color.HSVPhysiologicColorSpace.toRGB(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI$TrackListener.mousePressed(MouseEvent)_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI$TrackListener.mousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getTickLength()_CM">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.ColorSliderUI(JSlider)_CN">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.colorTrackImage_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.colorTrackImageProducer_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.foreground_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.MINIMUM_HORIZONTAL_SIZE_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.MINIMUM_VERTICAL_SIZE_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.PREFERRED_HORIZONTAL_SIZE_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.PREFERRED_VERTICAL_SIZE_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.trackBackground_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.calculateThumbLocation()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.calculateTickRect()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.calculateTrackRect()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.createPropertyChangeListener(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.createTrackListener(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getMinimumHorizontalSize()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getMinimumVerticalSize()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getPreferredHorizontalSize()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getPreferredSize(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getPreferredVerticalSize()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getThumbIcon()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getThumbSize()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.getTickLength()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.installDefaults(JSlider)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintColorTrack(Graphics,int,int,int,int,int)_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.ColorTrackImageProducer(int,int,int,boolean)_CN"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.generateColorTrack()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.getHeight()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.getWidth()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.needsGeneration()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.regenerateColorTrack()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.setColorComponentIndex(int)_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.setColorSliderModel(ColorSliderModel)_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintFocus(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMajorTickForHorizSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMajorTickForVertSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMinorTickForHorizSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintMinorTickForVertSlider(Graphics,Rectangle,int)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintThumb(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintTicks(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI.paintTrack(Graphics)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.addChild(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createPCDataElement()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.dispose()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.equals(Object)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.equalsXMLElement(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.findAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.findAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,Map_String,T_,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeCount()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeNamespace(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributes()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributesInNamespace(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeType(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeType(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildAtIndex(int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenCount()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getContent()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getDoubleAttribute(String,String,double)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFirstChildNamed(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFirstChildNamed(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFullName()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getLineNr()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getName()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getNamespace()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getParent()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getSystemID()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.insertChild(IXMLElement,int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.isLeaf()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.iterableAttributeNames()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.iterableChildren()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeAttribute(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeChild(IXMLElement)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeChildAtIndex(int)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setAttribute(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setAttribute(String,String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setContent(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setName(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setName(String,String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.toString()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement()_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String,String)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String,String,int)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.XMLElement(String,String,String,int)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.attributes_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.children_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.content_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.fullName_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.lineNr_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.name_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.namespace_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.NO_LINE_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.parent_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.serialVersionUID_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.systemID_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.addChild(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createElement(String,String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.createPCDataElement()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.dispose()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.equals(Object)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.equalsXMLElement(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.findAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.findAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,Map_String,T_,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttribute(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeCount()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeNamespace(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributes()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributesInNamespace(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeType(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getAttributeType(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildAtIndex(int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildren()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenCount()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getChildrenNamed(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getContent()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getDoubleAttribute(String,String,double)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFirstChildNamed(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFirstChildNamed(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getFullName()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getLineNr()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getName()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getNamespace()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getParent()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.getSystemID()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hasChildren()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.hashCode()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.insertChild(IXMLElement,int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.isLeaf()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.iterableAttributeNames()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.iterableChildren()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeAttribute(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeChild(IXMLElement)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.removeChildAtIndex(int)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setAttribute(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setAttribute(String,String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setContent(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setName(String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.setName(String,String)_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLElement.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.addFigureListener(FigureListener)_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.changed()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.changingDepth_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.validate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated(FigureEvent)_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAttributeChanged(AttributeKey_T_,T,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureAdded()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureChanged(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureHandlesChanged()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureRemoved()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureRequestRemove()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireUndoableEditHappened(UndoableEdit)_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getActions(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getLayer()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.invalidate()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isConnectable()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isConnectable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isRemovable()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isSelectable()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isTransformable()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isVisible()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.willChange()_CM">
        <uses provider="org.jhotdraw.draw.AbstractFigure.invalidate()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.changingDepth_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.AbstractFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractFigure.changingDepth_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.isVisible_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.isRemovable_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.isSelectable_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.isTransformable_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.isConnectable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.changingDepth_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.drawing_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isConnectable_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isRemovable_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isSelectable_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isTransformable_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isVisible_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.listenerList_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.addFigureListener(FigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.addNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.fireFigureAdded()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.changed()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.clone()_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.clone()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAreaInvalidated(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireAttributeChanged(AttributeKey_T_,T,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureAdded()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureChanged()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureChanged(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureHandlesChanged()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureRemoved()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireFigureRequestRemove()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.fireUndoableEditHappened(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getChangingDepth()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.changingDepth_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getConnectors(ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getCursor(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getDecomposition()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getEndPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getFontRenderContext()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getLayer()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getLock()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.Drawing.getLock()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getStartPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.getToolTipText(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.handleDrop(Point2D,Collection_Figure_,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.includes(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.invalidate()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isChanging()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.changingDepth_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isConnectable()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isRemovable()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isRemovable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isSelectable()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isSelectable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isTransformable()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isTransformable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.isVisible()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isVisible_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.remap(Map_Figure,Figure_,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.removeFigureListener(FigureListener)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.removeNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.fireFigureRemoved()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.requestRemove()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.fireFigureRequestRemove()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setBounds(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setConnectable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isConnectable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setRemovable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isRemovable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setSelectable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isSelectable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setTransformable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.isTransformable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.setVisible(boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractFigure.isVisible_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.validate()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractFigure.willChange()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.canConnect(Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.canConnect(Connector,Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getEndConnector()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getEndFigure()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getEndPoint()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getLiner()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getNode(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getNodeCount()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getPoint(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getStartConnector()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getStartFigure()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getStartPoint()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.lineout()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setEndConnector(Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setEndPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setLiner(Liner)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setNode(int,BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setPoint(int,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setStartConnector(Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setStartPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.updateConnection()_CM">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.canConnect(Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.canConnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getEndConnector()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getEndFigure()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getEndPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getLiner()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getNode(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getNodeCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getPoint(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getStartConnector()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getStartFigure()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.getStartPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.lineout()_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setEndConnector(Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setEndPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setLiner(Liner)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setNode(int,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setPoint(int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setStartConnector(Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.setStartPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ConnectionFigure.updateConnection()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(int,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addAll(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addAll(int,Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addInputFormat(InputFormat)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addOutputFormat(OutputFormat)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(int,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAddAll(int,Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicRemove(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicRemoveAll(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.bringToFront(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.drawCanvas(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigure(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureBehind(Point2D,Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureBehind(Point2D,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureExcept(Point2D,Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureExcept(Point2D,Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureInside(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigures(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFiguresWithin(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getFiguresFrontToBack()_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getFontRenderContext()_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getInputFormats()_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getLock()_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getOutputFormats()_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.remove(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.removeAll(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.sendToBack(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.setFontRenderContext(FontRenderContext)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.setInputFormats(List_InputFormat_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.setOutputFormats(List_OutputFormat_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.sort(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.add(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addAll(int,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addInputFormat(InputFormat)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addOutputFormat(OutputFormat)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAdd(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicAddAll(int,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicRemove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.basicRemoveAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.bringToFront(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigure(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureBehind(Point2D,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureBehind(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureExcept(Point2D,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureExcept(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFigures(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.findFiguresWithin(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getFiguresFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getFontRenderContext()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getInputFormats()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getLock()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.getOutputFormats()_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.remove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.removeAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.removeUndoableEditListener(UndoableEditListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.sendToBack(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.setFontRenderContext(FontRenderContext)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.setInputFormats(List_InputFormat_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.setOutputFormats(List_OutputFormat_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Drawing.sort(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.applyDefaultAttributesTo(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.findView(Container)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActionMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDefaultAttribute(AttributeKey_T_)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDrawingViews()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getHandleAttribute(AttributeKey_T_)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getInputMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getTool()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.isEnabled()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActionMap(ActionMap)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setCursor(Cursor)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setDefaultAttribute(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setEnabled(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setHandleAttribute(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setInputMap(InputMap)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.ACTION_MAP_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.ACTIVE_VIEW_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.DEFAULT_ATTRIBUTE_PROPERTY_PREFIX_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.INPUT_MAP_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.TOOL_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.applyDefaultAttributesTo(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.findView(Container)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getActiveView()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDefaultAttribute(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getDrawingViews()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getHandleAttribute(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.getTool()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActionMap(ActionMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setCursor(Cursor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setDefaultAttribute(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setHandleAttribute(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setInputMap(InputMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingEditor.setTool(Tool)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addFigureSelectionListener(FigureSelectionListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addNotify(DrawingEditor)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addToSelection(Collection_Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.clearSelection()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.drawingToView(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.drawingToView(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFigure(Point)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFigures(Rectangle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFiguresWithin(Rectangle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findHandle(Point)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getActiveHandle()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getCompatibleHandles(Handle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getConstrainer()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getDrawing()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getEditor()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getHandleDetailLevel()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getInvisibleConstrainer()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getScaleFactor()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isEnabled()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isFigureSelected(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeFigureSelectionListener(FigureSelectionListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeFromSelection(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeNotify(DrawingEditor)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.repaintHandles()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.requestFocus()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.selectAll()_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setActiveHandle(Handle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setConstrainerVisible(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setDrawing(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setEnabled(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setInvisibleConstrainer(Constrainer)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setScaleFactor(double)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setVisibleConstrainer(Constrainer)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.toggleSelection(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.viewToDrawing(Rectangle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.ACTIVE_HANDLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.CONSTRAINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.CONSTRAINER_VISIBLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.CURSOR_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.DRAWING_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.ENABLED_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.HANDLE_DETAIL_LEVEL_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.INVISIBLE_CONSTRAINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.SCALE_FACTOR_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.VISIBLE_CONSTRAINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addFigureSelectionListener(FigureSelectionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addNotify(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addToSelection(Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.clearSelection()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.drawingToView(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.drawingToView(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFigure(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFigures(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findFiguresWithin(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.findHandle(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getActiveHandle()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getCompatibleHandles(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getHandleDetailLevel()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getInvisibleConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getScaleFactor()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getSelectedFigures()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getSelectionCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.getVisibleConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isConstrainerVisible()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.isFigureSelected(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeFigureSelectionListener(FigureSelectionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeFromSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removeNotify(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.repaintHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.requestFocus()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.selectAll()_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setActiveHandle(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setConstrainerVisible(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setHandleDetailLevel(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setInvisibleConstrainer(Constrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setScaleFactor(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.setVisibleConstrainer(Constrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.toggleSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DrawingView.viewToDrawing(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.changed()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.clone()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.findCompatibleConnector(Connector,boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.findFigureInside(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.get(AttributeKey_T_)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getActions(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getAttributes()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getBounds()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getConnectors(ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getCursor(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getDecomposition()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getDrawingArea()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getEndPoint()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getLayer()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getPreferredSize()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getStartPoint()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getToolTipText(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.getTransformRestoreData()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.handleDrop(Point2D,Collection_Figure_,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.includes(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isConnectable()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isRemovable()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isSelectable()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isTransformable()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.isVisible()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.remap(Map_Figure,Figure_,boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.requestRemove()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.restoreAttributesTo(Object)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.restoreTransformTo(Object)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.set(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.setBounds(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.willChange()_CM">
    </element>
    <element name="org.jhotdraw.draw.Figure.CONNECTABLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.Figure.REMOVABLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.Figure.SELECTABLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.Figure.TRANSFORMABLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.addNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.changed()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.get(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getAttributes()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getAttributesRestoreData()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getConnectors(ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getCursor(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getDecomposition()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getEndPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getLayer()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getStartPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getToolTipText(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.getTransformRestoreData()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.handleDrop(Point2D,Collection_Figure_,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.includes(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.isConnectable()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.isRemovable()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.isSelectable()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.isTransformable()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.isVisible()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.remap(Map_Figure,Figure_,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.removeNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.requestRemove()_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.restoreAttributesTo(Object)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.restoreTransformTo(Object)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.Figure.willChange()_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.angle(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.angleToPoint(Rectangle,double)_CM">
        <uses provider="org.jhotdraw.geom.Geom.range(int,int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.angleToPoint(Rectangle2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.cap(Point2D,Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.chop(Shape,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.contains(Rectangle2D,Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.direction(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.direction(int,int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.distanceFromLine(int,int,int,int,int,int)_CM">
        <uses provider="org.jhotdraw.geom.Geom.length(int,int,int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.grow(Rectangle2D,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.intersect(double,double,double,double,double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.intersect(int,int,int,int,int,int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.length(double,double,double,double)_CM">
        <uses provider="org.jhotdraw.geom.Geom.length2(double,double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.length(int,int,int,int)_CM">
        <uses provider="org.jhotdraw.geom.Geom.length2(int,int,int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.length(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.length2(double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.length2(int,int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.lineContainsPoint(double,double,double,double,double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int)_CM">
        <uses provider="org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.outcode(Rectangle,Rectangle)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.outcode(Rectangle2D,Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.ovalAngleToPoint(Rectangle,double)_CM">
        <uses provider="org.jhotdraw.geom.Geom.polarToPoint(double,double,double)_CM"/>
        <uses provider="org.jhotdraw.geom.Geom.center(Rectangle)_MT"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.ovalAngleToPoint(Rectangle2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.pointToAngle(Rectangle,Point)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.pointToAngle(Rectangle2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.polarToPoint(double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.polarToPoint2D(double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.range(double,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.range(int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Geom.Geom()_CN">
    </element>
    <element name="org.jhotdraw.geom.Geom.OUT_BOTTOM_FE">
    </element>
    <element name="org.jhotdraw.geom.Geom.OUT_LEFT_FE">
    </element>
    <element name="org.jhotdraw.geom.Geom.OUT_RIGHT_FE">
    </element>
    <element name="org.jhotdraw.geom.Geom.OUT_TOP_FE">
    </element>
    <element name="org.jhotdraw.geom.Geom.angle(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.angleToPoint(Rectangle,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.angleToPoint(Rectangle2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.cap(Point2D,Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.center(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.center(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.chop(Shape,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.contains(Rectangle2D,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.direction(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.direction(int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.distanceFromLine(int,int,int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.east(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.east(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.grow(Rectangle2D,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.intersect(double,double,double,double,double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.intersect(double,double,double,double,double,double,double,double,double)_MT">
        <uses provider="org.jhotdraw.geom.Geom.length(double,double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Geom.intersect(int,int,int,int,int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.length(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.length(int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.length(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.length2(double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.length2(int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.lineContainsPoint(double,double,double,double,double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.lineContainsPoint(int,int,int,int,int,int,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.north(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.north(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.outcode(Rectangle,Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.outcode(Rectangle2D,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.ovalAngleToPoint(Rectangle,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.ovalAngleToPoint(Rectangle2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.pointToAngle(Rectangle,Point)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.pointToAngle(Rectangle2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.polarToPoint(double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.polarToPoint2D(double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.range(double,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.range(int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.south(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.south(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.west(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.geom.Geom.west(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.clone()_CM">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractDrawing.inputFormats_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractDrawing.outputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.fireUndoableEditHappened(UndoableEdit)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getLock()_CM">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.lock_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.AbstractDrawing()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.AbstractAttributedCompositeFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.AbstractDrawing.inputFormats_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractDrawing.outputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.fontRenderContext_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.inputFormats_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.lock_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.outputFormats_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.addInputFormat(InputFormat)_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.inputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.addOutputFormat(OutputFormat)_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.outputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.addUndoableEditListener(UndoableEditListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.fireUndoableEditHappened(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getFontRenderContext()_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.fontRenderContext_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getInputFormats()_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.inputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getLock()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.getOutputFormats()_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.outputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject(int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.removeUndoableEditListener(UndoableEditListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.setFontRenderContext(FontRenderContext)_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.fontRenderContext_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.setInputFormats(List_InputFormat_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.inputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.setOutputFormats(List_OutputFormat_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractDrawing.outputFormats_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractDrawing.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.get(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.get(Map_AttributeKey_?_,Object_)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKey.defaultValue_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM">
        <uses provider="org.jhotdraw.util.Methods.invoke(Object,String)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.clazz_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getDefaultValue()_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getKey()_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getPresentationName()_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.isNullValueAllowed()_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.put(Map_AttributeKey_?_,Object_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.putClone(Map_AttributeKey_?_,Object_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.set(Figure,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setClone(Figure,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setUndoable(Figure,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.toString()_CM">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_,T)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_,T,boolean)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.AttributeKey(String,Class_T_,T,boolean,ResourceBundleUtil)_CN">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.clazz_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.defaultValue_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.isNullValueAllowed_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.key_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.labels_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.equals(Object)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.get(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.get(Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getClone(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.defaultValue_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getKey()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.getPresentationName()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.key_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.labels_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.hashCode()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isNullValueAllowed()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.clazz_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.isNullValueAllowed()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isNullValueAllowed_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.put(Map_AttributeKey_?_,Object_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.putClone(Map_AttributeKey_?_,Object_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.set(Figure,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setClone(Figure,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.setUndoable(Figure,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKey.toString()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.addNode(BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.addNode(int,BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findNode(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getBezierPath()_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getCappedPath()_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.cappedPath_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.isClosed()_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getControlPoint(int)_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getMask()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getEndPoint()_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.getPoint(int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getNode(int)_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getPoint(int)_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getControlPoint(int)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getPoint(int,int)_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getControlPoint(int)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getStartPoint()_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.getPoint(int,int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.joinSegments(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.joinSegments(Point2D,float)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.removeAllNodes()_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.removeNode(int)_CM">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setBounds(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setEndPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setNode(int,BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setPoint(int,int,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setPoint(int,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setStartPoint(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.splitSegment(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.splitSegment(Point2D,float)_CM">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.BezierFigure()_CN">
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)_CN">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.cappedPath_FE">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.path_FE">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.addNode(BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.addNode(int,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.drawCaps(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getCappedPath()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.isClosed()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getCappedPath()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.drawCaps(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.isClosed()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findNode(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.findSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getBezierPath()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getCappedPath()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getCenter()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.getPoint(int,int)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.getDrawingArea()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getEndPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getNode(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getNodeCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getOutermostPoint()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getControlPoint(int)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getPoint(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getPoint(int,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getPointOnPath(float,double)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getStartPoint()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.cappedPath_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.isClosed()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.joinSegments(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.joinSegments(Point2D,float)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.layout()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.readPoints(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.readPoints(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.setClosed(boolean)_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,boolean)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String,int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.removeAllNodes()_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.removeNode(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setBezierPath(BezierPath)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.setClosed(boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setClosed(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setEndPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setNode(int,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setPoint(int,int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setPoint(int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.setStartPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.splitSegment(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.splitSegment(Point2D,float)_MT">
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.validate()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.cappedPath_FE"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.path_FE"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.writePoints(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.BezierFigure.writePoints(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getNode(int)_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.isClosed()_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,boolean)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double,double)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,int,int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.LabelFigure()_CN">
        <uses provider="org.jhotdraw.draw.LabelFigure.LabelFigure(String)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.LabelFigure(String)_CN">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.target_FE">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.areaInvalidated(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.attributeChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.figureAdded(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.figureChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.figureHandlesChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.figureRemoved(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.LabelFigure.target_FE"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.figureRequestRemove(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.getLabelFor()_MT">
        <uses provider="org.jhotdraw.draw.LabelFigure.target_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.remap(Map_Figure,Figure_,boolean)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.LabelFigure.target_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LabelFigure.setLabelFor(TextHolderFigure)_MT">
        <uses provider="org.jhotdraw.draw.LabelFigure.target_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.LineConnectionFigure$ConnectionHandler(LineConnectionFigure)_CN">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.owner_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.figureRemoved(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.LineConnectionFigure$ConnectionHandler.owner_FE"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.addNotify(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getBezierPath()_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.removeNotify(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setConnectable(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.LineConnectionFigure()_CN">
        <uses provider="org.jhotdraw.draw.LineFigure.LineFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.connectionHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.endConnector_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.liner_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.LINER_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.startConnector_FE">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.addNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.canConnect(Connector)_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isConnectable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.canConnect(Connector,Connector)_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isConnectable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.connector.Connector.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.liner.Liner.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getBezierPath()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getEndConnector()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getEndFigure()_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getLiner()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getStartConnector()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.getStartFigure()_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleConnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleDisconnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.lineout()_MT">
        <uses provider="org.jhotdraw.draw.liner.Liner.lineout(ConnectionFigure)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.read(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.readLiner(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.readPoints(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.remap(Map_Figure,Figure_,boolean)_MT">
        <uses provider="org.jhotdraw.draw.Figure.findCompatibleConnector(Connector,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.removeNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.reverseConnection()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setConnectable(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setEndConnector(Connector)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setEndPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setLiner(Liner)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setNode(int,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setPoint(int,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setStartConnector(Connector)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.setStartPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.updateConnection()_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.findEnd(ConnectionFigure)_CM"/>
        <uses provider="org.jhotdraw.draw.connector.Connector.findStart(ConnectionFigure)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.validate()_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.write(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.writeLiner(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.LineConnectionFigure.writePoints(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.ListFigure.ListFigure()_CN">
        <uses provider="org.jhotdraw.draw.ListFigure.ListFigure(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.ListFigure.ListFigure(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.ListFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color)_CN">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String,int,int)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getToolTipTextProperty(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String)_CN">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String,int,int)_CN">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.fillColor_FE"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.height_FE"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.name_FE"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.width_FE"/>
        <uses provider="org.jhotdraw.util.Images.toBufferedImage(Image)_MT"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.noColorImage_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.ColorIcon(int)_CN">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.ColorIcon(int,String)_CN">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.ColorIcon(Color,String,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.fillColor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.height_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.name_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.noColorImage_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.width_FE">
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.getColor()_MT">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.fillColor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.getIconHeight()_MT">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.getIconWidth()_MT">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.width_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.getName()_MT">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.name_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.ColorIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.action.ColorIcon.fillColor_FE"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.height_FE"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.width_FE"/>
        <uses provider="org.jhotdraw.draw.action.ColorIcon.noColorImage_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.GroupFigure.GroupFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure)_CN">
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)_CN">
        <uses provider="org.jhotdraw.draw.action.GroupAction.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.isGroupingAction_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.isGroupingAction_FE">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.prototype_FE">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.ungroupFigures(DrawingView,CompositeFigure)_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.isGroupingAction_FE"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.canUngroup()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.canGroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.canUngroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.groupFigures(DrawingView,CompositeFigure,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.add(int,Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.ungroupFigures(DrawingView,CompositeFigure)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.GroupAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.action.GroupAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.isGroupingAction_FE"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.canUngroup()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.LineDecorationIcon.LineDecorationIcon(LineDecoration,boolean)_CN">
        <uses provider="org.jhotdraw.draw.LineFigure.LineFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.action.LineDecorationIcon.lineFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.LineDecorationIcon.lineFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.action.LineDecorationIcon.getIconHeight()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.LineDecorationIcon.getIconWidth()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.LineDecorationIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.action.LineDecorationIcon.lineFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$East.MoveAction$East(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$East.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$East.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$North.MoveAction$North(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$North.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$North.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$South.MoveAction$South(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$South.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$South.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$West.MoveAction$West(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$West.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction$West.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction.MoveAction(DrawingEditor,int,int)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction.dx_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction.dy_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.MoveAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectSameAction.SelectSameAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectSameAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectSameAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectSameAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.SelectSameAction.selectSame()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectSameAction.selectSame()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.draw.GroupFigure.GroupFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.UngroupAction.UngroupAction(DrawingEditor,CompositeFigure)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.draw.action.GroupAction.GroupAction(DrawingEditor,CompositeFigure,boolean)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.UngroupAction.ID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.UngroupAction.prototype_FE">
    </element>
    <element name="org.jhotdraw.draw.action.UngroupAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector,Connector)_CM">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.handleConnect(Connector,Connector)_CM">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.handleDisconnect(Connector,Connector)_CM">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector)_MT">
        <uses provider="org.jhotdraw.draw.connector.Connector.getOwner()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.canConnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.getLayer()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.handleConnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.handleDisconnect(Connector,Connector)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.DependencyFigure.removeNotify(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.SeparatorLineFigure.SeparatorLineFigure()_CN">
        <uses provider="org.jhotdraw.draw.RectangleFigure.RectangleFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.SeparatorLineFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.SeparatorLineFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.SeparatorLineFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.SeparatorLineFigure.getPreferredSize()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.get(Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$DurationAdapter.TaskFigure$DurationAdapter(TaskFigure)_CN">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure$DurationAdapter.target_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$DurationAdapter.target_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$DurationAdapter.attributeChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure$DurationAdapter.target_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$NameAdapter.TaskFigure$NameAdapter(TaskFigure)_CN">
        <uses provider="org.jhotdraw.samples.pert.figures.TaskFigure$NameAdapter.target_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$NameAdapter.target_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure$NameAdapter.attributeChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getPredecessors()_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getSuccessors()_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.isDependentOf(TaskFigure)_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.TaskFigure()_CN">
        <uses provider="org.jhotdraw.draw.RectangleFigure.RectangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.ListFigure.ListFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.ListFigure.ListFigure(Figure)_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setEditable(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.pert.figures.SeparatorLineFigure.SeparatorLineFigure()_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.dependencies_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.addDependency(DependencyFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.pert.figures.DependencyFigure.DependencyFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.ConnectorHandle(Connector,ConnectionFigure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getDependencies()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getDuration()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getText()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getDurationFigure()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getLayer()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getName()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getText()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getNameFigure()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getPredecessors()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getStartTime()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getText()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getStartTimeFigure()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.getSuccessors()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.isDependentOf(TaskFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.removeDependency(DependencyFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.setDuration(int)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.setName(String)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.toString()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.updateStartTime()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.figures.TaskFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.labels_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.combineActionPerformed(ActionEvent)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.splitActionPerformed(ActionEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.canGroup()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.canUngroup()_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildCount()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.combineActionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildCount()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.combinePaths(DrawingView,CompositeFigure,Collection_Figure_,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributes()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()_MT"/>
        <uses provider="org.jhotdraw.draw.Drawing.add(int,Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.splitActionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildCount()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canUngroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.splitPath(DrawingView,CompositeFigure,List_Figure_,int[],int[])_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicRemoveAllChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.getChildren()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()_MT"/>
        <uses provider="org.jhotdraw.draw.Drawing.add(int,Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.CombineAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canGroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.canUngroup()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.isCombineAction_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.labels_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.SplitAction(DrawingEditor,SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.action.CombineAction.CombineAction(DrawingEditor,SVGPathFigure,boolean)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.action.SplitAction.labels_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.action.SplitAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.create(String)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.getName(Object)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.read(DOMInput)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.write(DOMOutput,Object)_CM">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.create(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.getName(Object)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.read(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.xml.DOMFactory.write(DOMOutput,Object)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.getPaint(Figure,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.makeRelativeToFigureBounds(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createImage(double,double,double,double,byte[],BufferedImage,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createCircle(double,double,double,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createEllipse(double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createG(Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createImage(double,double,double,double,byte[],BufferedImage,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createLine(double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createLinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createPath(BezierPath[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createPolygon(Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createPolyline(Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createRadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createRect(double,double,double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createText(Point2D[],double[],StyledDocument,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGFigureFactory.createTextArea(double,double,double,double,StyledDocument,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.clone()_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.drawFigure(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.drawFill(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.drawImage(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.drawStroke(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.figureContains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getActions(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getBounds()_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getBufferedImage()_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getImageData()_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setBufferedImage(BufferedImage)_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setImage(byte[],BufferedImage)_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setImageData(byte[])_CM">
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.ImageFigure()_CN">
        <uses provider="org.jhotdraw.draw.ImageFigure.ImageFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.ImageFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.bufferedImage_FE">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.imageData_FE">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.rectangle_FE">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.drawFigure(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.drawImage(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.getBufferedImage()_CM"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.figureContains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getBufferedImage()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getFigureDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getImageData()_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.loadImage(File)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.loadImage(InputStream)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.loadImage(InputStream)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.imageData_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getText()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.setImageData(byte[])_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.read(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setBufferedImage(BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setImage(byte[],BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.setImageData(byte[])_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.addText(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.getImageData()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.write(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.ImageFigure.writeObject(ObjectOutputStream)_MT">
        <uses provider="org.jhotdraw.draw.ImageFigure.getImageData()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.SVGRectRadiusHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.OFFSET_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.originalArc2D_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.locate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.getToolTipText(Point)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.locate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.originalArc2D_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.originalArc2D_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.StraightLineFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.line_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.StraightLineFigure.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.mini.StraightLineFigure.line_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.drawFigure(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.drawFigure(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.drawFigure(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSParser.parse(Reader,StyleManager)_MT">
        <uses provider="org.jhotdraw.xml.css.CSSParser.parseStylesheet(StreamTokenizer,StyleManager)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.css.CSSParser.parse(String,StyleManager)_MT">
        <uses provider="org.jhotdraw.xml.css.CSSParser.parse(Reader,StyleManager)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.css.CSSParser.parseDeclarationMap(StreamTokenizer)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSParser.parseRuleset(StreamTokenizer,StyleManager)_MT">
        <uses provider="org.jhotdraw.xml.css.CSSParser.parseDeclarationMap(StreamTokenizer)_MT"/>
        <uses provider="org.jhotdraw.xml.css.CSSParser.parseSelectorList(StreamTokenizer)_MT"/>
        <uses provider="org.jhotdraw.xml.css.StyleManager.add(CSSRule)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.css.CSSParser.parseSelectorList(StreamTokenizer)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSParser.parseStylesheet(StreamTokenizer,StyleManager)_MT">
        <uses provider="org.jhotdraw.xml.css.CSSParser.parseRuleset(StreamTokenizer,StyleManager)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.css.StyleManager.StyleManager()_CN">
        <uses provider="org.jhotdraw.xml.css.StyleManager.rules_FE"/>
    </element>
    <element name="org.jhotdraw.xml.css.StyleManager.rules_FE">
    </element>
    <element name="org.jhotdraw.xml.css.StyleManager.add(CSSRule)_MT">
        <uses provider="org.jhotdraw.xml.css.StyleManager.rules_FE"/>
    </element>
    <element name="org.jhotdraw.xml.css.StyleManager.applyStylesTo(Element)_MT">
        <uses provider="org.jhotdraw.xml.css.StyleManager.rules_FE"/>
    </element>
    <element name="org.jhotdraw.xml.css.StyleManager.applyStylesTo(IXMLElement)_MT">
        <uses provider="org.jhotdraw.xml.css.StyleManager.rules_FE"/>
    </element>
    <element name="org.jhotdraw.xml.css.StyleManager.clear()_MT">
        <uses provider="org.jhotdraw.xml.css.StyleManager.rules_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.SelectionColorIcon(DrawingEditor,AttributeKey_Color_,Image,Shape)_CN">
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.colorShape_FE"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.SelectionColorIcon(DrawingEditor,AttributeKey_Color_,URL,Shape)_CN">
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.colorShape_FE"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.colorShape_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDefaultAttributes()_CM"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.colorShape_FE"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.editor_FE"/>
        <uses provider="org.jhotdraw.draw.action.SelectionColorIcon.key_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Shapes.outlineContains(Shape,Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Shapes.Shapes()_CN">
    </element>
    <element name="org.jhotdraw.geom.Shapes.outlineContains(Shape,Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure,boolean)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.isHoverHandle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.isHoverHandle_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getDrawingArea()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.contains(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.getOwner()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.isHoverHandle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.getOwner()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.trackEnd(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.trackStart(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.trackStep(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.EditorColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon,Map_AttributeKey_?_,Object_)_CN">
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.colorChooser_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.colorChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT">
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditorColorChooserAction.selectionChanged(FigureSelectionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.SelectionColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.SelectionColorChooserAction.getInitialColor()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.areaInvalidated(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.attributeChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.figureAdded(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.figureRemoved(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.figureRequestRemove(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure$EventHandler.undoableEditHappened(UndoableEditEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveAll(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveAllChildren()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.bringToFront(Figure)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.fireFigureAdded(Figure,int)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.fireFigureRemoved(Figure,int)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getChildrenFrontToBack()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getLayouter()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.layout()_CM">
        <uses provider="org.jhotdraw.draw.CompositeFigure.layout()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeAll(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeAllChildren()_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.sendToBack(Figure)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.setLayouter(Layouter)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.AbstractCompositeFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractFigure.AbstractFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.cachedBounds_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.children_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.layouter_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.add(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.add(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.addAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.addAll(int,Collection_?@extends@Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.addCompositeFigureListener(CompositeFigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.addNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.addNotify(Drawing)_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.addNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicAdd(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicAddAll(int,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemove(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveAllChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.basicRemoveChild(int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.bringToFront(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.changed()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.contains(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.createEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isVisible()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.findChild(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.findChildIndex(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.fireFigureAdded(Figure,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.fireFigureRemoved(Figure,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.get(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getAttributes()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getAttributesRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getChild(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getChildCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getChildrenFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getDecomposition()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getLayouter()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getPreferredSize()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.getPreferredSize()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getTransformRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.invalidate()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.layout()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject(int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.remove(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeAll(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeAllChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeChild(int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeCompositeFigureListener(CompositeFigureListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.removeNotify(Drawing)_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.removeNotify(Drawing)_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.removeNotify(Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.restoreAttributesTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.Figure.restoreAttributesTo(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.Figure.restoreTransformTo(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.sendToBack(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.setLayouter(Layouter)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.validate()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.validate()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.willChange()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractCompositeFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.areaInvalidated(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.areaInvalidated(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.attributeChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.equals(Object)_MT"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getAttribute()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureAdded(CompositeFigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureAdded(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureHandlesChanged(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureRemoved(CompositeFigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureRemoved(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.figureRequestRemove(FigureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.focusGained(FocusEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.focusLost(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.handleRequestRemove(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView$EventHandler.handleRequestSecondaryHandles(HandleEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addToSelection(Collection_Figure_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.createHandles(int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addToSelection(Figure)_CM">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.createHandles(int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.clearSelection()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawBackground(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawCanvas(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.setFontRenderContext(FontRenderContext)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.drawCanvas(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingNonvolatileBuffered(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingVolatileBuffered(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingToView(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findFigure(Point)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findHandle(Point)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.fireSelectionChanged(Set_Figure_,Set_Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getBackgroundPaint(int,int)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCompatibleHandles(Handle)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSecondaryHandles()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSelectedFigures()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSelectionCount()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSelectionHandles()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidateHandles()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isFigureSelected(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.paintComponent(Graphics)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.printComponent(Graphics)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeFromSelection(Figure)_CM">
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.selectAll()_CM">
        <uses provider="org.jhotdraw.draw.Figure.isSelectable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setBounds(int,int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setDrawingDoubleBuffered(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.toggleSelection(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.validateHandles()_CM">
        <uses provider="org.jhotdraw.draw.Figure.createHandles(int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.validateViewTranslation()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.viewToDrawing(Point)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.DefaultDrawingView()_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.activeHandle_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.backgroundTile_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.bufferedArea_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.cachedPreferredSize_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.detailLevel_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.dirtyArea_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawing_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingBufferNV_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingBufferV_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.DRAWING_DOUBLE_BUFFERED_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.emptyDrawingLabel_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.handleInvalidator_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.handlesAreValid_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invisibleConstrainer_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isWindows_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.paintEnabled_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.scaleFactor_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.secondaryHandleOwner_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.secondaryHandles_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.selectedFigures_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.selectionHandles_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.translation_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.visibleConstrainer_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addFigureSelectionListener(FigureSelectionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addNotify(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addToSelection(Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.addToSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.clearSelection()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.createEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.delete()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isRemovable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawBackground(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawConstrainer(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Constrainer.draw(Graphics2D,DrawingView)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawing(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.setFontRenderContext(FontRenderContext)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingNonvolatileBuffered(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawDrawingVolatileBuffered(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawHandles(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingToView(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawingToView(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.drawTool(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.duplicate()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findFigure(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findFigures(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findFiguresWithin(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.findHandle(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.fireSelectionChanged(Set_Figure_,Set_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.fireViewTransformChanged()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getActiveHandle()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getBackgroundPaint(int,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCanvasViewBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getCompatibleHandles(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getDrawingToViewTransform()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getEmptyDrawingMessage()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getHandleDetailLevel()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getInvisibleConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getScaleFactor()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSecondaryHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSelectedFigures()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSelectionCount()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getSelectionHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getToolTipText(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.getVisibleConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidate()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidateDimension()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.invalidateHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isConstrainerVisible()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isDrawingDoubleBuffered()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isFigureSelected(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.isSelectionEmpty()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.paint(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.paintComponent(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.printComponent(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeFigureSelectionListener(FigureSelectionListener)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeFromSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeNotify()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.removeNotify(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.repaintDrawingArea(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.repaintHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.selectAll()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setActiveHandle(Handle)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setBounds(int,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setConstrainerVisible(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setDrawingDoubleBuffered(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setEmptyDrawingMessage(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setHandleDetailLevel(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setInvisibleConstrainer(Constrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setScaleFactor(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setViewRenderingHints(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.setVisibleConstrainer(Constrainer)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.toggleSelection(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.validateHandles()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.validateViewTranslation()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.viewToDrawing(Point)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingView.viewToDrawing(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure$FigureHandler.undoableEditHappened(UndoableEditEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure$FigureHandler.areaInvalidated(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure$FigureHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure$FigureHandler.figureRequestRemove(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure$FigureHandler.undoableEditHappened(UndoableEditEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.ensureSorted()_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.getFiguresFrontToBack()_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.sort(Collection_Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.QuadTreeCompositeFigure()_CN">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.canvasSize_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.figureHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.needsSorting_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.quadTree_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.addFigureListener(FigureListener)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.basicRemoveChild(int)_MT">
        <uses provider="org.jhotdraw.draw.Figure.removeFigureListener(FigureListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.bringToFront(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.contains(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.createFigureHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.draw(Graphics2D,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.ensureSorted()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigure(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureBehind(Point2D,Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureBehind(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureExcept(Point2D,Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureExcept(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFigures(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.findFiguresWithin(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.getCanvasSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.getChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.getFigures(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.getFiguresFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.sendToBack(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.setCanvasSize(Dimension2DDouble)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeCompositeFigure.sort(Collection_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing$QuadTreeEventHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing$QuadTreeEventHandler.figureChanged(FigureEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getFigure()_CM"/>
        <uses provider="org.jhotdraw.draw.event.FigureEvent.getInvalidatedArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.ensureSorted()_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.getFiguresFrontToBack()_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.sort(Collection_?@extends@Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.needsSorting_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.quadTree_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.basicAdd(int,Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.basicRemoveChild(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.bringToFront(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.clone()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractDrawing.clone()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.contains(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.createEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.draw(Graphics2D,Collection_Figure_)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isVisible()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.drawCanvas(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.ensureSorted()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigure(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigureBehind(Point2D,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigureBehind(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigureExcept(Point2D,Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigureExcept(Point2D,Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigureInside(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFigures(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.findFiguresWithin(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.getChildren()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.getChildren(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.getFiguresFrontToBack()_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.indexOf(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.sendToBack(Figure)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.setAttributeOnChildren(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.QuadTreeDrawing.sort(Collection_?@extends@Figure_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.labels_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkField_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkLabel_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityField_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityLabel_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityPopupButton_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.ODGPropertiesPanel()_CN">
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.labels_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkField_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityField_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityPopupButton_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacitySlider_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkFieldHandler_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityFieldHandler_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacitySliderHandler_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkField_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkFieldHandler_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityField_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityFieldHandler_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityPopupButton_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacitySlider_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacitySliderHandler_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkFieldHandler_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityFieldHandler_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacitySliderHandler_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGPropertiesPanel.setView(DrawingView)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.linkFieldHandler_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacityFieldHandler_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.opacitySliderHandler_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.AbstractTransferable(DataFlavor[])_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.getTransferDataFlavors()_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractTransferable.isDataFlavorSupported(DataFlavor)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractTransferable.flavors_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.getConstrainer()_CM">
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.constrainer_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.heightField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.heightLabel_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.labels_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.widthField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.widthLabel_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.thetaField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.thetaLabel_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.setConstrainer(GridConstrainer)_CM">
        <uses provider="org.jhotdraw.draw.GridConstrainer.getHeight()_MT"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.getWidth()_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.constrainer_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.heightField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.widthField_FE"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.getTheta()_MT"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.thetaField_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.EditGridPanel()_CN">
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.constrainer_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.heightField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.labels_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.widthField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditGridPanel.thetaField_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.constrainer_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.heightField_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.heightLabel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.labels_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.thetaField_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.thetaLabel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.widthField_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.widthLabel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.getConstrainer()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditGridPanel.setConstrainer(GridConstrainer)_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.JDisclosureToolBar()_CN">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.initComponents()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.disclosureButton_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.DISCLOSURE_STATE_COUNT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.DISCLOSURE_STATE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.getDisclosedComponent(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.getDisclosureState()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.disclosureButton_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.getDisclosureStateCount()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.disclosureButton_FE"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.initComponents()_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.disclosureButton_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.setDisclosureState(int)_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.disclosureButton_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.getDisclosedComponent(int)_MT"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.getDisclosureState()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.JDisclosureToolBar.setDisclosureStateCount(int)_MT">
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.disclosureButton_FE"/>
        <uses provider="org.jhotdraw.gui.JDisclosureToolBar.getDisclosureStateCount()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.buttonUI_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.buttonUI_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.installDefaults(AbstractButton)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.paint(Graphics,JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.PaletteSliderUI(JSlider)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.disabledStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.disabledStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.selectedStopColors_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.selectedStops_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.PaletteSliderUI(JSlider)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.getPreferredHorizontalSize()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.getPreferredVerticalSize()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.getThumbSize()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.installDefaults(JSlider)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColors(JComponent,String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paint(Graphics,JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintFocus(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintThumb(Graphics)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStopColors_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.enabledStops_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.selectedStopColors_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.selectedStops_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.paintTrack(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.JColorWheel$ModelHandler.stateChanged(ChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.JColorWheel$MouseHandler.update(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.JColorWheel$MouseHandler.update(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.JColorWheel$MouseHandler.update(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JColorWheel$MouseHandler.update(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_CM"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mouseClicked(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.update(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mouseEntered(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mouseExited(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mouseMoved(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.get(int)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.size()_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.mouseReleased(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel$MouseHandler.update(MouseEvent)_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.get(int)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getColorSpace()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.set(int,Color)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.JHarmonicColorWheel()_CN">
        <uses provider="org.jhotdraw.color.DefaultHarmonicColorModel.DefaultHarmonicColorModel()_CN"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_CM"/>
        <uses provider="org.jhotdraw.color.HSLPhysiologicColorSpace.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.baseRadius_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.handleRadius_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.harmonicModel_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.modelHandler_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.mouseHandler_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.selectedIndex_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.SELECTED_INDEX_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.getColorLocation(Color)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.getColorLocation(Color)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.getHarmonicColorModel()_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.getSelectedIndex()_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.getToolTipText(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.installMouseListeners()_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.paintComponent(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.paintThumb(Graphics2D)_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.get(int)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getBase()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.size()_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.getColorSpace()_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.paintTicks(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.setColorSpace(ColorSpace)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColorSpace(ColorSpace)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.setComponent(int,float)_CM"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.setColorSpace(ColorSpace)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.setHarmonicColorModel(HarmonicColorModel)_MT">
        <uses provider="org.jhotdraw.color.HarmonicColorModel.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.color.HarmonicColorModel.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.color.JHarmonicColorWheel.setSelectedIndex(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey_Color_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey_Color_,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey_Color_,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.DrawingColorChooserAction(DrawingEditor,AttributeKey_Color_,String,Icon,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserAction.getInitialColor()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.getInitialColor()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditorColorChooserAction.getInitialColor()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.mini.BezierDemo$Canvas.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.BezierDemo$Canvas.paintComponent(Graphics)_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.keepColinear_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.geom.Bezier.fitBezierPath(BezierPath,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.colorButtonPerformed(ActionEvent)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.updateDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorButton_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.labels_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.getDrawing()_CM">
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.bgColorButtonGroup_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorButton_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorLabel_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.labels_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityLabel_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityPopupButton_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.setDrawing(Drawing)_CM">
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.updatePanel()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.drawing_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityFieldHandler_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacitySliderHandler_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.updateDrawing()_CM">
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorButton_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.updatePanel()_CM">
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorButton_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.drawing_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.EditCanvasPanel()_CN">
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorButton_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.labels_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityField_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityPopupButton_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacityFieldHandler_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacitySlider_FE"/>
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.opacitySliderHandler_FE"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.bgColorButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.colorButton_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.colorChooser_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.colorLabel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.drawing_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.labels_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.opacityField_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.opacityFieldHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.opacityLabel_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.opacityPopupButton_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.opacitySlider_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.opacitySliderHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.colorButtonPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.getColorChooser()_MT">
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.colorChooser_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.getDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.main(String[])_MT">
        <uses provider="org.jhotdraw.draw.action.EditCanvasPanel.EditCanvasPanel()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.setDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.updateDrawing()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.EditCanvasPanel.updatePanel()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.create(Element)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.installDefaults()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getColor(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInsets(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBoolean(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.errorIndicatorForeground_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.errorIndicatorForeground_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.create(Element)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.installDefaults()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.paintBackground(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.paintSafely(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragDropEnd(DragSourceDropEvent)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.scrolls_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragEnter(DragSourceDragEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragExit(DragSourceEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragGestureRecognized(DragGestureEvent)_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.imageOffset_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.scrolls_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.transferable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragOver(DragSourceDragEvent)_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.DefaultDrawingViewTransferHandler$DragHandler(Transferable,Point)_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.imageOffset_FE"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.transferable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.imageOffset_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.scrolls_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.transferable_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragDropEnd(DragSourceDropEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragEnter(DragSourceDragEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragExit(DragSourceEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragGestureRecognized(DragGestureEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dragOver(DragSourceDragEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingViewTransferHandler$DragHandler.dropActionChanged(DragSourceDragEvent)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(List_Point_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(List_Double_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(List_Double_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPolygon(List_Point_)_CM">
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_CM"/>
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)_CM">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)_CM">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(List_Point_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull(Point[])_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(Double[])_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHull2D(List_Double_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(List_Double_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.getConvexHullPolygon(List_Point_)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn(Point,Point,Point)_MT">
    </element>
    <element name="org.jhotdraw.geom.ConvexHull.isRightTurn2D(Double,Double,Double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,boolean,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,AttributeKey_Stroke_,AttributeKey_Color_,AttributeKey_Stroke_,AttributeKey_Color_,AttributeKey_Stroke_,AttributeKey_Color_,AttributeKey_Stroke_,AttributeKey_Color_)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.ConvexHullOutlineHandle(SVGPathFigure,boolean,boolean)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.outline_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.contains(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getTool()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT"/>
        <uses provider="org.jhotdraw.geom.ConvexHull.getConvexHullPath2D(Shape)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.outline_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.stroke2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor1Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Disabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.strokeColor2Enabled_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.getOwner()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackEnd(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackStart(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.trackStep(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.updateBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.ConvexHullOutlineHandle.outline_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.getTarget()_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.setContents(Transferable,ClipboardOwner)_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.AWTClipboard(Clipboard)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()_CN"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.getContents(Object)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.AWTClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.getTarget()_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AWTClipboard.setContents(Transferable,ClipboardOwner)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.getContents(Object)_CM">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.setContents(Transferable,ClipboardOwner)_CM">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()_CN">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.getContents(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.AbstractClipboard.setContents(Transferable,ClipboardOwner)_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.getTarget()_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.JNLPClipboard(Object)_CN">
        <uses provider="org.jhotdraw.gui.datatransfer.AbstractClipboard.AbstractClipboard()_CN"/>
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.getContents(Object)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.getTarget()_MT">
    </element>
    <element name="org.jhotdraw.gui.datatransfer.JNLPClipboard.setContents(Transferable,ClipboardOwner)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.JNLPClipboard.target_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.getFileFilter()_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.getInputFormatAccessory()_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.isDataFlavorSupported(DataFlavor)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(InputStream,Drawing,boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(Transferable,Drawing,boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(InputStream,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(Transferable,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.createTransferable(Drawing,List_Figure_,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.getFileExtension()_CM">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_CM">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.getOutputFormatAccessory()_CM">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.write(OutputStream,Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.getFileExtension()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor$ToolHandler.areaInvalidated(ToolEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor$ToolHandler.boundsInvalidated(ToolEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor$ToolHandler.toolStarted(ToolEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createActionMap()_CM">
        <uses provider="org.jhotdraw.draw.action.IncreaseHandleDetailLevelAction.IncreaseHandleDetailLevelAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createInputMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.DefaultDrawingEditor()_CN">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.actionMap_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.activeView_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.defaultAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.focusHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.handleAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.inputMap_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.isEnabled_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.tool_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.toolHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.views_FE">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.add(DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addNotify(DrawingEditor)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.applyDefaultAttributesTo(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.createInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.findView(Container)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getActiveView()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getDefaultAttribute(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getDefaultAttributes()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getDrawingViews()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getHandleAttribute(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.getTool()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.remove(DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.removeNotify(DrawingEditor)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setActionMap(ActionMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setActiveView(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setCursor(Cursor)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setDefaultAttribute(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setHandleAttribute(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setInputMap(InputMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.setTool(Tool)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addMouseMotionListener(MouseMotionListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeKeyListener(KeyListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseListener(MouseListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeMouseMotionListener(MouseMotionListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DefaultDrawingEditor.updateActiveView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.create(String)_MT">
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.unescape(String)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.createEnum(String,String)_MT">
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.unescape(String)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.escape(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.getEnumName(Enum_?_)_MT">
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.escape(String)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.getEnumValue(Enum_?_)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.getName(Object)_MT">
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.escape(String)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getTagName()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getText()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject(int)_CM"/>
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.create(String)_MT"/>
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.createEnum(String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.unescape(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaPrimitivesDOMFactory.write(DOMOutput,Object)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addText(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMStorable.write(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.AbstractColorWheelImageProducer(ColorSpace,int,int)_CN">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.angularIndex_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.h_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isLookupValid_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.pixels_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.radialIndex_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.verticalIndex_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.verticalValue_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.w_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.colorSpace_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.angularIndex_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.colorSpace_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.h_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.isLookupValid_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.pixels_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.radialIndex_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.verticalIndex_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.verticalValue_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.w_FE">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.generateColorWheel()_MT">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.getCenter()_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.h_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.w_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.getColorAt(int,int)_MT">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.getColorLocation(Color)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.getColorLocation(float[])_MT"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.colorSpace_FE"/>
        <uses provider="org.jhotdraw.color.ColorUtil.fromColor(ColorSpace,Color)_CM"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.getColorLocation(float[])_MT">
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.getRadius()_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.h_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.w_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.needsGeneration()_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.regenerateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.generateColorWheel()_MT"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.setAngularComponentIndex(int)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.angularIndex_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.setRadialComponentIndex(int)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.radialIndex_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.setVerticalComponentIndex(int)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.verticalIndex_FE"/>
    </element>
    <element name="org.jhotdraw.color.AbstractColorWheelImageProducer.setVerticalValue(float)_MT">
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.isPixelsValid_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.verticalValue_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.ColorSquareImageProducer(ColorSpace,int,int)_CN">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.ColorSquareImageProducer(ColorSpace,int,int,boolean,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.ColorSquareImageProducer(ColorSpace,int,int,boolean,boolean)_CN">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
        <uses provider="org.jhotdraw.color.AbstractColorWheelImageProducer.AbstractColorWheelImageProducer(ColorSpace,int,int)_CN"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.alphas_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.angulars_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.radials_FE">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.generateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.generateLookupTables()_MT"/>
        <uses provider="org.jhotdraw.color.ColorUtil.CStoRGB24(ColorSpace,float[],float[])_MT"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.generateLookupTables()_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.alphas_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.angulars_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.radials_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.getColorAt(int,int)_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.getColorLocation(float[])_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipX_FE"/>
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.flipY_FE"/>
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.needsGeneration()_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSquareImageProducer.regenerateColorWheel()_MT">
        <uses provider="org.jhotdraw.color.ColorSquareImageProducer.generateColorWheel()_MT"/>
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getFullName()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getName()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getNamespace()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getType()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getValue()_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.setValue(String)_CM">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.XMLAttribute(String,String,String,String,String)_CN">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.fullName_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.name_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.namespace_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.type_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.value_FE">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getFullName()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getName()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getNamespace()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getType()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.getValue()_MT">
    </element>
    <element name="src.main.java.net.n3.nanoxml.XMLAttribute.setValue(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.clone()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawText(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getInsets()_CM">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)_CM">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getTabSize()_MT"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getText()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.isEditable()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setBounds(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setText(String)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure(String)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure(String)_CN">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.bounds_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.dashes_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.editable_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.isTextOverflow_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.drawText(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getInsets()_CM"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getTabSize()_MT"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.isEditable()_MT"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.drawParagraph(Graphics2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.figureContains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getBaseline()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getInsets()_CM"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getFillColor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getFont()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getFontSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getLabelFor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTabSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getText()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTextColor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTextColumns()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getText()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.isTextOverflow_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.isEditable()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.isTextOverflow()_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getInsets()_CM"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.isTextOverflow_FE"/>
        <uses provider="org.jhotdraw.draw.TextAreaFigure.getPreferredTextSize(double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.readBounds(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.readBounds(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setEditable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setFontSize(float)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.setText(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.writeBounds(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextAreaFigure.writeBounds(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.drawStroke(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getFigureDrawingArea()_CM">
        <uses provider="org.jhotdraw.draw.TextFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getTextLayout()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTabSize()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getText()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.invalidate()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.isEditable()_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.setText(String)_CM">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.TextFigure()_CN">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure(String)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.TextFigure(String)_CN">
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.editable_FE"/>
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.editable_FE">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.origin_FE">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.textLayout_FE">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.drawText(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getTextLayout()_MT"/>
        <uses provider="org.jhotdraw.draw.TextFigure.isEditable()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.figureContains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getBaseline()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getTextLayout()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getTextLayout()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getFigureDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getFillColor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getFont()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getFontSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getLabelFor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getPreferredSize()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTabSize()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getText()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTextColor()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTextColumns()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTextLayout()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.isEditable()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.isTextOverflow()_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.origin_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.setEditable(boolean)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.setFontSize(float)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.setText(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.TextFigure.validate()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.textLayout_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TextFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createMenuBuilder()_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.initView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.menuBuilder_FE">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)_MT">
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DeleteAction.DeleteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN"/>
        <uses provider="org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.OpenFileAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.RedoAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.UndoAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.CloseFileAction.CloseFileAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAsAction.SaveFileAsAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createMenuBuilder()_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.getMenuBuilder()_MT">
        <uses provider="org.jhotdraw.app.DefaultApplicationModel.createMenuBuilder()_CM"/>
        <uses provider="org.jhotdraw.app.DefaultApplicationModel.menuBuilder_FE"/>
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.initView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultApplicationModel.setMenuBuilder(MenuBuilder)_MT">
        <uses provider="org.jhotdraw.app.DefaultApplicationModel.menuBuilder_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$East.AlignAction$East(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$East.AlignAction$East(DrawingEditor,ResourceBundleUtil)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$East.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$East.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Horizontal.AlignAction$Horizontal(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Horizontal.AlignAction$Horizontal(DrawingEditor,ResourceBundleUtil)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Horizontal.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Horizontal.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$North.AlignAction$North(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$North.AlignAction$North(DrawingEditor,ResourceBundleUtil)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$North.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$North.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$South.AlignAction$South(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$South.AlignAction$South(DrawingEditor,ResourceBundleUtil)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$South.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$South.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Vertical.AlignAction$Vertical(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Vertical.AlignAction$Vertical(DrawingEditor,ResourceBundleUtil)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Vertical.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$Vertical.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$West.AlignAction$West(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$West.AlignAction$West(DrawingEditor,ResourceBundleUtil)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$West.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction$West.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.getSelectionBounds()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.AlignAction(DrawingEditor)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.labels_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.alignFigures(Collection_Figure_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.getSelectionBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AlignAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.geom.Bezier.addCurveTo(Point2D[],BezierPath,double,boolean)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.b0(double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.bezierII(int,Point2D[],double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.chordLengthParameterize(ArrayList_Point2D_,int,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeCenterTangent(ArrayList_Point2D_,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeLeftTangent(ArrayList_Point2D_,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeMaxError(ArrayList_Point2D_,int,int,Point2D[],double[],int[])_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeRightTangent(ArrayList_Point2D_,int)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.findCorners(List_Point2D_,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(BezierPath,double)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(List_Point2D_,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(Point2D[],double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitCubic(ArrayList_Point2D_,int,int,Point2D,Point2D,double,BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.generateBezier(ArrayList_Point2D_,int,int,double[],Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.newtonRaphsonRootFind(Point2D[],Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.reduceNoise(List_Point2D_,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.removeClosePoints(List_Point2D_,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.removeCoincidentPoints(List_Point2D_)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.reparameterize(ArrayList_Point2D_,int,int,double[],Point2D[])_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.splitAtCorners(List_Point2D_,double,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Add(Point2D,Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2AddII(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2DistanceBetween2Points(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Dot(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Length(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Negate(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Normalize(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Scale(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2ScaleIII(Point2D,double)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2SquaredDistanceBetween2Points(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2SquaredLength(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2SubII(Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.geom.Bezier.Bezier()_CN">
    </element>
    <element name="org.jhotdraw.geom.Bezier.addCurveTo(Point2D[],BezierPath,double,boolean)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.b0(double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.b1(double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.b2(double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.b3(double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.bezierII(int,Point2D[],double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.chordLengthParameterize(ArrayList_Point2D_,int,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeCenterTangent(ArrayList_Point2D_,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeLeftTangent(ArrayList_Point2D_,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeMaxError(ArrayList_Point2D_,int,int,Point2D[],double[],int[])_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.computeRightTangent(ArrayList_Point2D_,int)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.findCorners(List_Point2D_,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(BezierPath,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(List_Point2D_,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitBezierPath(Point2D[],double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.fitCubic(ArrayList_Point2D_,int,int,Point2D,Point2D,double,BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.generateBezier(ArrayList_Point2D_,int,int,double[],Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.newtonRaphsonRootFind(Point2D[],Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.reduceNoise(List_Point2D_,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.removeClosePoints(List_Point2D_,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.removeCoincidentPoints(List_Point2D_)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.reparameterize(ArrayList_Point2D_,int,int,double[],Point2D[])_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.splitAtCorners(List_Point2D_,double,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Add(Point2D,Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2AddII(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2DistanceBetween2Points(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Dot(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Length(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Negate(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Normalize(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2Scale(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2ScaleIII(Point2D,double)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2SquaredDistanceBetween2Points(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2SquaredLength(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.geom.Bezier.v2SubII(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getParameter(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.init()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.getAppletInfo()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.toolButtonGroup_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.initDrawing(Drawing)_CM">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawFigureFactory.DrawFigureFactory()_CN"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.ImageFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.Drawing.addInputFormat(InputFormat)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.addOutputFormat(OutputFormat)_CM"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.drawingPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.NAME_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getData()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.draw.DrawFigureFactory.DrawFigureFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.drawingPanel_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getParameterInfo()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.initDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.draw.DrawFigureFactory.DrawFigureFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawApplet.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawApplet.drawingPanel_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawingPanel.setDrawing(Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.Main.main(String[])_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawApplicationModel.DrawApplicationModel()_CN"/>
        <uses provider="org.jhotdraw.app.Application.launch(String[])_CM"/>
        <uses provider="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.setVerbose(boolean)_MT"/>
        <uses provider="org.jhotdraw.app.SDIApplication.SDIApplication()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.net.Main.main(String[])_CM">
        <uses provider="org.jhotdraw.app.Application.launch(String[])_CM"/>
        <uses provider="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.SDIApplication()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getParameter(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.init()_CM">
        <uses provider="org.jhotdraw.samples.net.NetApplet.getAppletInfo()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.net.NetApplet.toolButtonGroup_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.initDrawing(Drawing)_CM">
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.net.NetFactory.NetFactory()_CN"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.ImageFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.Drawing.addInputFormat(InputFormat)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.addOutputFormat(OutputFormat)_CM"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.drawingPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.NAME_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.net.NetApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getData()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.net.NetApplet.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.net.NetFactory.NetFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.net.NetApplet.drawingPanel_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getParameterInfo()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.initDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.net.NetApplet.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.net.NetApplet.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.net.NetFactory.NetFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetApplet.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.samples.net.NetApplet.drawingPanel_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetPanel.setDrawing(Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.Main.main(String[])_CM">
        <uses provider="org.jhotdraw.app.Application.launch(String[])_CM"/>
        <uses provider="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.SDIApplication()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getParameter(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.init()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertApplet.getAppletInfo()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertApplet.toolButtonGroup_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.initDrawing(Drawing)_CM">
        <uses provider="org.jhotdraw.samples.pert.PertFactory.PertFactory()_CN"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.drawingPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.NAME_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.toolButtonGroup_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getData()_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.PertApplet.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertFactory.PertFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertApplet.drawingPanel_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.getDrawing()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getParameterInfo()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.initDrawing(Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.setData(String)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.PertApplet.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertApplet.setDrawing(Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertFactory.PertFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertApplet.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.samples.pert.PertApplet.drawingPanel_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertPanel.setDrawing(Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.close()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.getParameter(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.createDrawing()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.createDrawingComponent()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getAppletInfo()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getDrawing()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getParameter(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getParameter(String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getVersion()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.htmlencode(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.init()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.getParameter(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.ProgressIndicator(String,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.loadDrawing(ProgressIndicator)_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.getParameter(String)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.createDrawing()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.setIndeterminate(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ProgressIndicator.setProgressModel(BoundedRangeModel)_MT"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.setMaximum(int)_CM"/>
        <uses provider="org.jhotdraw.io.BoundedRangeInputStream.BoundedRangeInputStream(InputStream)_CN"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(InputStream,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.setDrawing(Drawing)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.SVGApplet()_CN">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.start_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.drawingComponent_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.start_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.version_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.close()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.createDrawing()_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGZOutputFormat.SVGZOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat(String,String,String,int)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.createDrawingComponent()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getAppletInfo()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.getVersion()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.drawingComponent_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getDrawingComponent()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.drawingComponent_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getParameter(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getParameter(String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getParameterInfo()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.getVersion()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.version_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.htmlencode(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.loadDrawing(ProgressIndicator)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGApplet.setDrawing(Drawing)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGApplet.drawingComponent_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.DefaultSVGFigureFactory()_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createCircle(double,double,double,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createEllipse(double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createG(Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createImage(double,double,double,double,byte[],BufferedImage,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImage(byte[],BufferedImage)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createLine(double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createLinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.LinearGradient(double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createPath(BezierPath[],Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createPolygon(Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createPolyline(Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createRadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.RadialGradient(double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createRect(double,double,double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createText(Point2D[],double[],StyledDocument,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.DefaultSVGFigureFactory.createTextArea(double,double,double,double,StyledDocument,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.getId(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.identifiedElements_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.nextId_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toPath(BezierPath[])_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toPoints(Point2D[])_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing,List_Figure_)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.defs_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeElement(IXMLElement,Figure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.initStorageContext(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeShapeAttributes(IXMLElement,Map_AttributeKey_?_,Object_)_CM">
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getStopColors()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getStopOffsets()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getX1()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getX2()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getY1()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getY2()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getCX()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getCY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getR()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getStopColors()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getStopOffsets()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.getId(IXMLElement)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.defs_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.strokeLinecapMap_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.strokeLinejoinMap_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toColor(Color)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getStopOpacities()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getStopOpacities()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.LinearGradient.getTransform()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getFX()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getFY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.RadialGradient.getTransform()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.gradientToIDMap_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.createLinearGradient(IXMLElement,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.createRadialGradient(IXMLElement,double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.defs_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.gradientToIDMap_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.identifiedElements_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.isFloatPrecision_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.nextId_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.strokeLinecapMap_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.strokeLinejoinMap_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createCircle(IXMLElement,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createEllipse(IXMLElement,double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createG(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createImage(IXMLElement,double,double,double,double,byte[],Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createLine(IXMLElement,double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createLinearGradient(IXMLElement,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toColor(Color)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toTransform(AffineTransform)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createPath(IXMLElement,BezierPath[],Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toPath(BezierPath[])_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createPolygon(IXMLElement,Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createPolyline(IXMLElement,Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createRadialGradient(IXMLElement,double,double,double,double,double,double[],Color[],double[],boolean,AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toColor(Color)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toTransform(AffineTransform)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createRect(IXMLElement,double,double,double,double,double,double,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createText(IXMLElement,Point2D[],double[],StyledDocument,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createTextArea(IXMLElement,double,double,double,double,StyledDocument,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor,byte[])_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.getFileExtension()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.getId(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.initStorageContext(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.identifiedElements_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.gradientToIDMap_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint()_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.setPrettyPrint(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.isPrettyPrint_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toColor(Color)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toPath(BezierPath[])_MT">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toPoints(Point2D[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.toTransform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(File,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(OutputStream,Drawing,List_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeCircleElement(IXMLElement,SVGEllipseFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getX()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeElement(IXMLElement,Figure)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getNode(int)_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.isClosed()_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getMask()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeCircleElement(IXMLElement,SVGEllipseFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeGElement(IXMLElement,SVGGroupFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePathElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeRectElement(IXMLElement,SVGRectFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextElement(IXMLElement,SVGTextFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getX()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeFontAttributes(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeGElement(IXMLElement,SVGGroupFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeElement(IXMLElement,Figure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.getAttributes()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getImageData()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getX()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getNode(int)_CM"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeOpacityAttribute(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePathElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getBezierPath()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getBezierPath()_CM"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getBezierPath()_CM"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeRectElement(IXMLElement,SVGRectFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getX()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeShapeAttributes(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTextElement(IXMLElement,SVGTextFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getCoordinates()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getRotates()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.document_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeTransformAttribute(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toTransform(AffineTransform)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeViewportAttributes(IXMLElement,Map_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toNumber(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.toColor(Color)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,String,String)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.writeAttribute(IXMLElement,String,double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.createHandles(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawFill(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.isEmpty()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure()_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.SVGEllipseFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedHitShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedTransformedShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHeight()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getHitShape()_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getWidth()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getX()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getY()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.cachedHitShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.isEmpty()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.ellipse_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.SVGGroupFigure()_CN">
        <uses provider="org.jhotdraw.draw.GroupFigure.GroupFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.attributes_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.get(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.getAttributes()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.setAttributes(Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGGroupFigure.toString()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.createHandles(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.draw(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBufferedImage()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBufferedImage()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getImageData()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getX()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setBufferedImage(BufferedImage)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImage(byte[],BufferedImage)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImageData(byte[])_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidateTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure()_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedHitShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedTransformedShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBufferedImage()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getHeight()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getHitShape()_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getImageData()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getWidth()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getX()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.getY()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidateTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidateTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.cachedTransformedShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.isEmpty()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.loadImage(File)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.loadImage(InputStream)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.loadImage(InputStream)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.bufferedImage_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.imageData_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.invalidateTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setBufferedImage(BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImage(byte[],BufferedImage)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.setImageData(byte[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGImageFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getDrawingArea()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.AbstractAttributedCompositeFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.SVGPathFigure(boolean)_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.AbstractAttributedCompositeFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.SVGBezierFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.cachedHitShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.cachedPath_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.add(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.createHandles(SVGPathFigure,int)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathOutlineHandle.SVGPathOutlineHandle(SVGPathFigure,boolean)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawFigure(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getDrawingArea()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawChildren(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawFigure(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawFill(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawStroke(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.flattenTransform()_MT">
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGBezierFigure.flattenTransform()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getHitShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.cachedHitShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getPath()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.cachedPath_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.cachedPath_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.cachedHitShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGPathFigure.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.clone()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.createHandles(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectRadiusHandle.SVGRectRadiusHandle(Figure)_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.drawFill(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getX()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidateTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure()_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.SVGRectFigure(double,double,double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.acv_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.ARC_HEIGHT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.ARC_WIDTH_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedHitShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedTransformedShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.acv_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getHeight()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getHitShape()_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getWidth()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getX()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.getY()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidateTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidateTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.cachedTransformedShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.isEmpty()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.invalidateTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArc(double,double)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcHeight(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setArcWidth(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGRectFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.appendParagraph(Path2D,AttributedCharacterIterator,float,float,float,float,float[],int)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()_CM">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTabSize()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isEmpty()_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setText(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure()_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure(String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.SVGTextAreaFigure(String)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.editable_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.cachedTextShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.dashes_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.editable_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.appendParagraph(Path2D,AttributedCharacterIterator,float,float,float,float,float[],int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.drawText(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBaseline()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.cachedDrawingArea_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFillColor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFont()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFontSize()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getLabelFor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTabSize()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextColor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextColumns()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTextShape()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTabSize()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getText()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isEditable()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.cachedTextShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.cachedDrawingArea_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.cachedTextShape_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isEditable()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getInsets()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.isTextOverflow_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getPreferredTextSize(double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.bounds_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setEditable(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setFontSize(float)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.setText(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.drawText(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTabSize()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTool(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setCoordinates(Point2D[])_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setText(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.isRelativeToFigureBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.Gradient.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure()_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure(String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure(String)_CN">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.setText(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.editable_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGAttributedFigure.SVGAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedBounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedTextShape_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.editable_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedDrawingArea_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedTextShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.LinkHandle.LinkHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.drawText(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBaseline()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getCoordinates()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedDrawingArea_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getFillColor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getFont()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getFontSize()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getLabelFor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getPreferredSize()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getRotates()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTabSize()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextColor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextColumns()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTextShape()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getFont()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedTextShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTool(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedBounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedDrawingArea_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.cachedTextShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.isEditable()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.isEmpty()_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getText()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.isTextOverflow()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.coordinates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setCoordinates(Point2D[])_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setEditable(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.editable_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setFontSize(float)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setRotates(double[])_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.rotates_FE"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.setText(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.figures.SVGTextFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVGConstants()_CN">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_ABSOLUTE_FONT_SIZES_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_COLORS_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_FILL_RULES_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_MIMETYPE_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_NAMESPACE_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_RELATIVE_FONT_SIZES_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_STROKE_LINECAPS_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_STROKE_LINEJOINS_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_TEXT_ALIGNS_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGConstants.SVG_TEXT_ANCHORS_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetLabel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.CharacterSetAccessory()_CN">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.prefs_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.fetchAvailableCharSets()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponentsWin()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.availableCharSets_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepCombo_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.prefs_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.fetchAvailableCharSets()_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.availableCharSets_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.getCharacterSet()_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.getLineSeparator()_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.CharacterSetAccessory.initComponentsWin()_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.charSetLabel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.lineSepLabel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.initComponents()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.buttonPanel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.findField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.findLabel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.findScrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.ignoreCaseCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.labels_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.modeCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.nextButton_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.optionsPanel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.previousButton_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceAllButton_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceAndFindButton_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceButton_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceLabel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceScrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Application)_CN">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Frame,boolean)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Frame,boolean)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.buttonPanel_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.findField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.ignoreCaseCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.labels_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.modeCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.nextButton_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.prefs_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.app_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.buttonPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.findField_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.findLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.findScrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.ignoreCaseCheck_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.matcher_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.modeCombo_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.nextButton_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.optionsPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.prefs_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.previousButton_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceAllButton_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceAndFindButton_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceButton_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceField_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceScrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.ignoreCasePerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.ignoreCaseCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.modeChanged(ItemEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.modeCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.next(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.matcher_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.getFindString()_MT"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.previous(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.matcher_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findPrevious(int)_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.setStartIndex(int)_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.getFindString()_MT"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replace(ActionEvent)_MT">
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceField_FE"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceAll(ActionEvent)_MT">
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.matcher_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.findNext(int)_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.getFindString()_MT"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.replaceAndFind(ActionEvent)_MT">
        <uses provider="org.jhotdraw.undo.CompositeEdit.CompositeEdit(String)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.replaceField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.next(ActionEvent)_MT"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.updateMatcher()_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.app_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.findField_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.ignoreCaseCheck_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.matcher_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.modeCombo_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.regex.Matcher.Matcher(Document,String,boolean,MatchType)_CN"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.FindDialog.wrapAroundPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.prefs_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.wrapAroundCheck_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.Main.main(String[])_CM">
        <uses provider="org.jhotdraw.samples.teddy.TeddyApplicationModel.TeddyApplicationModel()_CN"/>
        <uses provider="org.jhotdraw.app.Application.launch(String[])_CM"/>
        <uses provider="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.Main.COPYRIGHT_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.Main.NAME_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.Main.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createMenuBuilder()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.TeddyApplicationModel()_CN">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createActionMap(Application,View)_MT">
        <uses provider="org.jhotdraw.app.DefaultApplicationModel.createActionMap(Application,View)_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.ToggleLineNumbersAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.ToggleLineWrapAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.ToggleStatusBarAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.action.FindAction.FindAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createMenuBuilder()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createOpenChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.CharacterSetAccessory()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createSaveChooser(Application,View)_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.CharacterSetAccessory()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyApplicationModel.initView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.FindAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.action.edit.AbstractFindAction.AbstractFindAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.findDialog_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.FindAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.FindDialog.FindDialog(Application)_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.action.FindAction.findDialog_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.ToggleLineNumbersAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.labels_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.updateView()_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineNumbersAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.ToggleLineWrapAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.labels_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.updateView()_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleLineWrapAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.ToggleStatusBarAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.labels_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.ID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.updateView()_MT">
        <uses provider="org.jhotdraw.samples.teddy.action.ToggleStatusBarAction.getActiveView()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedEditorKit.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedEditorKit.viewFactory_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedEditorKit.getViewFactory()_MT">
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedEditorKit.viewFactory_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.getLeftInset()_CM">
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedParagraphView.viewFactory_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.NumberedParagraphView(Element,NumberedViewFactory)_CN">
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedParagraphView.viewFactory_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.numberFont_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.NUMBERS_WIDTH_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.viewFactory_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.getLeftInset()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.text.NumberedParagraphView.paintChild(Graphics,Rectangle,int)_MT">
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedParagraphView.getLeftInset()_CM"/>
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedParagraphView.numberFont_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedParagraphView.viewFactory_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZOutputFormat.SVGZOutputFormat()_CN">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZOutputFormat.getFileExtension()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZOutputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.SVGZOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List_Figure_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List_Figure_,AffineTransform,Dimension)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.bounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.drawingTransform_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.isIncludeNohref_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeElement(IXMLElement,Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeCircleAttributes(IXMLElement,SVGFigure,Ellipse2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.bounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.drawingTransform_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeHrefAttribute(IXMLElement,SVGFigure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectAttributes(IXMLElement,SVGFigure,Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.ImageMapOutputFormat()_CN">
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.bounds_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.drawingTransform_FE"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.isIncludeNohref_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.bounds_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.drawingTransform_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.isIncludeNohref_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor,byte[])_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.getFileExtension()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(File,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(OutputStream,List_Figure_,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.write(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeCircleAttributes(IXMLElement,SVGFigure,Ellipse2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeElement(IXMLElement,Figure)_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.getNode(int)_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.getNodeCount()_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.isClosed()_MT"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.getMask()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeGElement(IXMLElement,SVGGroupFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePathElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectElement(IXMLElement,SVGRectFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeTextElement(IXMLElement,SVGTextFigure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeEllipseElement(IXMLElement,SVGEllipseFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGEllipseFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeGElement(IXMLElement,SVGGroupFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeElement(IXMLElement,Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeHrefAttribute(IXMLElement,SVGFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeImageElement(IXMLElement,SVGImageFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeLineElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePathElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolygonElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolylineElement(IXMLElement,SVGPathFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.getChild(int)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectAttributes(IXMLElement,SVGFigure,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeRectElement(IXMLElement,SVGRectFigure)_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getX()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGRectFigure.getY()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writePolyAttributes(IXMLElement,SVGFigure,Shape)_CM"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeTextAreaElement(IXMLElement,SVGTextAreaFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextAreaFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.writeTextElement(IXMLElement,SVGTextFigure)_MT">
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.clear()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawView.createDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.createDrawing()_CM">
        <uses provider="org.jhotdraw.draw.TextAreaFigure.TextAreaFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawFigureFactory.DrawFigureFactory()_CN"/>
        <uses provider="org.jhotdraw.draw.ImageFigure.ImageFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.Drawing.addInputFormat(InputFormat)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.addOutputFormat(OutputFormat)_CM"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.createPageable()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.getEditor()_CM">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.initActions()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.draw.DrawView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.read(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_CM">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.write(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.view_FE"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.DrawView()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.initActions()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.undo_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.view_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.undo_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.view_FE">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.draw.DrawView.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.editor_FE"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.setHasUnsavedChanges(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.draw.DrawView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.draw.DrawView.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.clear()_CM">
        <uses provider="org.jhotdraw.samples.net.NetView.createDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.createDrawing()_CM">
        <uses provider="org.jhotdraw.samples.net.NetFactory.NetFactory()_CN"/>
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.createPageable()_CM">
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.initActions()_CM">
        <uses provider="org.jhotdraw.samples.net.NetView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.net.NetView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.read(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.write(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.NetView()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.net.NetView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetView.initActions()_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetView.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.toggleGridButton_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.undo_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.GRID_VISIBLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.toggleGridButton_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.undo_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.view_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.net.NetView.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.getScaleFactor()_MT">
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.isGridVisible()_MT">
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.NetView.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.samples.net.NetView.editor_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.setGridVisible(boolean)_MT">
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
        <uses provider="org.jhotdraw.samples.net.NetView.isGridVisible()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.setHasUnsavedChanges(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.net.NetView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.setScaleFactor(double)_MT">
        <uses provider="org.jhotdraw.samples.net.NetView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetView.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.clear()_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGView.createDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.createDrawing()_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGImageFigure.SVGImageFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGTextFigure.SVGTextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGZOutputFormat.SVGZOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.ODGInputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.ImageMapOutputFormat.ImageMapOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGDrawing.ODGDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageInputFormat.ImageInputFormat(ImageHolderFigure)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat(String,String,String,int)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.createPageable()_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.initActions()_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.ODGPropertiesPanel()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.propertiesPanel_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.read(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.write(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(File,Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.ODGView()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.draw.GridConstrainer.GridConstrainer(double,double)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.setView(DrawingView)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.initActions()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.invisibleConstrainer_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.propertiesPanel_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.undo_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.visibleConstrainer_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.exportChooser_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.GRID_VISIBLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.invisibleConstrainer_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.propertiesPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.undo_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.view_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.visibleConstrainer_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.getScaleFactor()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.isGridVisible()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.isPropertiesPanelVisible()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.propertiesPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGPropertiesPanel.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.editor_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.propertiesPanel_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setEnabled(boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setGridVisible(boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.isGridVisible()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setHasUnsavedChanges(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setPropertiesPanelVisible(boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.propertiesPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.setScaleFactor(double)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGView.view_FE"/>
        <uses provider="org.jhotdraw.samples.odg.ODGView.getScaleFactor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGView.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.clear()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertView.createDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.createDrawing()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertFactory.PertFactory()_CN"/>
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.createPageable()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.initActions()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.pert.PertView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.read(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.write(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.draw.Drawing.getOutputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
        <uses provider="org.jhotdraw.draw.io.OutputFormat.write(URI,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.PertView()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.initActions()_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.scrollPane_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.undo_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.setEditor(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.GRID_VISIBLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.undo_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.view_FE">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertView.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.getScaleFactor()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.isGridVisible()_MT">
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.add(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.remove(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.editor_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.setGridVisible(boolean)_MT">
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.isGridVisible()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.setHasUnsavedChanges(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.setScaleFactor(double)_MT">
        <uses provider="org.jhotdraw.samples.pert.PertView.view_FE"/>
        <uses provider="org.jhotdraw.samples.pert.PertView.getScaleFactor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertView.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.clear()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGView.createDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.createDrawing()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.createPageable()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.initActions()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.initComponents()_CM">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.read(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.draw.Drawing.getInputFormats()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.draw.io.InputFormat.read(URI,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.write(URI,URIChooser)_CM">
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.SVGOutputFormat()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.io.SVGOutputFormat.write(File,Drawing)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.SVGView()_CN">
        <uses provider="org.jhotdraw.draw.Drawing.addUndoableEditListener(UndoableEditListener)_CM"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.createDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.initActions()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.initComponents()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.undo_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.propertyHandler_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.DRAWING_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.exportChooser_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.GRID_VISIBLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.propertyHandler_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.svgPanel_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.undo_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.dispose()_MT">
        <uses provider="org.jhotdraw.app.AbstractView.dispose()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.clear()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.undo_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.propertyHandler_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.getDrawing()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.getEditor()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.getUndoManager()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.setEnabled(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGView.svgPanel_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.setHasUnsavedChanges(boolean)_MT">
        <uses provider="org.jhotdraw.app.AbstractView.setHasUnsavedChanges(boolean)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.SVGView.undo_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGView.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.isLineWrap_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getLineWrap()_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.isLineWrap_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getPreferredScrollableViewportSize()_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getScrollableBlockIncrement(Rectangle,int,int)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getScrollableTracksViewportHeight()_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getScrollableTracksViewportWidth()_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.isLineWrap_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getScrollableUnitIncrement(Rectangle,int,int)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.setEditor(JTextComponent)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.setLineWrap(boolean)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.editor_FE"/>
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.isLineWrap_FE"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getLineCount()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getLineOfOffset(int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getLineStartOffset(int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getSelectionEnd()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getSelectionStart()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.readDocument(File,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.replaceRange(String,int,int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.select(int,int)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.writeDocument(Document,File,String,String)_CM">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.TeddyView()_CN">
        <uses provider="org.jhotdraw.samples.teddy.text.NumberedEditorKit.getViewFactory()_MT"/>
        <uses provider="org.jhotdraw.app.AbstractView.AbstractView()_CN"/>
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.setEditor(JTextComponent)_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.setLineWrap(boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.caretInfoLabel_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.editor_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.editorViewport_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.findDialog_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.matcher_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.prefs_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.statusBar_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.undoManager_FE">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.caretUpdate(CaretEvent)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.clear()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.createDocument()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.createEditor()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.fireEdit(UndoableEdit)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getDocument()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getLineCount()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getLineOfOffset(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getLineStartOffset(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getSelectionEnd()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.getSelectionStart()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.init()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.initActions()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.isLineNumbersVisible()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.isLineWrap()_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getLineWrap()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.isStatusBarVisible()_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.read(URI,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.read(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.getCharacterSet()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.readDocument(File,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.replaceRange(String,int,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.select(int,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.setLineNumbersVisible(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.setLineWrap(boolean)_MT">
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.getLineWrap()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.TeddyView$EditorPanel.setLineWrap(boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.setStatusBarVisible(boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.write(URI,String,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.write(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.getCharacterSet()_MT"/>
        <uses provider="org.jhotdraw.samples.teddy.CharacterSetAccessory.getLineSeparator()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.teddy.TeddyView.writeDocument(Document,File,String,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Icon[])_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.icons_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.generateMissingIcons()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Image,int,boolean)_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.isTiledHorizontaly_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.tileCount_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.tiledImage_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.MultiIcon(Image[])_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.icons_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.generateMissingIcons()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.icons_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.isTiledHorizontaly_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.tileCount_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.tiledImage_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.generateIconsFromTiledImage()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.icons_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.isTiledHorizontaly_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.tileCount_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.tiledImage_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.generateMissingIcons()_MT"/>
        <uses provider="org.jhotdraw.util.Images.split(Image,int,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.generateMissingIcons()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.getIcon(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.getIconHeight()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.icons_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.generateIconsFromTiledImage()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.getIconWidth()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.icons_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.generateIconsFromTiledImage()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.MultiIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.generateIconsFromTiledImage()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.MultiIcon.getIcon(Component)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.layoutContainer(Container)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.rootPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.maximumLayoutSize(Container)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.rootPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.minimumLayoutSize(Container)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.rootPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.preferredLayoutSize(Container)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.rootPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.PaletteRootPaneUI$PaletteRootLayout(JRootPane)_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.rootPane_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.rootPane_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.addLayoutComponent(Component,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.addLayoutComponent(String,Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.getLayoutAlignmentX(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.getLayoutAlignmentY(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.invalidateLayout(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.layoutContainer(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.maximumLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.minimumLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.preferredLayoutSize(Container)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI$PaletteRootLayout.removeLayoutComponent(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.rootPaneUI_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteRootPaneUI.installUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.SVGCreateFromFileTool(ImageHolderFigure,CompositeFigure)_CN">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.SVGCreateFromFileTool(ImageHolderFigure,CompositeFigure,Map_AttributeKey_?_,Object_)_CN">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileChooser_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileDialog_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.workerThread_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.groupPrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.imagePrototype_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.workerThread_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileChooser()_MT"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileDialog()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.createFigure()_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createFigure()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileChooser()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileChooser_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.getFileDialog()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.isUseFileDialog()_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.SVGCreateFromFileTool.setUseFileDialog(boolean)_MT">
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileChooser_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.fileDialog_FE"/>
        <uses provider="org.jhotdraw.samples.svg.SVGCreateFromFileTool.useFileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.clone()_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.draw(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.findEnd(ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.findStart(ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getAnchor()_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getBounds()_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getDrawingArea()_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getOwner()_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.updateAnchor(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.findEnd(ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.findStart(ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getAnchor()_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.getOwner()_MT">
    </element>
    <element name="org.jhotdraw.draw.connector.Connector.updateAnchor(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$EastHandle.ResizeHandleKit$EastHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$EastHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$EastHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$EastHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthHandle.ResizeHandleKit$NorthHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$NorthHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$WestHandle.ResizeHandleKit$WestHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$WestHandle.getCursor()_MT">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$WestHandle.keyPressed(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit$WestHandle.trackStepNormalized(Point2D,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addCornerResizeHandles(Figure,Collection_Handle_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addEdgeResizeHandles(Figure,Collection_Handle_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addResizeHandles(Figure,Collection_Handle_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.isTransformable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.ResizeHandleKit()_CN">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addCornerResizeHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addEdgeResizeHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.addResizeHandles(Figure,Collection_Handle_)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.east(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.north(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.northEast(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.northWest(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.south(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.southEast(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.southWest(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.handle.ResizeHandleKit.west(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URL,InputStream,Drawing,LinkedList_Figure_)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String,int)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,InputStream)_CN"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.getName(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory)_CN">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory,String,String,String)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.DOMStorableInputOutputFormat(DOMFactory,String,String,String)_CN">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.dataFlavor_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.fileExtension_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.mimeType_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.dataFlavor_FE">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.description_FE">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.fileExtension_FE">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.formatName_FE">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.mimeType_FE">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
        <uses provider="org.jhotdraw.gui.datatransfer.InputStreamTransferable.InputStreamTransferable(DataFlavor,byte[])_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(OutputStream)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)_MT"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.mimeType_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getFileExtension()_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.fileExtension_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getFileFilter()_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.fileExtension_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.isDataFlavorSupported(DataFlavor)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.dataFlavor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(InputStream,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,InputStream)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.dispose()_MT"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.getName(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(Transferable,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,InputStream)_CN"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.mimeType_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URI,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.read(URL,InputStream,Drawing,LinkedList_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(OutputStream,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(OutputStream,Drawing)_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(OutputStream)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.dispose()_MT"/>
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.factory_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.getName(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.DOMStorableInputOutputFormat.write(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.createTransferable(Drawing,List_Figure_,double)_CM">
        <uses provider="org.jhotdraw.gui.datatransfer.ImageTransferable.ImageTransferable(Image)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List_Figure_,AffineTransform,Dimension)_CM">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.imageType_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.setRenderingHints(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List_Figure_,double,boolean)_CM">
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(File,Drawing)_CM">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,List_Figure_)_CM">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,List_Figure_,AffineTransform,Dimension)_CM">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.formatName_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat()_CN">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat(String,String,String,int)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.ImageOutputFormat(String,String,String,int)_CN">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.fileExtension_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.formatName_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.imageType_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.description_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.fileExtension_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.formatName_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.imageType_FE">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.getFileExtension()_MT">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.fileExtension_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.getFileFilter()_MT">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.fileExtension_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.setRenderingHints(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List_Figure_,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.toImage(Drawing,List_Figure_,double,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(File,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,List_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(OutputStream,Drawing,List_Figure_,AffineTransform,Dimension)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.ImageOutputFormat.write(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.ImageOutputFormat.write(File,Drawing)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat()_CN">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat(String,String,Drawing)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat(String,String,Drawing)_CN">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.dataFlavor_FE"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.fileExtension_FE"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.mimeType_FE"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.dataFlavor_FE">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.description_FE">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.fileExtension_FE">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.formatName_FE">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.mimeType_FE">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.prototype_FE">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.createTransferable(Drawing,List_Figure_,double)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.dataFlavor_FE"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.getFileExtension()_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.fileExtension_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.getFileFilter()_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.description_FE"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.fileExtension_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.getOutputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.isDataFlavorSupported(DataFlavor)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.dataFlavor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(InputStream,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(Transferable,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.dataFlavor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(URI,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.write(File,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.write(OutputStream,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.write(OutputStream,Drawing)_MT">
    </element>
    <element name="org.jhotdraw.draw.io.SerializationInputOutputFormat.write(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.write(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.layouter.Layouter.calculateLayout(CompositeFigure,Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.layouter.Layouter.layout(CompositeFigure,Point2D,Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.layouter.Layouter.calculateLayout(CompositeFigure,Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.layouter.Layouter.layout(CompositeFigure,Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.liner.Liner.createHandles(BezierPath)_CM">
    </element>
    <element name="org.jhotdraw.draw.liner.Liner.lineout(ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.liner.Liner.clone()_MT">
    </element>
    <element name="org.jhotdraw.draw.liner.Liner.createHandles(BezierPath)_MT">
    </element>
    <element name="org.jhotdraw.draw.liner.Liner.lineout(ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.ImageTool(ImageHolderFigure)_CN">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.ImageTool(ImageHolderFigure,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.fileChooser_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.fileDialog_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.useFileDialog_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.workerThread_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getComponent()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.useFileDialog_FE"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.workerThread_FE"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.getFileChooser()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.getFileDialog()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.getFileChooser()_MT">
        <uses provider="org.jhotdraw.draw.tool.ImageTool.fileChooser_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.getFileDialog()_MT">
        <uses provider="org.jhotdraw.draw.tool.ImageTool.fileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.isUseFileDialog()_MT">
        <uses provider="org.jhotdraw.draw.tool.ImageTool.useFileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.ImageTool.setUseFileDialog(boolean)_MT">
        <uses provider="org.jhotdraw.draw.tool.ImageTool.fileChooser_FE"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.fileDialog_FE"/>
        <uses provider="org.jhotdraw.draw.tool.ImageTool.useFileDialog_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.callTarget(Object)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.proxySignature_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.targetAction_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.targetMethod_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.targetObject_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.invoke(Object,Method,Object[])_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.callTarget(Object)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.isCorrectMethod(Method,Object[])_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setApplicationEventHandled(Object,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.isCorrectMethod(Method,Object[])_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.proxySignature_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setAboutHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,ActionListener)_CN"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.macOSXApplication_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setApplicationEventHandled(Object,boolean)_CM">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.macOSXApplication_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setOpenApplicationHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,ActionListener)_CN"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setOpenFileHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setPreferencesHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,ActionListener)_CN"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.macOSXApplication_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setPrintFileHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setQuitHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setReOpenApplicationHandler(ActionListener)_CM">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,ActionListener)_CN"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,ActionListener)_CN">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.proxySignature_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.targetAction_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.OSXAdapter(String,Object,Method)_CN">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.proxySignature_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.targetMethod_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.targetObject_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.macOSXApplication_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.proxySignature_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.targetAction_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.targetMethod_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.targetObject_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.callTarget(Object)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.invoke(Object,Method,Object[])_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.isCorrectMethod(Method,Object[])_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setAboutHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setApplicationEventHandled(Object,boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setHandler(OSXAdapter)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setOpenApplicationHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setOpenFileHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setPreferencesHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setPrintFileHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setQuitHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXAdapter.setReOpenApplicationHandler(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.OSXPaletteHandler(OSXApplication)_CN">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.app_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.timer_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.app_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.timer_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.add(Window,View)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.addPalette(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.addWindow(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.getPalettes()_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.isFocused(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.maybeHidePalettes()_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.isFocused(Window)_MT"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.remove(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.removePalette(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.removeWindow(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.focusHandler_FE"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.windows_FE"/>
    </element>
    <element name="org.jhotdraw.app.osx.OSXPaletteHandler.showPalettes()_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.palettes_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createExportChooser(Application,View)_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.createSaveChooser(Application,View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createImportChooser(Application,View)_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.createOpenChooser(Application,View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.destroyApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.destroyView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.initApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.initView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.isAllowMultipleViewsPerURI()_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.allowMultipleViewsForURI_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.isOpenLastURIOnLaunch()_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.openLastURIOnLaunch_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setAllowMultipleViewsForURI(boolean)_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.allowMultipleViewsForURI_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setOpenLastURIOnLaunch(boolean)_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.openLastURIOnLaunch_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setViewClass(Class_?_)_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.viewClass_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setViewClassName(String)_CM">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.viewClassName_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.AbstractApplicationModel()_CN">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.allowMultipleViewsForURI_FE"/>
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.openLastURIOnLaunch_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.allowMultipleViewsForURI_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.copyright_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.COPYRIGHT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.name_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.NAME_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.openLastURIOnLaunch_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.version_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.VERSION_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.viewClass_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.viewClassName_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.VIEW_CLASS_NAME_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.VIEW_CLASS_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createExportChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createImportChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createOpenChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createOpenDirectoryChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createSaveChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.createView()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.getViewClass()_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.destroyApplication(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.destroyView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.getCopyright()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.copyright_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.getName()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.name_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.getVersion()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.version_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.getViewClass()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.viewClass_FE"/>
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.viewClassName_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.initApplication(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.initView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.isAllowMultipleViewsPerURI()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.isOpenLastURIOnLaunch()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setAllowMultipleViewsForURI(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setCopyright(String)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.copyright_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setName(String)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.name_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setOpenLastURIOnLaunch(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setVersion(String)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplicationModel.version_FE"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setViewClass(Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplicationModel.setViewClassName(String)_MT">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_CM">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.unconfigureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_CM">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.ActionUtil()_CN">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.BUTTON_GROUP_KEY_FE">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.SELECTED_KEY_FE">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.SUBMENU_KEY_FE">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.UNDO_PRESENTATION_NAME_KEY_FE">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_MT">
    </element>
    <element name="org.jhotdraw.app.action.ActionUtil.unconfigureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.ClearSelectionAction(JComponent)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.EditableComponent.clearSelection()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.ClearSelectionAction.updateEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.CopyAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.CopyAction.CopyAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.CopyAction(JComponent)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.CopyAction.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.CutAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.CutAction.CutAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.CutAction(JComponent)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.CutAction.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.DuplicateAction(JComponent)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.DuplicateAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.EditableComponent.duplicate()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.PasteAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.PasteAction.PasteAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.PasteAction(JComponent)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.actionPerformed(ActionEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.PasteAction.updateEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction()_CN">
        <uses provider="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.SelectAllAction(JComponent)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.AbstractSelectionAction.AbstractSelectionAction(JComponent)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.EditableComponent.selectAll()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.SelectAllAction.updateEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadDirectoryAction.LoadDirectoryAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.LoadFileAction.LoadFileAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadDirectoryAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadDirectoryAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadDirectoryAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenDirectoryAction.OpenDirectoryAction(Application)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.OpenFileAction.OpenFileAction(Application)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.OpenDirectoryAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenDirectoryAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.OpenDirectoryAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.TogglePaletteAction(OSXApplication,Window,String)_CN">
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.app_FE"/>
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.windowHandler_FE"/>
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.putValue(String,Object)_MT"/>
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.setPalette(Window)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.app_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.palette_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.windowHandler_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.app_FE"/>
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.palette_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.putValue(String,Object)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.TogglePaletteAction.setPalette(Window)_MT">
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.app_FE"/>
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.palette_FE"/>
        <uses provider="org.jhotdraw.app.action.window.TogglePaletteAction.windowHandler_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.PaletteColorSliderUI(JSlider)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.createUI(JComponent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.PaletteColorSliderUI(JSlider)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.getThumbIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.panelUI_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.createUI(JComponent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PalettePanelUI.panelUI_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.installDefaults(JPanel)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.isInTabbedPane(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.paint(Graphics,JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PalettePanelUI.uninstallDefaults(JPanel)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.initComponents()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.springPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowSlider_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.PaletteCMYKChooser()_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.updateRecursion_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.labels_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.springPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.updateRecursion_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.buildChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.addChangeListener(ChangeListener)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.color.CMYKNominalColorSpace.CMYKNominalColorSpace()_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInt(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PalettePanelUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.initComponents()_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.blackSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.PaletteColorSliderModel(ColorSpace)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.cyanField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.fieldFocusGained(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getDisplayName()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getLargeDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getSmallDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.getLargeDisplayIcon()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.magentaField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.setColorToModel(Color)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.updateChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.updateRecursion_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.yellowField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.initComponents()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.springPanel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.PaletteHSBChooser()_CN">
        <uses provider="org.jhotdraw.color.HSBColorSpace.HSBColorSpace()_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.PaletteColorSliderModel(ColorSpace)_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.labels_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.springPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.updatingChooser_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.buildChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.addChangeListener(ChangeListener)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInt(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PalettePanelUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.initComponents()_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.brightnessSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationSlider_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.fieldFocusGained(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getDisplayName()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getLargeDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getSmallDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.getLargeDisplayIcon()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.hueField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.saturationField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.setColorToModel(Color)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.updatingChooser_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.updateChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.updatingChooser_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.initComponents()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.springPanel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.PaletteRGBChooser()_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.PaletteColorSliderModel(ColorSpace)_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.labels_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redField_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redSlider_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.springPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.updateRecursion_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.buildChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.configureSlider(int,JSlider)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.color.ColorSliderModel.addChangeListener(ChangeListener)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInt(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PalettePanelUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.initComponents()_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.blueSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenSlider_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redField_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redSlider_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.fieldFocusGained(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getDisplayName()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getLargeDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getSmallDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.getLargeDisplayIcon()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.greenField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redFieldFocusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.getBoundedRangeModel(int)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.redField_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.setColorToModel(Color)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.updateChooser()_MT">
        <uses provider="org.jhotdraw.color.ColorSliderModel.setColor(Color)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.ccModel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.updateRecursion_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.addPropertyChangeListener(PropertyChangeListener)_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.addPropertyChangeListener(String,PropertyChangeListener)_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.cancel()_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.cancelable_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.canceled_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.doCancel_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,boolean,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.close()_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.closed_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,boolean,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.getNote()_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.note_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isCanceled()_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.canceled_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isClosed()_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.closed_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.removePropertyChangeListener(PropertyChangeListener)_CM">
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.getTarget()_CM"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setCancelable(boolean)_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.cancelable_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,boolean,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setDoCancel(Runnable)_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.doCancel_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setNote(String)_CM">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.note_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,Object,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String)_CN">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,boolean)_CN">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int)_CN">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.DefaultActivityModel(Object,String,String,int,int,boolean)_CN">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.cancelable_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.isIndeterminate_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.note_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.owner_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.title_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.cancelable_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.canceled_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.closed_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.doCancel_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.error_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.formatter_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isIndeterminate_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.note_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.owner_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.title_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.warning_FE">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.addPropertyChangeListener(String,PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.cancel()_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.close()_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,boolean,boolean)_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,int,int)_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,Object,Object)_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.getError()_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.error_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.getNote()_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.getOwner()_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.owner_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.getTitle()_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.title_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.getWarning()_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.warning_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isCancelable()_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.cancelable_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isCanceled()_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isClosed()_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.isIndeterminate()_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.isIndeterminate_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.printf(String,Object[])_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.setNote(String)_CM"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.formatter_FE"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setCancelable(boolean)_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setDoCancel(Runnable)_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setError(String)_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.error_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,Object,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setIndeterminate(boolean)_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.isIndeterminate_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,boolean,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setNote(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.DefaultActivityModel.setWarning(String)_MT">
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.warning_FE"/>
        <uses provider="org.jhotdraw.gui.DefaultActivityModel.firePropertyChange(String,Object,Object)_MT"/>
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createExportChooser(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createImportChooser(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createOpenChooser(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createSaveChooser(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createView()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.destroyApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.destroyView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getCopyright()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getName()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getVersion()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initView(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.isAllowMultipleViewsPerURI()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.isOpenLastURIOnLaunch()_CM">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createExportChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createImportChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createOpenChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createOpenDirectoryChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createSaveChooser(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.createView()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.destroyApplication(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.destroyView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getCopyright()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getName()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initApplication(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.initView(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.isAllowMultipleViewsPerURI()_MT">
    </element>
    <element name="org.jhotdraw.app.ApplicationModel.isOpenLastURIOnLaunch()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.applicationListener_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.createApplicationListener()_MT"/>
        <uses provider="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.isEnabled()_CM">
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.setEnabled(boolean)_CM">
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.applicationListener_FE"/>
        <uses provider="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.updateApplicationEnabled()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.updateApplicationEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.app_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.applicationListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.createApplicationListener()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.dispose()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.getApplication()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.installApplicationListeners(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.uninstallApplicationListeners(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractApplicationAction.updateApplicationEnabled()_MT">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.addPropertyChangeListener(String,PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(String,PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.propertySupport_FE">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.addPropertyChangeListener(PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.addPropertyChangeListener(String,PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.clone()_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.firePropertyChange(String,boolean,boolean)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.firePropertyChange(String,int,int)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.firePropertyChange(String,Object,Object)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.getPropertyChangeListeners()_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.getTarget()_CM"/>
    </element>
    <element name="org.jhotdraw.beans.AbstractBean.removePropertyChangeListener(String,PropertyChangeListener)_MT">
        <uses provider="org.jhotdraw.beans.AbstractBean.propertySupport_FE"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.getTarget()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.applyAttributesTo(Figure)_CM">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawFill(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawStroke(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.get(AttributeKey_T_)_CM">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.set(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.AbstractAttributedCompositeFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.forbiddenAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.applyAttributesTo(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawChildren(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawFigure(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawFill(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawStroke(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawChildren(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawText(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.drawText(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.get(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributeKey(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributes()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributesRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributes()_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getFigureDrawBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getStroke()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getStrokeMiterLimitFactor()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.hasAttribute(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.isAttributeEnabled(AttributeKey_?_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.readAttributes(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.readAttributes(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.forbiddenAttributes_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.getAttributeKey(String)_MT"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT"/>
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getTagName()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.removeAttribute(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.restoreAttributesTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.Figure.restoreAttributesTo(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.setAttributeEnabled(AttributeKey_?_,boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.setAttributeOnChildren(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.setAttributes(Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.writeAttributes(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedCompositeFigure.writeAttributes(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.forbiddenAttributes_FE"/>
        <uses provider="org.jhotdraw.draw.AttributeKey.getKey()_MT"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.getPrototype()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction$EventHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction$EventHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addFigureSelectionListener(FigureSelectionListener)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeFigureSelectionListener(FigureSelectionListener)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction$EventHandler.selectionChanged(FigureSelectionEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction$EventHandler.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.isUpdatEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.registerEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addFigureSelectionListener(FigureSelectionListener)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removeFigureSelectionListener(FigureSelectionListener)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.setUpdateEnabledState(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.unregisterEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.removeFigureSelectionListener(FigureSelectionListener)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.updateEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.AbstractSelectedAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.activeView_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.dispose()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.fireUndoableEditHappened(UndoableEdit)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.isUpdatEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.registerEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.setEditor(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.setUpdateEnabledState(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.unregisterEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractSelectedAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.applyAttributesTo(Map_AttributeKey_?_,Object_,Set_Figure_)_CM">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey_T_,T)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey_T_,T,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey_T_,T,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey_T_,T,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,AttributeKey_T_,T,String,Icon,Action)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.AttributeAction(DrawingEditor,Map_AttributeKey_?_,Object_,String,Icon)_CN">
        <uses provider="org.jhotdraw.draw.action.AttributeAction.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.action.AttributeAction.updateEnabledState()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.attributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AttributeAction.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.applyAttributesTo(Map_AttributeKey_?_,Object_,Set_Figure_)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.AttributeToggler(DrawingEditor,AttributeKey_T_,T,T)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.AttributeToggler(DrawingEditor,AttributeKey_T_,T,T,Action)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.compatibleTextAction_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.value1_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.value2_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.compatibleTextAction_FE"/>
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.key_FE"/>
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.value1_FE"/>
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.value2_FE"/>
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.getView()_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.getEditor()_MT">
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AttributeToggler.getView()_MT">
        <uses provider="org.jhotdraw.draw.action.AttributeToggler.editor_FE"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetFactory.NetFactory()_CN">
        <uses provider="org.jhotdraw.samples.net.NetFactory.classTagArray_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.DefaultDOMFactory()_CN"/>
        <uses provider="org.jhotdraw.samples.net.NetFactory.enumTagArray_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.NetFactory.classTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.net.NetFactory.enumTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.NodeFigure()_CN">
        <uses provider="org.jhotdraw.draw.RectangleFigure.RectangleFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.TextFigure.TextFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.createConnectors()_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.connectors_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.east_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.north_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.south_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.west_FE">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.createConnectors()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.createConnectors()_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.connectors_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.connectors_FE"/>
        <uses provider="org.jhotdraw.draw.handle.ConnectorHandle.ConnectorHandle(Connector,ConnectionFigure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.findCompatibleConnector(Connector,boolean)_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.connectors_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.getConnectors(ConnectionFigure)_MT">
        <uses provider="org.jhotdraw.samples.net.figures.NodeFigure.connectors_FE"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.getFigureDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.TextFigure.getFigureDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.getLayer()_MT">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.readDecorator(DOMInput)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.net.figures.NodeFigure.writeDecorator(DOMOutput)_MT">
    </element>
    <element name="org.jhotdraw.samples.pert.PertFactory.PertFactory()_CN">
        <uses provider="org.jhotdraw.samples.pert.PertFactory.classTagArray_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.DefaultDOMFactory()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.pert.PertFactory.classTagArray_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.ConnectingFiguresSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.EditorSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample.LabeledLineConnectionFigureSample()_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.LabeledLineConnectionFigureSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.drawDecorator(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.drawFigure(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.drawDecorator(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.Figure.draw(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.updateDecoratorBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.drawFigure(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.draw(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.figureContains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getDecorator()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getFigureDrawingArea()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.updateDecoratorBounds()_MT"/>
        <uses provider="org.jhotdraw.draw.Figure.getDrawingArea()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.getFigureDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.getDrawingArea()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.readDecorator(DOMInput)_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.read(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.readDecorator(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.setDecorator(Figure)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.updateDecoratorBounds()_MT">
        <uses provider="org.jhotdraw.geom.Insets2D$Double.bottom_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.left_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.right_FE"/>
        <uses provider="org.jhotdraw.geom.Insets2D$Double.top_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.writeDecorator(DOMOutput)_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.write(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.writeDecorator(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedDecoratedFigure.decorator_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.applyAttributesTo(Figure)_CM">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.drawFill(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.drawStroke(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.get(AttributeKey_T_)_CM">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.set(AttributeKey_T_,T)_CM">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractFigure.AbstractFigure()_CN"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.forbiddenAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.applyAttributesTo(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.drawFill(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.drawStroke(Graphics2D)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.drawText(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.drawStroke(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.drawText(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.get(AttributeKey_T_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.getAttributeKey(String)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.getAttributes()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.getAttributesRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.getAttributes()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.getDrawingArea()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.getStroke()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.getStrokeMiterLimitFactor()_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.hasAttribute(AttributeKey_?_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.isAttributeEnabled(AttributeKey_?_)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.readAttributes(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.readAttributes(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.isAssignable(Object)_MT"/>
        <uses provider="org.jhotdraw.xml.DOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getElementCount(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getTagName()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.openElement(int)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMInput.readObject()_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.forbiddenAttributes_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.getAttributeKey(String)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.removeAttribute(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getDefaultValue()_MT"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.restoreAttributesTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.setAttributeEnabled(AttributeKey_?_,boolean)_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.setAttributes(Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.writeAttributes(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.AbstractAttributedFigure.writeAttributes(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getKey()_MT"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.getPrototype()_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.openElement(String)_CM"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.writeObject(Object)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.attributes_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.forbiddenAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Worker.construct()_CM">
    </element>
    <element name="org.jhotdraw.gui.Worker.done(T)_CM">
    </element>
    <element name="org.jhotdraw.gui.Worker.failed(Throwable)_CM">
    </element>
    <element name="org.jhotdraw.gui.Worker.finished()_CM">
    </element>
    <element name="org.jhotdraw.gui.Worker.getError()_CM">
        <uses provider="org.jhotdraw.gui.Worker.error_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Worker.getValue()_CM">
        <uses provider="org.jhotdraw.gui.Worker.value_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Worker.run()_CM">
        <uses provider="org.jhotdraw.gui.Worker.construct()_CM"/>
        <uses provider="org.jhotdraw.gui.Worker.setError(Throwable)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.Worker.setError(Throwable)_CM">
        <uses provider="org.jhotdraw.gui.Worker.error_FE"/>
    </element>
    <element name="org.jhotdraw.gui.Worker.setValue(T)_CM">
    </element>
    <element name="org.jhotdraw.gui.Worker.start()_CM">
    </element>
    <element name="org.jhotdraw.gui.Worker.error_FE">
    </element>
    <element name="org.jhotdraw.gui.Worker.value_FE">
    </element>
    <element name="org.jhotdraw.gui.Worker.construct()_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.done(T)_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.failed(Throwable)_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.finished()_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.getError()_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.getValue()_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.run()_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.setError(Throwable)_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.setValue(T)_MT">
    </element>
    <element name="org.jhotdraw.gui.Worker.start()_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule$SelectorType.ALL_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule$SelectorType.CLASS_ATTRIBUTE_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule$SelectorType.ELEMENT_NAME_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule$SelectorType.ID_ATTRIBUTE_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.CSSRule(String,Map_String,String_)_CN">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.CSSRule(String,String)_CN">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.CSSRule(String,String,String)_CN">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.properties_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.selector_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.type_FE">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.apply(Element)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.apply(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.matches(Element)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.matches(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.setSelector(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.css.CSSRule.toString()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.MultiEditorSample.createDrawing()_CM">
        <uses provider="org.jhotdraw.draw.DefaultDrawing.DefaultDrawing()_CN"/>
        <uses provider="org.jhotdraw.draw.io.SerializationInputOutputFormat.SerializationInputOutputFormat()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.mini.MultiEditorSample.createDrawing()_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.MultiEditorSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.Application.add(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addPalette(Window)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addRecentURI(URI)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.addWindow(Window,View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.clearRecentURIs()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.configure(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createEditMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createFileMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createHelpMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createView()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createViewMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.createWindowMenu(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.destroy()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.dispose(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getActionMap(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getActiveView()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getCopyright()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getExportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getImportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getModel()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getName()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getOpenChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getRecentURIs()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getSaveChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getVersion()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.getViews()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.hide(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.init()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.isEnabled()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.isSharingToolsAmongViews()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.launch(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.Application.remove(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.removePalette(Window)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.removeWindow(Window)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.setEnabled(boolean)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.setModel(ApplicationModel)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.show(View)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.start(List_URI_)_CM">
    </element>
    <element name="org.jhotdraw.app.Application.stop()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.views()_CM">
    </element>
    <element name="org.jhotdraw.app.Application.ACTIVE_VIEW_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.Application.RECENT_URIS_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.Application.add(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.addPalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.addRecentURI(URI)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.addWindow(Window,View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.clearRecentURIs()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createEditMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createFileMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createHelpMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createView()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createViewMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.createWindowMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.destroy()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.dispose(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getActionMap(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getActiveView()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getCopyright()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getExportChooser(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getImportChooser(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getModel()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getName()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getOpenChooser(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getRecentURIs()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getSaveChooser(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getVersion()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.getViews()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.hide(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.init()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.isSharingToolsAmongViews()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.launch(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.Application.remove(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removePalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.removeWindow(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.setModel(ApplicationModel)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.show(View)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.start(List_URI_)_MT">
    </element>
    <element name="org.jhotdraw.app.Application.stop()_MT">
    </element>
    <element name="org.jhotdraw.app.Application.views()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.getFillPaint(Figure)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.getStrokePaint(Figure)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.ODGAttributeKeys()_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.FILL_GRADIENT_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.FILL_OPACITY_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.FILL_STYLE_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.NAME_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.OPACITY_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.STROKE_GRADIENT_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.STROKE_OPACITY_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.STROKE_STYLE_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.getFillPaint(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.getStroke(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.getStrokePaint(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.ODGDrawing()_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.description_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.title_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.getDescription()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawing.description_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.getTitle()_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawing.title_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.setDescription(String)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawing.description_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.ODGDrawing.setTitle(String)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGDrawing.title_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.flattenTransform()_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure()_CN">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure(boolean)_CN">
        <uses provider="org.jhotdraw.draw.BezierFigure.BezierFigure(boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.cachedDrawingArea_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.createHandles(ODGPathFigure,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.flattenTransform()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.cachedDrawingArea_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.draw.BezierFigure.invalidate()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.cachedDrawingArea_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGBezierFigure.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.BezierFigure.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.drawFill(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.isEmpty()_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ODGEllipseFigure()_CN">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ODGEllipseFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ODGEllipseFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.ODGAttributedFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.cachedTransformedShape_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getHeight()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getWidth()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getX()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.getY()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.cachedTransformedShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.ellipse_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGEllipseFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.ODGGroupFigure()_CN">
        <uses provider="org.jhotdraw.draw.GroupFigure.GroupFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.attributes_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.clone()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.OPACITY_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.get(AttributeKey_T_)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.getAttributes()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGGroupFigure.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.setAttributes(Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGGroupFigure.toString()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.ODGPathOutlineHandle(ODGPathFigure)_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.HANDLE_FILL_COLOR_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.HANDLE_STROKE_COLOR_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getDrawingArea()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.contains(Point)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawingToViewTransform()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getPath()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.getOwner()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.getOwner()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.trackEnd(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.trackStart(Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.trackStep(Point,Point,int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.clone()_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.createHandles(int)_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.ODGRectRadiusHandle(Figure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.drawFill(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getX()_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.transform(AffineTransform)_CM">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidateTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure()_CN">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure(double,double,double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.ODGRectFigure(double,double,double,double,double,double)_CN">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.ODGAttributedFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedHitShape_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedTransformedShape_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.clone()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArc()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcHeight()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcWidth()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getHeight()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getHitShape()_MT">
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getTransformedShape()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedTransformedShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getWidth()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getX()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.getY()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidateTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidateTransformedShape()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedHitShape_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.cachedTransformedShape_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.isEmpty()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.invalidateTransformedShape()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.setArc(Dimension2DDouble)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.setArc(double,double)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.family_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.name_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.parentName_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.read(File)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.read(InputStream)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.read(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readAutomaticStylesElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDefaultStyleElement(IXMLElement,HashMap_String,Style_)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.family_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.name_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.parentName_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDocumentContentElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDocumentStylesElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDrawingPagePropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readGraphicPropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readLayerSetElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readListStyleElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMarkerElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterPageElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterStylesElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readPageLayoutElement(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readParagraphPropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStyleElement(IXMLElement,HashMap_String,Style_)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.family_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.name_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.parentName_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStylesChildren(IXMLElement,HashMap_String,Style_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStylesElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readTextPropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.toColor(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.toLength(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.ODGStylesReader()_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.automaticStyles_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.commonStyles_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.masterStyles_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.getAttributes(String,String)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGStylesReader$Style.parentName_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.read(File)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.read(InputStream)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.read(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readAutomaticStylesElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDefaultStyleElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDocumentContentElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDocumentStylesElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readDrawingPagePropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readGraphicPropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readLayerSetElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readListStyleElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMarkerElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterPageElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readMasterStylesElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readPageLayoutElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readParagraphPropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStyleElement(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStylesChildren(IXMLElement,HashMap_String,Style_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readStylesElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.readTextPropertiesElement(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.reset()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.toColor(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGStylesReader.toLength(String)_MT">
    </element>
    <element name="org.jhotdraw.app.PrintableView.createPageable()_MT">
    </element>
    <element name="org.jhotdraw.app.View.activate()_CM">
    </element>
    <element name="org.jhotdraw.app.View.addDisposable(Disposable)_CM">
    </element>
    <element name="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.app.View.canSaveTo(URI)_CM">
    </element>
    <element name="org.jhotdraw.app.View.clear()_CM">
    </element>
    <element name="org.jhotdraw.app.View.deactivate()_CM">
    </element>
    <element name="org.jhotdraw.app.View.dispose()_CM">
    </element>
    <element name="org.jhotdraw.app.View.execute(Runnable)_CM">
    </element>
    <element name="org.jhotdraw.app.View.getActionMap()_CM">
    </element>
    <element name="org.jhotdraw.app.View.getApplication()_CM">
    </element>
    <element name="org.jhotdraw.app.View.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.app.View.getMultipleOpenId()_CM">
    </element>
    <element name="org.jhotdraw.app.View.getTitle()_CM">
    </element>
    <element name="org.jhotdraw.app.View.getURI()_CM">
    </element>
    <element name="org.jhotdraw.app.View.hasUnsavedChanges()_CM">
    </element>
    <element name="org.jhotdraw.app.View.init()_CM">
    </element>
    <element name="org.jhotdraw.app.View.isEmpty()_CM">
    </element>
    <element name="org.jhotdraw.app.View.isEnabled()_CM">
    </element>
    <element name="org.jhotdraw.app.View.isShowing()_CM">
    </element>
    <element name="org.jhotdraw.app.View.markChangesAsSaved()_CM">
    </element>
    <element name="org.jhotdraw.app.View.read(URI,URIChooser)_CM">
    </element>
    <element name="org.jhotdraw.app.View.removeDisposable(Disposable)_CM">
    </element>
    <element name="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setActionMap(ActionMap)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setApplication(Application)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setEnabled(boolean)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setMultipleOpenId(int)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setShowing(boolean)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setTitle(String)_CM">
    </element>
    <element name="org.jhotdraw.app.View.setURI(URI)_CM">
    </element>
    <element name="org.jhotdraw.app.View.start()_CM">
    </element>
    <element name="org.jhotdraw.app.View.stop()_CM">
    </element>
    <element name="org.jhotdraw.app.View.write(URI,URIChooser)_CM">
    </element>
    <element name="org.jhotdraw.app.View.APPLICATION_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.ENABLED_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.HAS_UNSAVED_CHANGES_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.MULTIPLE_OPEN_ID_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.SHOWING_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.TITLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.URI_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.View.activate()_MT">
    </element>
    <element name="org.jhotdraw.app.View.addDisposable(Disposable)_MT">
    </element>
    <element name="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.app.View.canSaveTo(URI)_MT">
    </element>
    <element name="org.jhotdraw.app.View.clear()_MT">
    </element>
    <element name="org.jhotdraw.app.View.deactivate()_MT">
    </element>
    <element name="org.jhotdraw.app.View.dispose()_MT">
    </element>
    <element name="org.jhotdraw.app.View.execute(Runnable)_MT">
    </element>
    <element name="org.jhotdraw.app.View.getActionMap()_MT">
    </element>
    <element name="org.jhotdraw.app.View.getApplication()_MT">
    </element>
    <element name="org.jhotdraw.app.View.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.app.View.getMultipleOpenId()_MT">
    </element>
    <element name="org.jhotdraw.app.View.getTitle()_MT">
    </element>
    <element name="org.jhotdraw.app.View.getURI()_MT">
    </element>
    <element name="org.jhotdraw.app.View.hasUnsavedChanges()_MT">
    </element>
    <element name="org.jhotdraw.app.View.init()_MT">
    </element>
    <element name="org.jhotdraw.app.View.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.app.View.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.View.isShowing()_MT">
    </element>
    <element name="org.jhotdraw.app.View.markChangesAsSaved()_MT">
    </element>
    <element name="org.jhotdraw.app.View.read(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.app.View.removeDisposable(Disposable)_MT">
    </element>
    <element name="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setActionMap(ActionMap)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setApplication(Application)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setMultipleOpenId(int)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setShowing(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setTitle(String)_MT">
    </element>
    <element name="org.jhotdraw.app.View.setURI(URI)_MT">
    </element>
    <element name="org.jhotdraw.app.View.start()_MT">
    </element>
    <element name="org.jhotdraw.app.View.stop()_MT">
    </element>
    <element name="org.jhotdraw.app.View.write(URI,URIChooser)_MT">
    </element>
    <element name="org.jhotdraw.color.ColorSliderUI$CSUIPropertyChangeHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.componentChanged(int)_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.markAsDirty()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.needsGeneration()_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.setColorComponentIndex(int)_MT"/>
        <uses provider="org.jhotdraw.color.ColorTrackImageProducer.setColorSliderModel(ColorSliderModel)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey_T_,T)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey_T_,T,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey_T_,T,String)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey_T_,T,String,Icon)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,AttributeKey_T_,T,String,Icon,Action)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.DrawingAttributeAction(DrawingEditor,Map_AttributeKey_?_,Object_,String,Icon)_CN">
        <uses provider="org.jhotdraw.draw.action.DrawingAttributeAction.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.attributes_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingAttributeAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
        <uses provider="org.jhotdraw.draw.action.DrawingAttributeAction.attributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.FontChooserHandler(DrawingEditor,AttributeKey_Font_,JFontChooser,JPopupMenu)_CN">
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.fontChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.key_FE"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.popupMenu_FE"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.addActionListener(ActionListener)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.fontChooser_FE">
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.isUpdating_FE">
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.popupMenu_FE">
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.popupMenu_FE"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.applySelectedFontToFigures()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.applySelectedFontToFigures()_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getAttributesRestoreData()_CM"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.fontChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.key_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.getSelectedFont()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.applySelectedFontToFigures()_MT"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.isUpdating_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.FontChooserHandler.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.TextHolderFigure.getFont()_CM"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.fontChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.popupMenu_FE"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.setSelectedFont(Font)_CM"/>
        <uses provider="org.jhotdraw.draw.action.FontChooserHandler.isUpdating_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.FileIconsSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.samples.mini.CreationToolSample.main(String[])_MT">
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.getTarget()_CM">
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.weakRef_FE"/>
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.removeFromSource(PropertyChangeEvent)_CM">
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN">
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.weakRef_FE"/>
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.weakRef_FE">
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.getTarget()_MT">
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.removeFromSource(PropertyChangeEvent)_CM"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.weakRef_FE"/>
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.removeFromSource(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.beans.WeakPropertyChangeListener.toString()_MT">
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.weakRef_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction$EventHandler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.fireUndoableEditHappened(UndoableEdit)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.isUpdatEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.registerEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.setUpdateEnabledState(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.unregisterEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.AbstractDrawingEditorAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.fireUndoableEditHappened(UndoableEdit)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.isUpdatEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.registerEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.setEditor(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.setUpdateEnabledState(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.unregisterEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingEditorAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction$EventHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction$EventHandler.toString()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.dispose()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.isUpdatEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addPropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.setUpdateEnabledState(boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.unregisterEventHandler()_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.removePropertyChangeListener(PropertyChangeListener)_MT"/>
        <uses provider="org.jhotdraw.draw.DrawingView.removePropertyChangeListener(PropertyChangeListener)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateViewState()_CM">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingEditor)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.AbstractDrawingViewAction(DrawingView)_CN">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.activeView_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.eventHandler_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.specificView_FE">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.dispose()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.fireUndoableEditHappened(UndoableEdit)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.getEditor()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.isUpdatEnabledState()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.registerEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.setEditor(DrawingEditor)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.setUpdateEnabledState(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.unregisterEventHandler()_MT">
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.action.AbstractDrawingViewAction.updateViewState()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.addActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonMnemonic()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonText()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogTitle()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogType()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getSelectedURI()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.removeActionListener(ActionListener)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.rescanCurrentDirectory()_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonMnemonic(int)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonText(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogTitle(String)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogType(int)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showDialog(Component,String)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showOpenDialog(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showSaveDialog(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.APPROVE_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.APPROVE_SELECTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.CANCEL_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.CANCEL_SELECTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.CUSTOM_DIALOG_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.DIALOG_TITLE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.ERROR_OPTION_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.OPEN_DIALOG_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.SAVE_DIALOG_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.SELECTED_URI_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.addActionListener(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonMnemonic()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getApproveButtonText()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogTitle()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getDialogType()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.getSelectedURI()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.removeActionListener(ActionListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.rescanCurrentDirectory()_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonMnemonic(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setApproveButtonText(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogTitle(String)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setDialogType(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showDialog(Component,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showOpenDialog(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.URIChooser.showSaveDialog(Component)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.AbstractSaveUnsavedChangesAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.oldFocusOwner_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JOptionPane,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.show(View)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.doIt(View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.doIt(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createSaveChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.saveView(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.getChooser(View)_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.saveViewToURI(View,URI,URIChooser)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.saveViewToURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.AboutAction.AboutAction(Application)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.AboutAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.AboutAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.AboutAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getCopyright()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getName()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getVersion()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.ExitAction(Application)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.oldFocusOwner_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JOptionPane,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.Application.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.doExit()_MT"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.reviewChanges()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.doExit()_MT">
        <uses provider="org.jhotdraw.app.Application.destroy()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createSaveChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.reviewChanges()_MT">
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(JOptionPane,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.getTitle()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.reviewNext()_MT">
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.doExit()_MT"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.reviewChanges()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.saveChanges()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.getChooser(View)_MT"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.saveToFile(URI,URIChooser)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.saveChangesAndReviewNext()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.showSaveSheet(URIChooser,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.getChooser(View)_MT"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.saveToFileAndReviewNext(URI,URIChooser)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.saveToFile(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.app.ExitAction.saveToFileAndReviewNext(URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.unsavedView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.PrintApplicationFileAction(Application)_CN">
        <uses provider="org.jhotdraw.app.action.file.PrintFileAction.PrintFileAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.entries_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.fileChooser_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.app.PrintApplicationFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearFileAction.ClearFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.AbstractSaveUnsavedChangesAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ClearFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ClearFileAction.doIt(View)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.isEnabled()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.printQuartz(PrintableView)_CM">
        <uses provider="org.jhotdraw.app.PrintableView.createPageable()_MT"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.PrintFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.file.PrintFileAction.printQuartz(PrintableView)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.PrintFileAction.printJava2D(PrintableView)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.printJava2D(PrintableView)_MT">
        <uses provider="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.app.PrintableView.createPageable()_MT"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.printJava2DAlternative(PrintableView)_MT">
        <uses provider="org.jhotdraw.gui.JSheet.showMessageSheet(Component,Object)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.PrintableView.createPageable()_MT"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.PrintFileAction.printQuartz(PrintableView)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$DropFileTransferHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$DropFileTransferHandler.canImport(JComponent,DataFlavor[])_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$DropFileTransferHandler.importData(JComponent,Transferable)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.MDIApplication$WindowMenuHandler(JMenu,View)_CN">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.view_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.windowMenu_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.app.MDIApplication$WindowMenuHandler.updateWindowMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication$WindowMenuHandler.updateWindowMenu()_MT">
        <uses provider="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_CM"/>
        <uses provider="org.jhotdraw.app.MDIApplication$WindowMenuHandler.windowMenu_FE"/>
        <uses provider="org.jhotdraw.app.MDIApplication$WindowMenuHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createMenuBar(View)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.updateViewTitle(View,JInternalFrame)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.getTitle()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.setTitle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.wrapDesktopPane(Component,LinkedList_Action_)_CM">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installToolBarPrefsHandler(Preferences,String,JToolBar)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createToolBars(Application,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.ToggleToolBarAction.ToggleToolBarAction(JToolBar,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.MDIApplication()_CN">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.desktopPane_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.parentFrame_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.prefs_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.scrollPane_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.toolBarActions_FE">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createEditMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createFileMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createHelpMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createMenuBar(View)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createModelActionMap(ApplicationModel)_MT">
        <uses provider="org.jhotdraw.app.action.app.AboutAction.AboutAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.ExitAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.ClearRecentFilesMenuAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.MaximizeWindowAction.MaximizeWindowAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.window.MinimizeWindowAction.MinimizeWindowAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createViewActionMap(View)_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.FocusWindowAction(View)_CN"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createViewMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.createWindowMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.hide(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isShowing()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.init()_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.initLookAndFeel()_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.isSharingToolsAmongViews()_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.launch(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.show(View)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installInternalFramePrefsHandler(Preferences,String,JInternalFrame,JDesktopPane)_CM"/>
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isShowing()_CM"/>
        <uses provider="org.jhotdraw.app.View.setShowing(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.start()_CM"/>
    </element>
    <element name="org.jhotdraw.app.MDIApplication.updateViewTitle(View,JInternalFrame)_MT">
    </element>
    <element name="org.jhotdraw.app.MDIApplication.wrapDesktopPane(Component,LinkedList_Action_)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.OSXApplication$FrameHandler(JFrame,View)_CN">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.frame_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.dispose()_MT">
        <uses provider="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.frame_FE"/>
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.frame_FE"/>
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.windowClosed(WindowEvent)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.windowClosing(WindowEvent)_MT">
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.windowDeiconified(WindowEvent)_MT">
        <uses provider="org.jhotdraw.app.View.start()_CM"/>
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.windowGainedFocus(WindowEvent)_MT">
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$FrameHandler.windowIconified(WindowEvent)_MT">
        <uses provider="org.jhotdraw.app.View.stop()_CM"/>
        <uses provider="org.jhotdraw.app.OSXApplication$FrameHandler.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$QuitHandler.handleQuit()_CM">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$QuitHandler.handleQuit()_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.OSXApplication$WindowMenuHandler(JMenu,View)_CN">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.view_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.windowMenu_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.dispose()_MT">
        <uses provider="org.jhotdraw.app.OSXApplication$WindowMenuHandler.view_FE"/>
        <uses provider="org.jhotdraw.app.OSXApplication$WindowMenuHandler.windowMenu_FE"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.app.OSXApplication$WindowMenuHandler.updateWindowMenu()_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication$WindowMenuHandler.updateWindowMenu()_MT">
        <uses provider="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_CM"/>
        <uses provider="org.jhotdraw.app.OSXApplication$WindowMenuHandler.view_FE"/>
        <uses provider="org.jhotdraw.app.OSXApplication$WindowMenuHandler.windowMenu_FE"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createMenuBar(View)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.getComponent()_CM">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.getTitle()_CM"/>
        <uses provider="org.jhotdraw.app.View.setTitle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.OSXApplication()_CN">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.invisibleFrame_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.paletteActions_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.paletteHandler_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.prefs_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.addPalette(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.addPalette(Window)_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.addWindow(Window,View)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.add(Window,View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createEditMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createFileMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createHelpMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createMenuBar(View)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createModelActionMap(ApplicationModel)_MT">
        <uses provider="org.jhotdraw.app.action.app.AboutAction.AboutAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.app.ExitAction.ExitAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.app.OpenApplicationFileAction.OpenApplicationFileAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.ClearRecentFilesMenuAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.MaximizeWindowAction.MaximizeWindowAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.window.MinimizeWindowAction.MinimizeWindowAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createViewActionMap(View)_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.FocusWindowAction(View)_CN"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.MaximizeWindowAction.MaximizeWindowAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.window.MinimizeWindowAction.MinimizeWindowAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createViewMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.createWindowMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.dispose(View)_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.dispose()_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.getComponent()_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.hide(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isShowing()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.init()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.putPropertyNameModifier(String,String[])_MT"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.OSXPaletteHandler(OSXApplication)_CN"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.initLookAndFeel()_MT">
        <uses provider="org.jhotdraw.util.Methods.invokeStatic(String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.initPalettes(LinkedList_Action_)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.initScreenMenuBar()_MT">
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setAboutHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setOpenApplicationHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setOpenFileHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setPreferencesHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setPrintFileHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setQuitHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXAdapter.setReOpenApplicationHandler(ActionListener)_CM"/>
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.add(Window,View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.isSharingToolsAmongViews()_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.launch(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.removePalette(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.removePalette(Window)_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.removeWindow(Window)_MT">
        <uses provider="org.jhotdraw.app.osx.OSXPaletteHandler.remove(Window)_MT"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.setScreenMenuBar(JMenuBar)_MT">
    </element>
    <element name="org.jhotdraw.app.OSXApplication.show(View)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isShowing()_CM"/>
        <uses provider="org.jhotdraw.app.View.setShowing(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.start()_CM"/>
    </element>
    <element name="org.jhotdraw.app.OSXApplication.updateViewTitle(View,JFrame)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createMenuBar(View)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createViewMenu(View)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createEditMenu(View)_MT"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createFileMenu(View)_MT"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createHelpMenu(View)_MT"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createWindowMenu(View)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createViewMenu(View)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.action.ActionUtil.configureJCheckBoxMenuItem(JCheckBoxMenuItem,Action)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.updateViewTitle(View,JFrame)_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.getTitle()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.setTitle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.wrapViewComponent(View)_CM">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installToolBarPrefsHandler(Preferences,String,JToolBar)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createToolBars(Application,View)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.SDIApplication()_CN">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.prefs_FE">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createEditMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createFileMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createHelpMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createMenuBar(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createModelActionMap(ApplicationModel)_MT">
        <uses provider="org.jhotdraw.app.action.app.AboutAction.AboutAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.ClearRecentFilesMenuAction.ClearRecentFilesMenuAction(Application)_CN"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createViewActionMap(View)_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.createActionMap(Application,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.CloseFileAction.CloseFileAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createViewMenu(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.createWindowMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.getMenuBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.dispose(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.getComponent()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.hide(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isShowing()_CM"/>
        <uses provider="org.jhotdraw.app.View.setShowing(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.init()_MT">
        <uses provider="org.jhotdraw.app.SDIApplication.prefs_FE"/>
        <uses provider="org.jhotdraw.app.SDIApplication.initLookAndFeel()_MT"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createModelActionMap(ApplicationModel)_MT"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.initLookAndFeel()_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.isSharingToolsAmongViews()_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.launch(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.remove(View)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.show(View)_MT">
        <uses provider="org.jhotdraw.util.prefs.PreferencesUtil.installFramePrefsHandler(Preferences,String,Window)_CM"/>
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isShowing()_CM"/>
        <uses provider="org.jhotdraw.app.View.setShowing(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.start()_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.createMenuBar(View)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.updateViewTitle(View,JFrame)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.wrapViewComponent(View)_CM"/>
        <uses provider="org.jhotdraw.app.SDIApplication.prefs_FE"/>
    </element>
    <element name="org.jhotdraw.app.SDIApplication.updateViewTitle(View,JFrame)_MT">
    </element>
    <element name="org.jhotdraw.app.SDIApplication.wrapViewComponent(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.FocusWindowAction(View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.ppc_FE"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.ppc_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.view_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.getRootPaneContainer()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.dispose()_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.setView(View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getFrame()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getRootPaneContainer()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getTitle()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
        <uses provider="org.jhotdraw.app.Application.getName()_CM"/>
        <uses provider="org.jhotdraw.app.View.getApplication()_CM"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.getValue(String)_MT">
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.getTitle()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.FocusWindowAction.setView(View)_MT">
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.ppc_FE"/>
        <uses provider="org.jhotdraw.app.action.window.FocusWindowAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.window.MaximizeWindowAction.MaximizeWindowAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.window.MaximizeWindowAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.MaximizeWindowAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.MaximizeWindowAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.window.MaximizeWindowAction.getFrame()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.MaximizeWindowAction.getFrame()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.window.MinimizeWindowAction.MinimizeWindowAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.window.MinimizeWindowAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.MinimizeWindowAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.window.MinimizeWindowAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.window.MinimizeWindowAction.getFrame()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.window.MinimizeWindowAction.getFrame()_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.fromCIEXYZ(float[],float[])_CM">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Xr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Yr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Zr_FE"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.toCIEXYZ(float[],float[])_CM">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Xr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Yr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Zr_FE"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.CIELCHabColorSpace()_CN">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.D65_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Xr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Yr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.Zr_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.isClampRGB_FE"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.D65_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.eps_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.isClampRGB_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.k_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.sRGB_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.Xr_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.Yr_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.Zr_FE">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.fromCIEXYZ(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.fromRGB(float[],float[])_MT">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.fromCIEXYZ(float[],float[])_CM"/>
        <uses provider="org.jhotdraw.color.ColorUtil.RGBtoCIEXYZ(float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.getMaxValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.getMinValue(int)_MT">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.getName()_MT">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.getName(int)_MT">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.isClampRGBValues()_MT">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.isClampRGB_FE"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.main(String[])_MT">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.CIELCHabColorSpace()_CN"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.setClampRGBValues(boolean)_MT">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.isClampRGB_FE"/>
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.toCIEXYZ(float[],float[])_MT">
    </element>
    <element name="org.jhotdraw.color.CIELCHabColorSpace.toRGB(float[],float[])_MT">
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.isClampRGB_FE"/>
        <uses provider="org.jhotdraw.color.CIELCHabColorSpace.toCIEXYZ(float[],float[])_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.eventDispatched(AWTEvent)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.popupMenuWillBecomeVisible(PopupMenuEvent)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.eventDispatched(AWTEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.popupMenuCanceled(PopupMenuEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.popupMenuWillBecomeInvisible(PopupMenuEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.popupMenuWillBecomeVisible(PopupMenuEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton$Handler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(Action)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JMenu)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JMenuItem)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.addSeparator()_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getColumnCount()_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupAnchor()_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.removeAll()_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setAction(Action,Rectangle)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setColumnCount(int,boolean)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setItemFont(Font)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.updateItemFont(MenuElement)_CM">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.JPopupButton()_CN">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.action_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.actionArea_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.CLOSE_AUTOMATICALLY_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.columnCount_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.COLUMN_COUNT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.handler_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.isCloseAutomatically_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.itemFont_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.ITEM_FONT_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.ITEM_FONT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.popupAnchor_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.popupBecameInvisible_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.popupMenu_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(Action)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JMenu)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.add(JMenuItem)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.addSeparator()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getColumnCount()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupAlpha()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupAnchor()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.getPopupMenu()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.handleMousePressed(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.performAction(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.removeAll()_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setAction(Action,Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setColumnCount(int,boolean)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setItemFont(Font)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupAlpha(float)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupAnchor(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.setPopupMenu(JPopupMenu)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.showPopup(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.togglePopup(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JPopupButton.updateItemFont(MenuElement)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI$PropertyHandler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.chooser_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.defaultChoosers_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.defaultTransferHandler_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.mainPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.previewListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.previewMouseListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.previewPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.propertyChangeListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.createDefaultChoosers()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.createPropertyChangeListener()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installDefaults()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installListeners()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installPreviewPanel()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.installUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallDefaultChoosers()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallDefaults()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallListeners()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.uninstallUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteColorChooserUI.updateColorChooserPanels(AbstractColorChooserPanel[],AbstractColorChooserPanel[])_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator$Handler.activityModelAdded(ActivityManagerEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator$Handler.activityModelRemoved(ActivityManagerEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator$Handler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.JActivityIndicator()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.handler_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.labels_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.manager_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.models_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.progressBar_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.progressOwner_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.addActivityModel(ActivityModel)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.getActivityManager()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.getActivityOwner()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.getPreferredSize()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.removeActivityModel(ActivityModel)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.setActivityManager(ActivityManager)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.setActivityOwner(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateActivityModels()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateIndeterminate()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateProgressBar()_MT">
    </element>
    <element name="org.jhotdraw.gui.JActivityIndicator.updateToolTip()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getFormatted(String,Object[])_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.drawFill(Graphics2D)_CM">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.DiamondFigure()_CN">
        <uses provider="org.jhotdraw.draw.DiamondFigure.DiamondFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.DiamondFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.IS_QUADRATIC_FE">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.rectangle_FE">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.drawFill(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.DiamondFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.DiamondFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.EllipseFigure()_CN">
        <uses provider="org.jhotdraw.draw.EllipseFigure.EllipseFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.EllipseFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.ellipse_FE">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.EllipseFigure.ellipse_FE"/>
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.EllipseFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.drawFill(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.getBounds()_CM">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.RectangleFigure()_CN">
        <uses provider="org.jhotdraw.draw.RectangleFigure.RectangleFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.RectangleFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.rectangle_FE">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.RectangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RectangleFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.clone()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.createHandles(int)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.drawFill(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getArcHeight()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getArcWidth()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getBounds()_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.read(DOMInput)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArc(double,double)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)_CM">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)_CM">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure()_CN">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.RoundRectangleFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.ARC_HEIGHT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.ARC_WIDTH_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.DEFAULT_ARC_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getArcHeight()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getArcWidth()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getBounds()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.read(DOMInput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArc(double,double)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)_CM"/>
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcHeight(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setArcWidth(double)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.draw.RoundRectangleFigure.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.draw.RoundRectangleFigure.roundrect_FE"/>
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.write(DOMOutput)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.contains(Point2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.findCompatibleConnector(Connector,boolean)_CM">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.findConnector(Point2D,ConnectionFigure)_CM">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.getBounds()_CM">
        <uses provider="org.jhotdraw.draw.TriangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.transform(AffineTransform)_CM">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.TriangleFigure()_CN">
        <uses provider="org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double)_CN">
        <uses provider="org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double,Orientation)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double,Orientation)_CN">
        <uses provider="org.jhotdraw.draw.TriangleFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.TriangleFigure(Orientation)_CN">
        <uses provider="org.jhotdraw.draw.TriangleFigure.TriangleFigure(double,double,double,double,Orientation)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.rectangle_FE">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.chop(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.rectangle_FE"/>
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.createHandles(int)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.getBezierPath()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.getBezierPath()_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.createStrokedShape(Shape)_MT"/>
        <uses provider="org.jhotdraw.geom.GrowStroke.GrowStroke(double,double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.getBezierPath()_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.getBounds()_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.getBounds()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.draw.TriangleFigure.rectangle_FE"/>
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.TriangleFigure.transform(AffineTransform)_MT">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addEnum(String,Enum_T_)_CM">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.enumToValueMap_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.valueToEnumMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addEnumClass(String,Class_?_)_CM">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.enumClassToNameMap_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.nameToEnumClassMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addStorable(String,DOMStorable)_CM">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.classToNameMap_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.nameToPrototypeMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addStorableClass(String,Class_?_)_CM">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.classToNameMap_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.nameToPrototypeMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.create(String)_CM">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.nameToPrototypeMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.DefaultDOMFactory()_CN">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.classToNameMap_FE">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.enumClassToNameMap_FE">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.enumToValueMap_FE">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.nameToEnumClassMap_FE">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.nameToPrototypeMap_FE">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.valueToEnumMap_FE">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addEnum(String,Enum_T_)_MT">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addEnumClass(String,Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addStorable(String,DOMStorable)_MT">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.addStorableClass(String,Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.create(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.createEnum(String,String)_MT">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.nameToEnumClassMap_FE"/>
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.valueToEnumMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.getEnumName(Enum)_MT">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.enumClassToNameMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.getEnumValue(Enum)_MT">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.enumToValueMap_FE"/>
    </element>
    <element name="org.jhotdraw.xml.DefaultDOMFactory.getName(Object)_MT">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.classToNameMap_FE"/>
        <uses provider="org.jhotdraw.xml.JavaPrimitivesDOMFactory.getName(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.closeElement()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,boolean)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,double)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,int)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getBuilder()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.documentBuilder_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getElementCount()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getElementCount(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getInheritedAttribute(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getTagName()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getText()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.getText(String)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getText(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.getText(Node,StringBuilder)_MT"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.openElement(int)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.openElement(String)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.openElement(String,int)_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.readObject()_CM">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.readObject(int)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.readObject(int)_CM">
        <uses provider="org.jhotdraw.xml.DOMStorable.read(DOMInput)_MT"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.getTagName()_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.openElement(int)_CM"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.idobjects_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.read(DOMInput)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.JavaxDOMInput(DOMFactory,InputStream)_CN">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.document_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.idobjects_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.getBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.JavaxDOMInput(DOMFactory,Reader)_CN">
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.document_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.idobjects_FE"/>
        <uses provider="org.jhotdraw.xml.JavaxDOMInput.getBuilder()_CM"/>
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.current_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.document_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.documentBuilder_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.factory_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.idobjects_FE">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.closeElement()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getAttribute(String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getBuilder()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getElementCount()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getElementCount(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getInheritedAttribute(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getTagName()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getText()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getText(Node,StringBuilder)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.getText(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.openElement(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.openElement(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.openElement(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.readObject()_MT">
    </element>
    <element name="org.jhotdraw.xml.JavaxDOMInput.readObject(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.closeElement()_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,boolean)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,double)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,int)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getElementCount()_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getElementCount(String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getInheritedAttribute(String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getTagName()_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getText()_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.getText(String)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getText(String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.openElement(int)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String,int)_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.readObject()_CM">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_CM">
        <uses provider="org.jhotdraw.xml.DOMStorable.read(DOMInput)_MT"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.closeElement()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.getTagName()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.openElement(int)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.idobjects_FE"/>
        <uses provider="org.jhotdraw.xml.DOMFactory.read(DOMInput)_CM"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,InputStream)_CN">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)_CN"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)_CN">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.current_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.document_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.factory_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.idobjects_FE"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.current_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.document_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.factory_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.idobjects_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.stack_FE">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.closeElement()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.dispose()_MT">
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.document_FE"/>
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,boolean)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,double)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getAttribute(String,String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getElementCount()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getElementCount(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getInheritedAttribute(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getTagName()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getText()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.getText(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.openElement(int)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.openElement(String,int)_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.readObject()_MT">
    </element>
    <element name="org.jhotdraw.xml.NanoXMLDOMInput.readObject(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createEnhancedGeometryEllipseFigure(Rectangle2D,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createEnhancedGeometryRectangleFigure(Rectangle2D,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createGroupFigure()_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGGroupFigure.ODGGroupFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createLineFigure(Point2D,Point2D,Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createPathFigure(BezierPath[],Map_AttributeKey_?_,Object_)_CM">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createPolygonFigure(Point2D[],Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createPolylineFigure(Point2D[],Map_AttributeKey_?_,Object_)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.nextEnhancedCoordinate(StreamPosTokenizer,String)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.getStartPosition()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextChar()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushCharBack(int)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readAllBytes(InputStream)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readCustomShapeElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readDrawingElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readPageElement(IXMLElement)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readCaptionElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readCircleElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readCustomShapeElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readEllipseElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readGElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readLineElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readMeasureElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readPathElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readPolygonElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readPolylineElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readRectElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readRegularPolygonElement(IXMLElement)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readFrameElement(IXMLElement)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readDrawingElement(IXMLElement)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.document_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.figures_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readFrameElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readLineElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPageElement(IXMLElement)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readElement(IXMLElement)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.figures_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPolygonElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPolylineElement(IXMLElement)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toEnhancedPath(String)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)_CN"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parsePlusAsNumber()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.nextEnhancedCoordinate(StreamPosTokenizer,String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toNumber(String)_CM">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toPath(String)_CM">
        <uses provider="org.jhotdraw.geom.BezierPath$Node.mask_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.x_FE"/>
        <uses provider="org.jhotdraw.geom.BezierPath$Node.y_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.getStartPosition()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)_CN"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parsePlusAsNumber()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toTransform(String)_CM">
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nextToken()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseNumbers()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.pushBack()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.resetSyntax()_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.whitespaceChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.wordChars(int,int)_CM"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.StreamPosTokenizer(Reader)_CN"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.nval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.sval_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.ttype_FE"/>
        <uses provider="org.jhotdraw.io.StreamPosTokenizer.parseExponents()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toUnitFactor(String)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toWSOrCommaSeparatedArray(String)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.ODGInputFormat()_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.document_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.figures_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createEnhancedGeometryEllipseFigure(Rectangle2D,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createEnhancedGeometryRectangleFigure(Rectangle2D,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createGroupFigure()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createLineFigure(Point2D,Point2D,Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createPathFigure(BezierPath[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createPolygonFigure(Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.createPolylineFigure(Point2D[],Map_AttributeKey_?_,Object_)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.getFileFilter()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.getInputFormatAccessory()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.isDataFlavorSupported(DataFlavor)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.nextEnhancedCoordinate(StreamPosTokenizer,String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readAllBytes(InputStream)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(Transferable,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(InputStream,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(URI,Drawing)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.read(URI,Drawing,boolean)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.read(File,Drawing,boolean)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readAllBytes(InputStream)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readCaptionElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readCircleElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readCommonDrawingShapeAttributes(IXMLElement,HashMap_AttributeKey_?_,Object_)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.NAME_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toTransform(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readCustomShapeElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readDrawingElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readEllipseElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readEnhancedGeometryElement(IXMLElement,Map_AttributeKey_?_,Object_,Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readFiguresFromDocumentContent(InputStream,Drawing,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readFrameElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readGElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.draw.CompositeFigure.basicAdd(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readElement(IXMLElement)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.createGroupFigure()_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readLineElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readMeasureElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPageElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPathElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toPath(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readViewBoxTransform(IXMLElement)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPolygonElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toNumber(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toWSOrCommaSeparatedArray(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readViewBoxTransform(IXMLElement)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readPolylineElement(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toNumber(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toWSOrCommaSeparatedArray(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.styles_FE"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.readViewBoxTransform(IXMLElement)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readRectElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readRegularPolygonElement(IXMLElement)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.readViewBoxTransform(IXMLElement)_MT">
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toNumber(String)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.io.ODGInputFormat.toWSOrCommaSeparatedArray(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toEnhancedPath(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toLength(String,double)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toNumber(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toPath(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toTransform(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toUnitFactor(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.io.ODGInputFormat.toWSOrCommaSeparatedArray(String)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure)_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.PathTool(SVGPathFigure,SVGBezierFigure,Map_AttributeKey_?_,Object_)_CN">
        <uses provider="org.jhotdraw.samples.odg.PathTool.pathPrototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.pathPrototype_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.createPath()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.applyDefaultAttributesTo(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.figures.SVGPathFigure.clone()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.PathTool.pathPrototype_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.PathTool.finishCreation(BezierFigure,DrawingView)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.PathTool.createPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.drawFigure(Graphics2D)_CM">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.getFillPaint(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.getStrokePaint(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.getStroke(Figure)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.ODGAttributedFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedFigure.AbstractAttributedFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.OPACITY_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.drawFigure(Graphics2D)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.drawFigure(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGAttributedFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.ODGPathFigure()_CN">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.AbstractAttributedCompositeFigure()_CN"/>
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.setDefaults(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.ODGBezierFigure()_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.cachedPath_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.add(int,Figure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.clone()_MT">
        <uses provider="org.jhotdraw.draw.AbstractAttributedCompositeFigure.clone()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.contains(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.createHandles(int)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.createHandles(ODGPathFigure,int)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathOutlineHandle.ODGPathOutlineHandle(ODGPathFigure)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.draw(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.OPACITY_FE"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.drawFigure(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getDrawingArea()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.drawFigure(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.getFillPaint(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.getStrokePaint(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.ODGAttributeKeys.getStroke(Figure)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.drawFill(Graphics2D)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.drawStroke(Graphics2D)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.drawFill(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getChild(int)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.drawStroke(Graphics2D)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.findCompatibleConnector(Connector,boolean)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.findConnector(Point2D,ConnectionFigure)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.flattenTransform()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.flattenTransform()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGBezierFigure.transform(AffineTransform)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.getActions(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.getChild(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.getDrawingArea()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getPath()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.getPath()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.cachedPath_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.getTransformRestoreData()_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getChild(int)_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.handleMouseClick(Point2D,MouseEvent,DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.invalidate()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.cachedPath_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.isEmpty()_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.restoreTransformTo(Object)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.getChild(int)_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.set(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.setAttributeOnChildren(AttributeKey_T_,T)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.setBounds(Point2D,Point2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGPathFigure.transform(AffineTransform)_MT">
        <uses provider="org.jhotdraw.draw.AttributeKey.getClone(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.transform(AffineTransform)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGPathFigure.invalidate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.draw(Graphics2D)_CM">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.ODGRectRadiusHandle(Figure)_CN">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.DEBUG_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.edit_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.OFFSET_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.originalArc2D_FE">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.basicGetBounds()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.locate()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.getToolTipText(Point)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.locate()_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcHeight()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArcWidth()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getBounds()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.trackEnd(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArc()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.originalArc2D_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.trackStart(Point,int)_MT">
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getArc()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.originalArc2D_FE"/>
    </element>
    <element name="org.jhotdraw.samples.odg.figures.ODGRectRadiusHandle.trackStep(Point,Point,int)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.getBounds()_MT"/>
        <uses provider="org.jhotdraw.samples.odg.figures.ODGRectFigure.setArc(double,double)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.getPropertyName()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.propertyName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.viewListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isEnabled()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isMayCreateView()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.mayCreateView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setEnabled(boolean)_CM">
        <uses provider="org.jhotdraw.app.Application.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.getApplication()_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.isMayCreateView()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setMayCreateView(boolean)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.mayCreateView_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setPropertyName(String)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.updateView()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.propertyName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.viewListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateEnabled()_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.setEnabled(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateView()_CM">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateView(View,View)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.updateView()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.view_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.updateEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.Application.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.app_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.applicationListener_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.viewListener_FE"/>
        <uses provider="org.jhotdraw.beans.WeakPropertyChangeListener.WeakPropertyChangeListener(PropertyChangeListener)_CN"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.view_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.app_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.applicationListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.combinedEnabled_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.ENABLED_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.mayCreateView_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.propertyName_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.view_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.viewListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.VIEW_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.getActiveView()_MT">
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.app_FE"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.view_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.getApplication()_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.app_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.getPropertyName()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.isMayCreateView()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setMayCreateView(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.setPropertyName(String)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateView()_MT">
    </element>
    <element name="org.jhotdraw.app.action.AbstractViewAction.updateView(View,View)_MT">
    </element>
    <element name="org.jhotdraw.gui.DisclosureIcon.CURRENT_STATE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.DisclosureIcon.STATE_COUNT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.DisclosureIcon.getIconHeight()_MT">
    </element>
    <element name="org.jhotdraw.gui.DisclosureIcon.getIconWidth()_MT">
    </element>
    <element name="org.jhotdraw.gui.DisclosureIcon.paintIcon(Component,Graphics,int,int)_MT">
        <uses provider="org.jhotdraw.gui.DisclosureIcon.getIconHeight()_MT"/>
        <uses provider="org.jhotdraw.gui.DisclosureIcon.getIconWidth()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.getActionMap(Class_?_,String)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.installLazyActionMap(JComponent,Class_?_,String)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.PaletteLazyActionMap(Class_?_)_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loader_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loader_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.allKeys()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.clear()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.get(Object)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.getActionMap(Class_?_,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.installLazyActionMap(JComponent,Class_?_,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.keys()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loader_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.put(Action)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.put(Object,Action)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.put(Object,Action)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.remove(Object)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.setParent(ActionMap)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.size()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.loadIfNecessary()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getCachedDefaults()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getUIOfType(ComponentUI,Class_?_)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColors(JComponent,String,String)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getColor(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColors(JComponent,String,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.cachedDefaults_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.instance_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBoolean(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getCachedDefaults()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.cachedDefaults_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getColor(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getDescription()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getID()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInsets(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.instance_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInt(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getName()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getUIOfType(ComponentUI,Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.initComponentDefaults(UIDefaults)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColors(JComponent,String,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.isNativeLookAndFeel()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.isSupportedLookAndFeel()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.createUI(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.installDefaults()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getColor(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInsets(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBoolean(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.installDefaults()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.paintBackground(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteTextFieldUI.paintSafely(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$2ToolBarDialog.createRootPane()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$2ToolBarDialog.PaletteToolBarUI$2ToolBarDialog(Dialog,String,boolean)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$2ToolBarDialog.PaletteToolBarUI$2ToolBarDialog(Frame,String,boolean)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$2ToolBarDialog.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$2ToolBarDialog.createRootPane()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.PaletteToolBarUI$Actions(String)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.NAVIGATE_DOWN_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.NAVIGATE_LEFT_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.NAVIGATE_RIGHT_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.NAVIGATE_UP_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.getName()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Actions.getName()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.PaletteToolBarUI$DockingListener(JToolBar)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.isDragging_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.origin_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.toolBar_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mouseClicked(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseClicked(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.origin_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.toolBar_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.origin_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseDragged(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mouseEntered(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseEntered(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mouseExited(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseExited(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mouseMoved(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseMoved(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.toolBar_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mousePressed(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.origin_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DockingListener.toolBar_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.origin_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseReleased(MouseEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.PaletteToolBarUI$DragWindow(Window)_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.borderColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.offset_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.orientation_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.getBorderColor()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.borderColor_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.getInsets()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.getOffset()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.offset_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setBorderColor(Color)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.borderColor_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOffset(Point)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.offset_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOrientation(int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.offset_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.orientation_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOffset(Point)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$FrameListener.windowClosing(WindowEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.componentAdded(ContainerEvent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.focusGained(FocusEvent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.propertyChange(PropertyChangeEvent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isArmed_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.origin_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.componentAdded(ContainerEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.componentRemoved(ContainerEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.focusGained(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.focusLost(FocusEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseClicked(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.origin_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isArmed_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseEntered(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseExited(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseMoved(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isArmed_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.isDragging_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.origin_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$PropertyListener.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.propertyChange(PropertyChangeEvent)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$ToolBarContListener.componentAdded(ContainerEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.componentAdded(ContainerEvent)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$ToolBarContListener.componentRemoved(ContainerEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.componentRemoved(ContainerEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$ToolBarFocusListener.focusGained(FocusEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.focusGained(FocusEvent)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$ToolBarFocusListener.focusLost(FocusEvent)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.focusLost(FocusEvent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFloatingFrame(JToolBar)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFloatingWindow(JToolBar)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createNonRolloverBorder()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createNonRolloverToggleBorder()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createRolloverBorder()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingColor()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getFloatingColor()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installNonRolloverBorders(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installNormalBorders(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installRolloverBorders(JComponent)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isRolloverBorders()_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.paintDragWindow(Graphics)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.getBorderColor()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToNonRollover(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToNormal(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToRollover(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setDockingColor(Color)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloatingColor(Color)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setRolloverBorders(boolean)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.borderTable_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.constraintBeforeFloating_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingBorderColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSensitivity_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dockingSource_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.downKey_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dragWindow_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floating_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingBorderColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingColor_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingFrame_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingToolBar_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingX_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatingY_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.focusedCompIndex_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.FOCUSED_COMP_INDEX_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.handler_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isFloatingAllowed_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.IS_DIVIDER_DRAWN_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.IS_ROLLOVER_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.leftKey_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.nonRolloverBorder_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.nonRolloverToggleBorder_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.propertyListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.rightKey_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.rolloverBorder_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.rolloverBorders_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.rolloverTable_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.toolBar_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.toolBarContListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.toolBarFocusListener_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.TOOLBAR_ICON_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.TOOLBAR_INSETS_OVERRIDE_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.TOOLBAR_TEXT_ICON_GAP_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.upKey_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.calculateConstraint()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.canDock(Component,Point)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createDockingListener()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$Handler.tb_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createDragWindow(JToolBar)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFloatingFrame(JToolBar)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFloatingWindow(JToolBar)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createFrameListener()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createNonRolloverBorder()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createNonRolloverToggleBorder()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createPropertyListener()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createRolloverBorder()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createToolBarContListener()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createToolBarFocusListener()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.createUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.dragTo(Point,Point)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.getOffset()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setBorderColor(Color)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOffset(Point)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOrientation(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.floatAt(Point,Point)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.getOffset()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOffset(Point)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingColor()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getDockingConstraint(Component,Point)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getFloatingColor()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getHandler()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getInputMap(int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.get(Object)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.getRolloverBorder(AbstractButton)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installDefaults()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installBorder(JComponent,String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.installColorsAndFont(JComponent,String,String,String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installKeyboardActions()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installListeners()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installNonRolloverBorders(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installNormalBorders(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installRolloverBorders(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.installUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isBlocked(Component,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isFloating()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.isRolloverBorders()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.loadActionMap(PaletteLazyActionMap)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLazyActionMap.put(Action)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.mapConstraintToOrientation(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.navigateFocusedComp(int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.paintDragWindow(Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToNonRollover(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToNormal(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setBorderToRollover(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setDockingColor(Color)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloating(boolean,Point)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloatingColor(Color)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setFloatingLocation(int,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setOrientation(int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI$DragWindow.setOrientation(int)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.setRolloverBorders(boolean)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallDefaults()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallKeyboardActions()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallListeners()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteToolBarUI.uninstallUI(JComponent)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.addTreeModelListener(TreeModelListener)_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesChanged(Object,Object[],int[],Object[])_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesInserted(Object,Object[],int[],Object[])_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesRemoved(Object,Object[],int[],Object[])_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,Object[],int[],Object[])_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,TreePath)_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.getListeners(Class_T_)_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.getTreeModelListeners()_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.removeTreeModelListener(TreeModelListener)_CM">
        <uses provider="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.listenerList_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.addTreeModelListener(TreeModelListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesChanged(Object,Object[],int[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesInserted(Object,Object[],int[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeNodesRemoved(Object,Object[],int[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,Object[],int[],Object[])_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.fireTreeStructureChanged(Object,TreePath)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.getListeners(Class_T_)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.getTreeModelListeners()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.AbstractFontChooserModel.removeTreeModelListener(TreeModelListener)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.initComponents()_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionList_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsScrollPane_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.faceLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.faceList_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.facesPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.facesScrollPane_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familiesPanel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familiesScrollPane_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familyLabel_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familyList_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.labels_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.PaletteFontChooserSelectionPanel()_CN">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.initComponents()_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionList_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsScrollPane_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.faceList_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.facesScrollPane_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familiesScrollPane_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familyList_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.labels_FE"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionList_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionsScrollPane_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.faceLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.faceList_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.facesPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.facesScrollPane_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familiesPanel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familiesScrollPane_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familyLabel_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familyList_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.labels_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.getCollectionList()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.collectionList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.getFaceList()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.faceList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.getFamilyList()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.familyList_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserSelectionPanel.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.propertyChange(PropertyChangeEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeNodesChanged(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeNodesInserted(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeNodesRemoved(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteFontChooserUI$FontChooserHandler.treeStructureChanged(TreeModelEvent)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.drawStringUnderlineCharAt(JComponent,Graphics,String,int,int,int)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics,Font)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics,Font)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.isLeftToRight(Component)_CM">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.beginGraphics(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.drawStringUnderlineCharAt(JComponent,Graphics,String,int,int,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.endGraphics(Graphics2D,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.getFontMetrics(JComponent,Graphics,Font)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.PaletteUtilities.isLeftToRight(Component)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.setFonts(Font[])_CM">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.FontCollectionNode(String)_CN"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.families()_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.FontFaceNode(Font)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.DefaultFontChooserModel()_CN">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.DefaultFontChooserModel(Font[])_CN">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.root_FE">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.collectFamiliesNamed(ArrayList_FontFamilyNode_,String[])_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getChild(Object,int)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getChildCount(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getIndexOfChild(Object,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.getRoot()_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.isEditable(MutableTreeNode)_MT">
        <uses provider="org.jhotdraw.gui.fontchooser.FontCollectionNode.isEditable()_MT"/>
        <uses provider="org.jhotdraw.gui.fontchooser.FontFaceNode.isEditable()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.isLeaf(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.setFonts(Font[])_MT">
    </element>
    <element name="org.jhotdraw.gui.fontchooser.DefaultFontChooserModel.valueForPathChanged(TreePath,Object)_MT">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.BLOCK_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.CENTER_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.LEADING_FE">
    </element>
    <element name="org.jhotdraw.draw.AttributeKeys$Alignment.TRAILING_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.AlignToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.AlignToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.AlignToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.AlignToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.ArrangeToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.ArrangeToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.draw.action.BringToFrontAction.BringToFrontAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.draw.action.SendToBackAction.SendToBackAction(DrawingEditor)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.ArrangeToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.ArrangeToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.FigureToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBar.labels_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBar.labels_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setMaximumFractionDigits(int)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.setUsesScientificNotation(boolean)_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.JavaNumberFormatter(double,double,double,boolean,String)_CN"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getBeanDescriptor()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getBdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getDefaultEventIndex()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.defaultEventIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getDefaultPropertyIndex()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.defaultPropertyIndex_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getEventSetDescriptors()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getEdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getIcon(int)_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconColor16_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconColor32_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconMono16_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconMono32_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameC16_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameC32_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameM16_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameM32_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getMethodDescriptors()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getMdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getPropertyDescriptors()_CM">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getPdescriptor()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.beanDescriptor_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.defaultEventIndex_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.defaultPropertyIndex_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.eventSets_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconColor16_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconColor32_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconMono16_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconMono32_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameC16_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameC32_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameM16_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.iconNameM32_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.methods_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.properties_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getBdescriptor()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.beanDescriptor_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getBeanDescriptor()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getDefaultEventIndex()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getDefaultPropertyIndex()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getEdescriptor()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.eventSets_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getEventSetDescriptors()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getIcon(int)_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getMdescriptor()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.methods_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getMethodDescriptors()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getPdescriptor()_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.properties_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FigureToolBarBeanInfo.getPropertyDescriptors()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.FontToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.gui.JFontChooser.loadAllFonts()_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureToolBarButton(AbstractButton,String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteButtonUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteSliderUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.text.FontFormatter.createFormatterFactory()_CM"/>
        <uses provider="org.jhotdraw.text.JavaNumberFormatter.createFormatterFactory(double,double,double)_CM"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.getDefaultDisclosureState()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.FontToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.FontToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.initComponents()_CM">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.LinkToolBar()_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.LinkToolBar.labels_FE"/>
        <uses provider="org.jhotdraw.samples.svg.gui.LinkToolBar.getID()_MT"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.displayer_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.labels_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.createDisclosedComponent(int)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getBorder(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLabelUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteFormattedTextFieldUI.createUI(JComponent)_CM"/>
        <uses provider="org.jhotdraw.samples.svg.gui.LinkToolBar.labels_FE"/>
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.getID()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.samples.svg.gui.LinkToolBar.setEditor(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.samples.svg.gui.LinkToolBar.displayer_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.DefaultDOMStorableSample$MyObject(DefaultDOMStorableSample)_CN">
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.DefaultDOMStorableSample$MyObject(String)_CN">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE">
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.getName()_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.setName(String)_MT">
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,String)_CM"/>
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.name_FE"/>
    </element>
    <element name="org.jhotdraw.samples.mini.DefaultDOMStorableSample.main(String[])_MT">
        <uses provider="org.jhotdraw.xml.DefaultDOMFactory.DefaultDOMFactory()_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.readObject()_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMInput.NanoXMLDOMInput(DOMFactory,Reader)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.save(Writer)_CM"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.NanoXMLDOMOutput(DOMFactory)_CN"/>
        <uses provider="org.jhotdraw.xml.NanoXMLDOMOutput.writeObject(Object)_MT"/>
        <uses provider="org.jhotdraw.samples.mini.DefaultDOMStorableSample$MyObject.getName()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.byte_0_FE">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.char_0_FE">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.invoke(Object,Method,Object[])_MT">
        <uses provider="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyEquals(Object,Object)_MT"/>
        <uses provider="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyHashCode(Object)_MT"/>
        <uses provider="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyToString(Object)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.nullValueOf(Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyEquals(Object,Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyHashCode(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener$DefaultInvoker.proxyToString(Object)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.create(Class_?_,String,Object,String)_CM">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.create(Method,Object,Method)_CM">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.getListenerMethod(Class_?_,String)_CM">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.GenericListener()_CN">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.create(Class_?_,String,Object,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.create(Method,Object,Method)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.getListenerMethod(Class_?_,String)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.getTargetMethod(Object,String,Class_?_[])_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.raiseToPublicClass(Method)_MT">
    </element>
    <element name="org.jhotdraw.gui.event.GenericListener.raiseToPublicClass(Method,Class_?_)_MT">
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.getDecoratorPath(Figure)_CM">
        <uses provider="org.jhotdraw.draw.decoration.PerpendicularBar.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.getDecoratorPathRadius(Figure)_CM">
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.PerpendicularBar()_CN">
        <uses provider="org.jhotdraw.draw.decoration.PerpendicularBar.PerpendicularBar(double)_CN"/>
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.PerpendicularBar(double)_CN">
        <uses provider="org.jhotdraw.draw.decoration.PerpendicularBar.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.height_FE">
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.getDecoratorPath(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.getDecoratorPathRadius(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.read(DOMInput)_MT">
        <uses provider="org.jhotdraw.xml.DOMInput.getAttribute(String,int)_CM"/>
        <uses provider="org.jhotdraw.draw.decoration.PerpendicularBar.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.decoration.PerpendicularBar.write(DOMOutput)_MT">
        <uses provider="org.jhotdraw.xml.DOMOutput.addAttribute(String,double)_CM"/>
        <uses provider="org.jhotdraw.draw.decoration.PerpendicularBar.height_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.createActionMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.createInputMap()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editCopy()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editCut()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editDelete()_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectedFigures()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editDuplicate()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editPaste()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireAreaInvalidated(Rectangle)_CM">
        <uses provider="org.jhotdraw.draw.event.ToolListener.areaInvalidated(ToolEvent)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireAreaInvalidated(Rectangle2D)_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
        <uses provider="org.jhotdraw.draw.event.ToolListener.boundsInvalidated(ToolEvent)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireToolDone()_CM">
        <uses provider="org.jhotdraw.draw.event.ToolListener.toolDone(ToolEvent)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireToolStarted(DrawingView)_CM">
        <uses provider="org.jhotdraw.draw.event.ToolListener.toolStarted(ToolEvent)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getActionMap()_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.actionMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getInputMap()_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.inputMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.keyPressed(KeyEvent)_CM">
        <uses provider="org.jhotdraw.draw.DrawingEditor.findView(Container)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.setActiveView(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActionMap()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.getInputMap()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.fireToolDone()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.actionMap_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editor_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.inputMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.maybeFireBoundsInvalidated(Rectangle)_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getDrawing()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.setActionMap(ActionMap)_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.actionMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.setInputMap(InputMap)_CM">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.inputMap_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.supportsHandleInteraction()_CM">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.AbstractTool()_CN">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.createActionMap()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.createInputMap()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.setActionMap(ActionMap)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.setInputMap(InputMap)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.anchor_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editorProxy_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.actionMap_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.anchor_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editor_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editorProxy_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.inputMap_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.isActive_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.isWorking_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getDrawingViews()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.repaintHandles()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editor_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editorProxy_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.isActive_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.addToolListener(ToolListener)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.addUndoableEditListener(UndoableEditListener)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.constrainPoint(Point)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.constrainPoint(Point2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.createActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.createInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.deactivate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editor_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editorProxy_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.isActive_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.draw(Graphics2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editCopy()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editCut()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editDelete()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editDuplicate()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.editPaste()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireAreaInvalidated(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireAreaInvalidated(Rectangle2D)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireBoundsInvalidated(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireToolDone()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.fireToolStarted(DrawingView)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getActionMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getDrawing()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getEditor()_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getInputMap()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getToolTipText(DrawingView,MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.getView()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editor_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.isActive()_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.isActive_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.keyPressed(KeyEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.keyReleased(KeyEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.fireToolDone()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.keyTyped(KeyEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.maybeFireBoundsInvalidated(Rectangle)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.mouseClicked(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.mouseEntered(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.mouseExited(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.mouseMoved(MouseEvent)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.findView(Container)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.requestFocus()_MT"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.fireToolStarted(DrawingView)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.anchor_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.editor_FE"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.isWorking_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.isWorking_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.removeToolListener(ToolListener)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.removeUndoableEditListener(UndoableEditListener)_MT">
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.listenerList_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.setActionMap(ActionMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.setInputMap(InputMap)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.supportsHandleInteraction()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.updateCursor(DrawingView,Point)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.findFigure(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.findHandle(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isSelectable()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.AbstractTool.viewToDrawing(Point)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.viewToDrawing(Point)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.getView()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.creationFinished(Figure)_CM">
        <uses provider="org.jhotdraw.draw.DrawingView.addToSelection(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.isSelectable()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation()_CM"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation()_CM">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.setToolDoneAfterCreation(boolean)_CM">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure)_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.CreationTool(Figure,Map_AttributeKey_?_,Object_,String)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.AbstractTool()_CN"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.minimalSize_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.minimalSizeTreshold_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.presentationName_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototypeAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.CreationTool(String)_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.CreationTool(String,Map_AttributeKey_?_,Object_)_CN">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.CreationTool(String,Map_AttributeKey_?_,Object_,String)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.AbstractTool()_CN"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.minimalSize_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.minimalSizeTreshold_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.presentationName_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototypeAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.minimalSize_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.minimalSizeTreshold_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.presentationName_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.prototype_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.prototypeAttributes_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.activate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.activate(DrawingEditor)_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.createFigure()_MT">
        <uses provider="org.jhotdraw.draw.Figure.clone()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingEditor.applyDefaultAttributesTo(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototype_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototypeAttributes_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.creationFinished(Figure)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.deactivate(DrawingEditor)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.layout()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.deactivate(DrawingEditor)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.getAddedFigure()_MT">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.getCreatedFigure()_MT">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.getPrototype()_MT">
        <uses provider="org.jhotdraw.draw.tool.CreationTool.prototype_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation()_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.mouseDragged(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.mousePressed(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.add(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.clearSelection()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.AbstractTool.mousePressed(MouseEvent)_MT"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createFigure()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.mouseReleased(MouseEvent)_MT">
        <uses provider="org.jhotdraw.draw.Drawing.remove(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.changed()_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.willChange()_CM"/>
        <uses provider="org.jhotdraw.draw.CompositeFigure.layout()_CM"/>
        <uses provider="org.jhotdraw.draw.Drawing.fireUndoableEditHappened(UndoableEdit)_CM"/>
        <uses provider="org.jhotdraw.draw.Figure.getBounds()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.creationFinished(Figure)_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.isToolDoneAfterCreation()_CM"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.createdFigure_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.minimalSize_FE"/>
        <uses provider="org.jhotdraw.draw.tool.CreationTool.minimalSizeTreshold_FE"/>
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.setToolDoneAfterCreation(boolean)_MT">
    </element>
    <element name="org.jhotdraw.draw.tool.CreationTool.updateCursor(DrawingView,Point)_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.setCursor(Cursor)_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.isEnabled()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.updateOpenRecentMenu()_CM">
        <uses provider="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.openRecentActions_FE"/>
        <uses provider="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.openRecentMenu_FE"/>
        <uses provider="org.jhotdraw.app.action.file.OpenRecentFileAction.OpenRecentFileAction(Application,URI)_CN"/>
        <uses provider="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.view_FE"/>
        <uses provider="org.jhotdraw.app.action.file.LoadRecentFileAction.LoadRecentFileAction(Application,View,URI)_CN"/>
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.AbstractApplication$OpenRecentMenuHandler(JMenu,View)_CN">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.openRecentActions_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.openRecentMenu_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.view_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.dispose()_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.openRecentActions_FE"/>
        <uses provider="org.jhotdraw.app.Disposable.dispose()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.propertyChange(PropertyChangeEvent)_MT">
        <uses provider="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.updateOpenRecentMenu()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication$OpenRecentMenuHandler.updateOpenRecentMenu()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addAction(JMenu,Action)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addAction(JMenu,View,String)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addMenuItem(JMenu,JMenuItem)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.configure(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getActionMap(View)_CM">
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getActiveView()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getExportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getImportChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenURIsFromMainArgs(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getSaveChooser(View)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.init()_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.launch(String[])_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.maybeAddSeparator(JMenu)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setActionMap(ActionMap)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setActiveView(View)_CM">
        <uses provider="org.jhotdraw.app.View.activate()_CM"/>
        <uses provider="org.jhotdraw.app.View.deactivate()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.start(List_URI_)_CM">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.AbstractApplication()_CN">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.actionMap_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.activeView_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.exportChooser_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.importChooser_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.isEnabled_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.labels_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.maxRecentFilesCount_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.model_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.openChooser_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.prefs_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.recentURIs_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.saveChooser_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.unmodifiableViews_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.views_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.VIEW_COUNT_PROPERTY_FE">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.add(View)_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.initView(Application,View)_MT"/>
        <uses provider="org.jhotdraw.app.View.getApplication()_CM"/>
        <uses provider="org.jhotdraw.app.View.init()_CM"/>
        <uses provider="org.jhotdraw.app.View.setApplication(Application)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addAction(JMenu,Action)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addAction(JMenu,View,String)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addMenuItem(JMenu,JMenuItem)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addPalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addRecentURI(URI)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.addWindow(Window,View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.basicCreateView()_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.createView()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.clearRecentURIs()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.configure(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.createContainer()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.createOpenRecentFileMenu(View)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureMenu(JMenuItem,String)_MT"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.createView()_MT">
        <uses provider="org.jhotdraw.app.View.setActionMap(ActionMap)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.createViewActionMap(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.destroy()_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.destroyApplication(Application)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.dispose(View)_MT">
        <uses provider="org.jhotdraw.app.View.dispose()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.destroyView(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getAction(View,String)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getActionMap(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getActiveView()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getCopyright()_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.getCopyright()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getExportChooser(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createExportChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getImportChooser(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createImportChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getModel()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getName()_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.getName()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenChooser(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createOpenChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getOpenURIsFromMainArgs(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getRecentURIs()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getSaveChooser(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createSaveChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getVersion()_MT">
        <uses provider="org.jhotdraw.app.ApplicationModel.getVersion()_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.getViews()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.init()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.initLabels()_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.isEnabled()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.launch(String[])_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.maybeAddSeparator(JMenu)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.remove(View)_MT">
        <uses provider="org.jhotdraw.app.View.setApplication(Application)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.removePalette(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.removeTrailingSeparators(JMenu)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.removeWindow(Window)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setActionMap(ActionMap)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setActiveView(View)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setEnabled(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.setModel(ApplicationModel)_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.start(List_URI_)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.stop()_MT">
    </element>
    <element name="org.jhotdraw.app.AbstractApplication.views()_MT">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.createActionMap(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.createToolBars(Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.createActionMap(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.createToolBars(Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.EmptyApplicationModel.getMenuBuilder()_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractFindAction.AbstractFindAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractFindAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.AbstractFindAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.installViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.redoActionPropertyListener_FE"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.uninstallViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.redoActionPropertyListener_FE"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.RedoAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.labels_FE"/>
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.redoActionPropertyListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.labels_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.redoActionPropertyListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.getRealRedoAction()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.getRealRedoAction()_MT">
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.installViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.uninstallViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.getRealRedoAction()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.RedoAction.updateView(View,View)_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.updateView(View,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.RedoAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.installViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.redoActionPropertyListener_FE"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.uninstallViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.redoActionPropertyListener_FE"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.UndoAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.labels_FE"/>
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.redoActionPropertyListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.labels_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.redoActionPropertyListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.getRealUndoAction()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.getRealUndoAction()_MT">
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.installViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.uninstallViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.getRealUndoAction()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.edit.UndoAction.updateView(View,View)_MT">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.updateView(View,View)_CM"/>
        <uses provider="org.jhotdraw.app.action.edit.UndoAction.updateEnabledState()_MT"/>
        <uses provider="org.jhotdraw.app.View.getActionMap()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.CloseFileAction.CloseFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.AbstractSaveUnsavedChangesAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.CloseFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.CloseFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.CloseFileAction.doIt(View)_MT">
        <uses provider="org.jhotdraw.app.Application.dispose(View)_CM"/>
        <uses provider="org.jhotdraw.app.View.getApplication()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.isProposeFileName()_CM">
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.setProposeFileName(boolean)_CM">
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.ExportFileAction(Application,View,boolean)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.oldFocusOwner_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getString(String)_CM"/>
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.showSheet(URIChooser,Component,String,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.getSelectedURI()_CM"/>
        <uses provider="org.jhotdraw.gui.URIChooser.setSelectedURI(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.oldFocusOwner_FE"/>
        <uses provider="org.jhotdraw.app.Application.getExportChooser(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.ExportFileAction.proposeFileName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.exportView(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.isProposeFileName()_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.ExportFileAction.setProposeFileName(boolean)_MT">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.LoadFileAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.AbstractSaveUnsavedChangesAction(Application,View)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.doIt(View)_MT">
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.gui.JSheet.showOpenSheet(URIChooser,Component,SheetListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.LoadFileAction.getChooser(View)_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.getChooser(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.createOpenChooser(Application,View)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadFileAction.loadViewFromURI(View,URI,URIChooser)_MT">
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.LoadRecentFileAction(Application,View,URI)_CN">
        <uses provider="org.jhotdraw.net.URIUtil.getName(URI)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractSaveUnsavedChangesAction.AbstractSaveUnsavedChangesAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.file.LoadRecentFileAction.uri_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.uri_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.LoadRecentFileAction.doIt(View)_MT">
        <uses provider="org.jhotdraw.app.Application.getModel()_CM"/>
        <uses provider="org.jhotdraw.app.Application.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.getActiveView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.show(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.getComponent()_CM"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.hasUnsavedChanges()_CM"/>
        <uses provider="org.jhotdraw.app.View.setEnabled(boolean)_CM"/>
        <uses provider="org.jhotdraw.app.View.setMultipleOpenId(int)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
        <uses provider="org.jhotdraw.app.action.file.LoadRecentFileAction.uri_FE"/>
        <uses provider="org.jhotdraw.app.Application.getViews()_CM"/>
        <uses provider="org.jhotdraw.app.ApplicationModel.isAllowMultipleViewsPerURI()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application)_CN">
        <uses provider="org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application,String)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.app.action.AbstractApplicationAction.AbstractApplicationAction(Application)_CN"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.NewFileAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.NewFileAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.NewFileAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.Application.add(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.createView()_CM"/>
        <uses provider="org.jhotdraw.app.Application.show(View)_CM"/>
        <uses provider="org.jhotdraw.app.Application.views()_CM"/>
        <uses provider="org.jhotdraw.app.View.execute(Runnable)_CM"/>
        <uses provider="org.jhotdraw.app.View.getMultipleOpenId()_CM"/>
        <uses provider="org.jhotdraw.app.View.setMultipleOpenId(int)_CM"/>
        <uses provider="org.jhotdraw.app.View.getURI()_CM"/>
    </element>
    <element name="org.jhotdraw.app.action.file.NewWindowAction.NewWindowAction(Application)_CN">
        <uses provider="org.jhotdraw.app.action.file.NewFileAction.NewFileAction(Application,String)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.NewWindowAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.NewWindowAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAsAction.SaveFileAsAction(Application,View)_CN">
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.configureAction(Action,String)_MT"/>
        <uses provider="org.jhotdraw.util.ResourceBundleUtil.getBundle(String)_CM"/>
        <uses provider="org.jhotdraw.app.action.file.SaveFileAction.SaveFileAction(Application,View,boolean)_CN"/>
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAsAction.ID_FE">
    </element>
    <element name="org.jhotdraw.app.action.file.SaveFileAsAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.uninstallViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.viewListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.ToggleViewPropertyAction(Application,View,String)_CN">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.ToggleViewPropertyAction(Application,View,String,Class_?_,Object,Object)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.deselectedPropertyValue_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.getterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.parameterClass_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.propertyName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.selectedPropertyValue_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.setterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.viewListener_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.updateView()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.deselectedPropertyValue_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.getterName_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.parameterClass_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.propertyName_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.selectedPropertyValue_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.setterName_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.viewListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.deselectedPropertyValue_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.parameterClass_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.selectedPropertyValue_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.setterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.getCurrentValue()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.getCurrentValue()_MT">
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.getterName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.installViewListeners(View)_MT">
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.viewListener_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.updateView()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.uninstallViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.view.ToggleViewPropertyAction.updateView()_MT">
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.getterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.propertyName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ToggleViewPropertyAction.selectedPropertyValue_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.uninstallViewListeners(View)_CM">
        <uses provider="org.jhotdraw.app.View.removePropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.uninstallViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.viewListener_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.ViewPropertyAction(Application,View,String,Class_?_,Object)_CN">
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.AbstractViewAction(Application,View)_CN"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.getterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.parameterClass_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.propertyName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.propertyValue_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.setterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.viewListener_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.updateSelectedState()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.ViewPropertyAction(Application,View,String,Object)_CN">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.getterName_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.parameterClass_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.propertyName_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.propertyValue_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.setterName_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.viewListener_FE">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.parameterClass_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.propertyValue_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.setterName_FE"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.installViewListeners(View)_MT">
        <uses provider="org.jhotdraw.app.View.addPropertyChangeListener(PropertyChangeListener)_CM"/>
        <uses provider="org.jhotdraw.app.action.AbstractViewAction.installViewListeners(View)_CM"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.viewListener_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.updateSelectedState()_MT"/>
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.uninstallViewListeners(View)_MT">
    </element>
    <element name="org.jhotdraw.app.action.view.ViewPropertyAction.updateSelectedState()_MT">
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.getterName_FE"/>
        <uses provider="org.jhotdraw.app.action.view.ViewPropertyAction.propertyValue_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.DrawingColorChooserHandler(DrawingEditor,AttributeKey_Color_,JColorChooser,JPopupMenu)_CN">
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.colorChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.key_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.popupMenu_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.updateEnabledState()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.colorChooser_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.isUpdating_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.key_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.popupMenu_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.actionPerformed(ActionEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.popupMenu_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.applySelectedColorToFigures()_MT">
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.colorChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.key_FE"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.stateChanged(ChangeEvent)_MT">
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.isUpdating_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.applySelectedColorToFigures()_MT"/>
    </element>
    <element name="org.jhotdraw.draw.action.DrawingColorChooserHandler.updateEnabledState()_MT">
        <uses provider="org.jhotdraw.draw.DrawingEditor.isEnabled()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getDrawing()_CM"/>
        <uses provider="org.jhotdraw.draw.DrawingView.getSelectionCount()_CM"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.colorChooser_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.isUpdating_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.key_FE"/>
        <uses provider="org.jhotdraw.draw.action.DrawingColorChooserHandler.popupMenu_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.configureSlider(int,JSlider)_CM">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.unconfigureSlider(JSlider)_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteColorSliderUI.createUI(JComponent)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.PaletteColorSliderModel(ColorSpace)_CN">
        <uses provider="org.jhotdraw.color.DefaultColorSliderModel.DefaultColorSliderModel(ColorSpace)_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSliderModel.configureSlider(int,JSlider)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.initComponents()_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersComboBox_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersHolder_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.uninstallChooserPanel(JColorChooser)_CM">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersHolder_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.PaletteColorSlidersChooser()_CN">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.lastSelectedPanelIndex_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.serialVersionUID_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersComboBox_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersHolder_FE">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.buildChooser()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getFont(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PalettePanelUI.createUI(JComponent)_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteCMYKChooser.PaletteCMYKChooser()_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.initComponents()_CM"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.lastSelectedPanelIndex_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersComboBox_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersHolder_FE"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteHSBChooser.PaletteHSBChooser()_CN"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteRGBChooser.PaletteRGBChooser()_CN"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getDisplayName()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getString(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getLargeDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getInstance()_MT"/>
        <uses provider="org.jhotdraw.gui.plaf.palette.PaletteLookAndFeel.getIcon(String)_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getSmallDisplayIcon()_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.getLargeDisplayIcon()_MT"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.initComponents()_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.installChooserPanel(JColorChooser)_MT">
        <uses provider="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.slidersHolder_FE"/>
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.uninstallChooserPanel(JColorChooser)_MT">
    </element>
    <element name="org.jhotdraw.gui.plaf.palette.colorchooser.PaletteColorSlidersChooser.updateChooser()_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM">
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.suppressIcons_FE"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addAboutItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addClearFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addClipboardItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addCloseFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addExitItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addExportFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addFindItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addHelpItems(JMenu,Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addLoadFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addNewFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addNewWindowItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOpenFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherEditItems(JMenu,Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherFileItems(JMenu,Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherMenus(List_JMenu_,Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherViewItems(JMenu,Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherWindowItems(JMenu,Application,View)_CM">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addPreferencesItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addPrintFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addSaveFileItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addSelectionItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addUndoItems(JMenu,Application,View)_CM">
        <uses provider="org.jhotdraw.app.Application.getActionMap(View)_CM"/>
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_CM"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.suppressIcons_FE">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.add(JMenu,Action)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addAboutItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addClearFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addClipboardItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addCloseFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addExitItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addExportFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addFindItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addHelpItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addLoadFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addNewFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addNewWindowItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOpenFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherEditItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherMenus(List_JMenu_,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherViewItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addOtherWindowItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addPreferencesItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addPrintFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addSaveFileItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addSelectionItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.addUndoItems(JMenu,Application,View)_MT">
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.isSuppressIcons()_MT">
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.suppressIcons_FE"/>
    </element>
    <element name="org.jhotdraw.app.DefaultMenuBuilder.setSuppressIcons(boolean)_MT">
        <uses provider="org.jhotdraw.app.DefaultMenuBuilder.suppressIcons_FE"/>
    </element>
</ldi>